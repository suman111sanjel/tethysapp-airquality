{"version":3,"sources":["webpack:///./src/views/SocioEconomic.vue?0e75","webpack:///./src/components/common/NavBar.vue","webpack:///./src/components/common/NavBar.vue?2f6d","webpack:///./src/components/common/mapLagend.vue?8749","webpack:///./src/components/RGBProducts/mapComponentRGBProduct.vue?4c62","webpack:///./src/views/airqualitynpRecent.vue?b29e","webpack:///./src/components/Forecast/mapControlsForecast.vue?4f90","webpack:///./src/components/Archive/mapComponentArchive.vue?d953","webpack:///./src/components/Forecast/chartComponentForecast.vue?0389","webpack:///./src/components/Emission/EmissionStatistics.vue?87fd","webpack:///./src/assets/InfographicsIcon/female.svg","webpack:///./src/store/api/api.js","webpack:///./src/views/emission.vue","webpack:///./src/views/emission.vue?f636","webpack:///./src/store/api/emission.js","webpack:///./src/store/modules/emission.js","webpack:///./src/airqualityEmission.js","webpack:///./src/components/Recent/TabBodyRecent.vue?c6a7","webpack:///./src/components/SocioEconomic/mapComponentSocioEconomic.vue?7dd0","webpack:///./src/components/SocioEconomic/TabBodySocioEconomic.vue?ea79","webpack:///./src/components/SocioEconomic/chartComponentSocioEconomic.vue?e7a8","webpack:///./src/views/airqualityRGBProducts.vue?8ff7","webpack:///./src/components/Forecast/TabBodyForecast.vue?8ccf","webpack:///./src/assets/layers.svg","webpack:///./src/components/Archive/mapControlsArchive.vue?886b","webpack:///./src/components/common/Tabs.vue","webpack:///./src/config.js","webpack:///./src/components/Recent/TabBodyRecent.vue","webpack:///./src/components/common/LayerSwitcherControl.vue","webpack:///./src/components/common/LayerSwitcherControl.vue?de63","webpack:///./src/components/Recent/chartComponentRecent.vue","webpack:///./src/utils/utils.js","webpack:///./src/utils/helpers.js","webpack:///./src/utils/dataRecent.js","webpack:///./src/components/Recent/chartComponentRecent.vue?e810","webpack:///./src/components/Recent/mapControlsRecent.vue","webpack:///./src/components/common/selectLocation.vue","webpack:///./src/components/common/selectLocation.vue?a4c4","webpack:///./src/components/Recent/mapControlsRecent.vue?1027","webpack:///./src/components/Recent/mapComponentRecent.vue","webpack:///./src/utils/customLegend.js","webpack:///./src/components/common/PrintMap.vue","webpack:///./src/components/common/mapLagend.vue","webpack:///./src/components/common/mapLagend.vue?7ff7","webpack:///./src/components/common/PrintMap.vue?567c","webpack:///./src/components/Recent/mapComponentRecent.vue?7726","webpack:///./src/components/Recent/TabBodyRecent.vue?7b82","webpack:///./src/components/Archive/TabBodyArchive.vue","webpack:///./src/components/Archive/chartComponentArchive.vue","webpack:///./src/utils/dataArchive.js","webpack:///./src/components/Archive/chartComponentArchive.vue?981f","webpack:///./src/components/Archive/mapControlsArchive.vue","webpack:///./src/components/Archive/mapControlsArchive.vue?ecc5","webpack:///./src/components/Archive/mapComponentArchive.vue","webpack:///./src/utils/data.js","webpack:///./src/components/Archive/mapComponentArchive.vue?dd4c","webpack:///./src/components/Archive/TabBodyArchive.vue?83c4","webpack:///./src/components/Forecast/TabBodyForecast.vue","webpack:///./src/components/Forecast/chartComponentForecast.vue","webpack:///./src/utils/dataForecast.js","webpack:///./src/components/Forecast/chartComponentForecast.vue?262a","webpack:///./src/components/Forecast/mapControlsForecast.vue","webpack:///./src/components/Forecast/mapControlsForecast.vue?7cec","webpack:///./src/components/Forecast/mapComponentForecast.vue","webpack:///./src/components/Forecast/mapComponentForecast.vue?7fe7","webpack:///./src/components/Forecast/TabBodyForecast.vue?93ba","webpack:///./src/components/Emission/TabBodyEmission.vue","webpack:///./src/components/Emission/chartComponentEmission.vue","webpack:///./src/components/Emission/chartComponentEmission.vue?726d","webpack:///./src/components/Emission/mapControlsEmission.vue","webpack:///./src/utils/dataEmission.js","webpack:///./src/components/Emission/mapControlsEmission.vue?d7cd","webpack:///./src/components/Emission/mapComponentEmission.vue","webpack:///./src/components/Emission/mapComponentEmission.vue?6e25","webpack:///./src/components/Emission/EmissionStatistics.vue","webpack:///./src/components/Emission/EmissionStatistics.vue?1137","webpack:///./src/components/Emission/TabBodyEmission.vue?300d","webpack:///./src/components/SocioEconomic/TabBodySocioEconomic.vue","webpack:///./src/components/SocioEconomic/chartComponentSocioEconomic.vue","webpack:///./src/utils/dataSocioEconomic.js","webpack:///./src/components/SocioEconomic/chartComponentSocioEconomic.vue?f131","webpack:///./src/components/SocioEconomic/mapControlsSocioEconomic.vue","webpack:///./src/components/SocioEconomic/mapControlsSocioEconomic.vue?8992","webpack:///./src/components/SocioEconomic/mapComponentSocioEconomic.vue","webpack:///./src/components/SocioEconomic/mapComponentSocioEconomic.vue?ed91","webpack:///./src/components/SocioEconomic/LayerSwitcherControl.vue","webpack:///./src/components/SocioEconomic/LayerSwitcherControl.vue?bad1","webpack:///./src/components/SocioEconomic/TabBodySocioEconomic.vue?0aba","webpack:///./src/components/RGBProducts/TabBodyRGBProducts.vue","webpack:///./src/components/RGBProducts/mapComponentRGBProduct.vue","webpack:///./src/utils/dataRGBProducts.js","webpack:///./src/components/RGBProducts/mapComponentRGBProduct.vue?c092","webpack:///./src/components/RGBProducts/TabBodyRGBProducts.vue?6fa2","webpack:///./src/components/common/Tabs.vue?3044","webpack:///./src/views/airqualitynpArchive.vue","webpack:///./src/views/airqualitynpArchive.vue?26b5","webpack:///./src/store/modules/airqualityArchive.js","webpack:///./src/airqualityArchive.js","webpack:///./src/components/Recent/mapComponentRecent.vue?f80e","webpack:///./src/assets/InfographicsIcon/old.svg","webpack:///./src/utils/ReDirect.js","webpack:///./src/components/SocioEconomic/mapControlsSocioEconomic.vue?c870","webpack:///./src/assets/markers_default.png","webpack:///./src/views/SocioEconomic.vue","webpack:///./src/views/SocioEconomic.vue?5611","webpack:///./src/store/modules/SocioEconomic.js","webpack:///./src/airqualitySocioEconomic.js","webpack:///./src/store/api/SocioEconomic.js","webpack:///./src/views/emission.vue?f93f","webpack:///./src/components/Emission/mapControlsEmission.vue?c180","webpack:///./src/components/common/Tabs.vue?27a6","webpack:///./src/components/common/LayerSwitcherControl.vue?1393","webpack:///./src/views/airqualityRGBProducts.vue","webpack:///./src/views/airqualityRGBProducts.vue?71e2","webpack:///./src/store/modules/airqualityRGBProducts.js","webpack:///./src/airqualityRGBProducts.js","webpack:///./src/store/actionType.js","webpack:///./src/views/airqualitynpRecent.vue","webpack:///./src/views/airqualitynpRecent.vue?7d50","webpack:///./src/store/modules/airqualityRecent.js","webpack:///./src/airqualityRecent.js","webpack:///./src/components/Archive/chartComponentArchive.vue?c1fc","webpack:///./src/components/Archive/TabBodyArchive.vue?f48a","webpack:///./src/components/common/PrintMap.vue?4883","webpack:///./src/views/airqualitynpArchive.vue?1df7","webpack:///./src/components/Recent/mapControlsRecent.vue?b061","webpack:///./src/assets/logo-icimod.png","webpack:///./src/assets/InfographicsIcon/male.svg","webpack:///./src/assets/AODAeroNet.jpg","webpack:///./src/views/airqualitynpForecast.vue?fac7","webpack:///./src/assets/InfographicsIcon/population.svg","webpack:///./src/components/Recent/chartComponentRecent.vue?b9bd","webpack:///./src/assets/legendAMIDustRGB.png","webpack:///./src/views/airqualitynpForecast.vue","webpack:///./src/views/airqualitynpForecast.vue?d50d","webpack:///./src/store/modules/airqualityForecast.js","webpack:///./src/airqualityForecast.js","webpack:///./src/components/common/NavBar.vue?130a","webpack:///./src/components/Emission/TabBodyEmission.vue?c7f9","webpack:///./src/store/api/airquality.js","webpack:///./src/components/common/selectLocation.vue?b88c","webpack:///./src/assets/usembassyPm2p5.jpg","webpack:///./src/components/Forecast/mapComponentForecast.vue?45ea","webpack:///./src/components/Emission/chartComponentEmission.vue?4d75","webpack:///./src/components/Emission/mapComponentEmission.vue?6650","webpack:///./src/components/RGBProducts/TabBodyRGBProducts.vue?ed57","webpack:///./src/assets/rgblegend.jpg","webpack:///./src/assets/InfographicsIcon/child.svg","webpack:///./src/components/SocioEconomic/LayerSwitcherControl.vue?5907"],"names":["class","src","alt","style","href","type","centerDialogVisible","icon","title","width","center","footer","name","data","LangVal","__exports__","render","module","exports","actionBase","axios","create","baseURL","Action","Base","postApiWithoutToken","action","param","Promise","resolve","reject","post","then","res","err","console","log","getApiWithoutToken","get","getApiWithoutTokenAbsoluteURL","activeTab","currentTab","components","NavBar","Tabs","selectedTab","computed","this","getCurrentTab","methods","beforeCreate","ReDirect","getCascaderOptions","CascaderOptions","response","PostChartDataProcess","ChartDataProcess","GETLayerInfoStat","LayerInfoStat","GETCountryGeojson","GeoServerBase","createStore","state","CascaderInventriesComparison","CascaderSectorContribution","CascaderSectorShare","CascaderTimeSeries","selectInteractionObj","TimeSeriesLayerCollection","vectorLayerSource","mapObject","mutations","setCascaderInventriesComparison","payload","setCascaderSectorContribution","setCascaderSectorShare","setCascaderTimeSeries","setSelectInteractionObj","setVectorLayerSource","setmapObject","appendTimeSeriesLayerCollection","push","actions","context","commit","InventriesComparison","SectorContribution","SectorShare","TimeSeries","GetLayerStatInfo","getters","modules","library","add","faHandPointer","faTimes","faMapMarkerAlt","faDrawPolygon","faPrint","faInfoCircle","app","createApp","emission","component","FontAwesomeIcon","use","store","ElementPlus","mount","height","changePage","key","label","TethysAppName","TethysAPIAppName","threddDataSourceVar","window","location","origin","threddDataSource","GeoServerHostLVar","GeoServerHost","DefaultMaskWMS","DefaultPlotInfo","colorScheme","BBOX","tickSpan","Resolution","span","IndexValue","ref","visualizationIn","id","rows","animated","downloadImage","imageInfo","url","$on","emitter","on","$once","once","$off","off","$emit","emit","AllMonths","0","1","2","3","4","5","6","7","8","9","10","11","MapHelper","getURLParameters","vars","split","replace","m","value","dateisoFormatForLevelFormatter__monthly","isoDate","dateObj","Date","parseISO8601","FullYear","getFullYear","toString","FullMonth","getMonth","dateisoFormatForLevelFormatter__dekad","dt","getDate","Highcharts","dateFormat","dateisoFormatForLevelFormatter__quartly","threeMonths","slice","myApp","startDate","setDate","endDate","recentDate","length","checkInt","parseInt","YYYY","MM_index","DD","dObject","IndexColors","APICollection","layerData","Aeronet","USEmbassyAOD","getGeoJSONofStations","getGeoJsonForOneSatation","getAllStationsID","api","commonAPI","RegionGeojson","AOIPolygon","GetMapImage","GetImage","SlicedFromCatalog","constants","recent","layerId","TerraModisTrueColor","VIIRS_SNPPTrueColor","PM_AeronetAOD","PM_usembassy","GEOS_PM2p5","TerraModisAOD","O3_GEOS","O3_usembassy","SO2_GEOS","NO2_GEOS","CO_GEOS","Nep_Gov_PM1","Nep_Gov_PM10","Nep_Gov_PM2p5","Nep_Gov_tsp","AllBindedLayersList","OnlyOnce","getLayer","layer","i","getProperties","formatDateWithHHMM","date","d","month","day","year","hour","getHours","minute","getMinutes","join","formatDate","SLDRGB","TrueColorImage","catalog","useSLD","isTimeDimensionLayer","SLD","getStartDate","getEndDate","VisibleDivBind","threddLayerProp","visible","opacity","legendPath","trueColorLegendImage","ThreddsDataServerVersion","serverType","timeSeries","alignTimeSlider","timeSliderSize","showlegend","showControlPanel","zIndex","source","params","mask","CropOrMask","changeWMSProxy","DefaultSations","aeronetAOD","pm2p5Embassy","o3Embassy","NepalStation","cascaderObj","children","stationData","ModelClass","ModelClassDataList","typeName","defaultStation","chart","stationName","subTitle","SeriesName","YaxisLabel","XaxisLabel","plotType","layerProperties","initilize","makeRequest","method","xhr","XMLHttpRequest","open","onload","status","statusText","onerror","send","datetimePointChartObj","SeriesData","plotColor","DataPeriod","marginLeft","backgroundColor","plotBorderColor","plotBorderWidth","text","fontSize","useHTML","subtitle","series","lineWidth","marker","enabled","symbol","radius","xAxis","align","tickLength","lineColor","yAxis","rotation","offset","x","gridLineWidth","legend","credits","plotOptions","color","lang","noData","exporting","buttons","contextButton","menuItems","allowHTML","datetimeChartObj","forceDownload","fileName","responseType","urlCreator","URL","webkitURL","imageUrl","createObjectURL","tag","document","createElement","download","body","appendChild","click","removeChild","AirPollutionWatchApp","props","Number","required","downloadFileName","renderVisualization","mapControlVariable","select_by","kk","getCascaderInfoObject","parameter_by_pollutant_value","ObservationDatavisualization","stationObjectValue","interestedObje","filter","obj1","obj2","stationId","getBindedLayer","setVisibleDivBind","stId","StartDate","EndDate","PostGetStationData","parsedData","stationObject","childrenData","stdata","folder_name","data_period","highchartsObj","TimeSeriesPlot","WKT","WKTType","default_level_value","layerBind","SourceParam","SourceURL","getCurrentLayer","getParams","forEach","val","getUrls","DATADIR","LAYER","LAYERS","wkt","TimeSeriesRasterQuery","chartDetail","geom","unit","created","mounted","HcObject","updateChart","label-position","label-width","size","prop","placeholder","options","item","disabled","location_by","default_location","is_AOI_Feature_selected","location_by_pollutant_value1","cascaderData","location_by_pollutant_value2","location_by_pollutant_value3","location_by_pollutant_value4","radioValue","isDisable","Select_Option_Default_Location","is_parameter_by_pollutant_value_stationData","parameter_by_pollutant_value_stationData_val1","ObservationStationOptions","parameter_by_pollutant_value_stationData_val2","parameter_by_pollutant_value_stationData_val3","parameter_by_pollutant_value_stationData_val4","computeData","parameter_by_location","Boolean","Array","featureSelectorDeleteUpdate","wktfeaturegeom","geometryType","featureExtent","selectInteraction","SelectByOption","getFeatures","getLength","features","f","format","writeGeometry","getGeometry","dataProjection","featureProjection","getType","readFeature","getExtent","set","countSelectedFeature","WorkingVectorLayer","getSource","wktValue","clear","$notify","message","watch","SelectDefaultLocation","newVal","oldVal","selNewValObj","Feature","geoJSON","addFeature","removeFeature","SelectLocationBy","elem","$refs","defaultLocation","$el","dispatchEvent","Event","maskCoordinate","data__layer__initilize__Recent","PROXY_PREFIX","view","getView","resolution","getResolutionForExtent","getSize","zoom","getZoomForResolution","ol_extent","setTimeout","animate","Math","min","location_by_wktValue","location_by_geometryType","location_by_default_level_value","SetLayerOfSelectByParameterLayer","that","getStationInfoObject","AddLayerToLayerList","jj","ObservationStationOption","SelectByParameterPollutant","newPollutant","oldPollutant","Object","keys","setVisible","onChangePollutantsOnSelectByLocation","selectLocation","Param","CatalogSlicingParam","data_ext","addRasterLayerToMap","wmsList","catalogURl","slicingParam","PostSlicedFromCatalog","responseData","resPonseParsed","isTrue","LegendParameter","legendWMS","isArray","encodeURIComponent","OLEXTLegendObject","typeGeom","Style","image","Icon","crossOrigin","timedimensionTilePara","SLD_BODY","Newlayer","TimeDimensionTile","AddRemoveLegendFunction","addLegend","removeLegend","init","addThreddsLayer","l5","LayerSwitcher","properties","setCrop","setMask","COLORSCALERANGE","STYLES","JSON","stringify","parameter_by_location__1","parameter_by_location__2","parameter_by_location__3","parameter_by_location__4","IsViz","setLayerVisible","count","GeoServerWMSURL","WMSURLWithRequestParameter","lyr","le","layerObj","ImageWMS","addLayer","sd","ed","regionOrCountry","dataResponse","InitilizeStationDataOnLoad","SelectDataPeriod","sdt","edt","getDefaultGroundObservation","defalultSt","getCityData","ol_legend_Legend","prototype","refresh","table","_listElement","innerHTML","margin","canvas","getCanvas","ctx","getContext","textAlign","textBaseline","ratio","ol_has_DEVICE_PIXEL_RATIO","font","_titleStyle","getFont","textWidth","_measureText","getTitle","_items","r","_textStyle","max","bind","heightAccumulator","fillStyle","ol_color_asString","getFill","getColor","_title","getElement","b","index","_drawText","HTextAndImage","feature","getLegendImage","test","className","row","accumulatedHeight","_style","lineHeight","pixelratio","save","vectorContext","ol_render_toContext","pixelRatio","ol_Feature","ol_geom_Point","ol_geom_LineString","ol_geom_Polygon","setProperties","getStyle","s","cx","cy","sx","sy","dySave","extent","img","getImage","imgElt","getPhoto","HTMLImageElement","naturalWidth","addEventListener","load","getAnchor","anchor","si","dx","dy","ol_extent_extend","setStyle","rect","clip","getGeometryFunction","restore","drawGeometry","PrintMapComponentData","PrintMapDialogVisible","before-close","handleClose","append-to-body","top","model","MapPrintValidateForm","rules","autocomplete","AccordionActiveName","accordion","CheckSelectAll","legendInfos","Cancel","submitForm","itemVisible","checked1","calculateHeightWidth","Image","imgWidth","imgHeight","LegendUIList","mapLagend","formName","validate","valid","layout","getMapPDFLayout","outputfilename","mapSize","mapResolution","getResolution","mapFrameSizePxl","legendInfos1","curObje","sort","item1","item2","copyOLMapTo","addLegendsTo","pos","legendBoxPxl","columnWidth","drawPolygon","northArrowCoordsPxl","drawScaleBar","y","strokeStyle","strokeRect","createMapPDF","setSize","setResolution","frameSize","scaling","resetForm","resetFields","backToNormal","done","target","querySelector","setTarget","deproxifyWMSLayers","DPI","mmToPixel","dim_mm","topMargin","pageWidth","pageHeight","mapWidth","mapHeight","mapHeightPxl","legendHeightPercent","legendHeightPxl","legendPosPxl","arrowBaseWidth","arrowHeight","arrowTop","arrowCenterX","northArrowCoords","pageDim","mapFrameSize","map","pt","fillRect","querySelectorAll","mapCanvas","parentNode","globalAlpha","matrix","transform","match","setTransform","drawImage","addImageProcess","setAttribute","maxHeight","offsetX","offsetY","labelHeight","getLegendBoxDimension","legendBoxWidth","legendBoxHeight","fillText","itemHeight","left","closePath","maxBoxHeight","bottomMostLegendItemY","lastLegendItemPos","reduce","prevSize","coords","beginPath","moveTo","lineTo","fill","rightBottomPos","getScaleBarInfo","rightOffset","bottomOffset","stroke","filename","pdf","undefined","setFont","setFontType","setFontSize","addImage","toDataURL","error","scaleLine","clientWidth","innerText","proxifyWMSLayers","layerobj","AllLayersList","timeDimensionLayer","currUrl","includes","setUrls","updateSize","obj","Properties","objj","deactivated","PrintMap","mapObj","HighLightedLayer","MajorBasin","AllLayers","selectedFilesOnAYear","LegendObject","mapInitilization","esri_world_topomap","Tile","XYZ","attributions","View","Map","layers","renderer","controls","attribution","extend","fit","setMapObject","legendObjectCollection","legendObjectEnabled","lObj","addGeoCodingAndInteractionBar","search","SearchNominatim","polygon","reverse","position","GeoCodingAndDrawLayer","Vector","removePreviousSearchFeature","osm_id","UpDateVectorLayerStyle","forEachFeature","StyleObj","Stroke","Fill","anchorXUnits","anchorYUnits","lineDash","Circle","setWorkingVectorLayer","addControl","e","geojson","getProjection","coordinate","getZoom","addPrintMapFunctionality","PrintButton","html","handleClick","olExtLegentItem","LayerSwitcherClick","drawer","olextPrintFunction","CanvasTitle","Text","legendCtrl","CanvasScaleLine","printControl","PrintDialog","setOrientation","orientation","print","imageWidth","imageHeight","toBlob","blob","imageType","quality","warn","beforeMount","LayerSwitcherControl","chartComponentRecent","mapControlsRecent","mapComponentRecent","filterCoodrdinate","archiveDate","bd","copiedDate","archive","O3_TROPOMI","SO2_TROPOMI","NO2_TROPOMI","CO_TROPOMI","CO_TROPOMI_SERVIR","NO2_AST","SO2_AST","AeronetAODStyleFun","AeronetStyle","RegularShape","points","angle","USEmbassyPM25StyleFun","USEmbassyAODStyle","PI","USEmbassyO3StyleFun","RGBComposite","showAnimationButton","animationPlot","title_text","bbox","positionLegend","aoi","createGIF","CreateGIFImage","plotInfo","assign","TimeZone","Product","Source","getForecastWMSList","result","parser","DOMParser","xmlDoc","parseFromString","interestedDate","forecastDate","DimensionTag","getElementsByTagName","DateHavingCatalog","getAttribute","result1","parser1","xmlDoc1","dataset","expandTrigger","data__layer__initilize__Archive","data__layer__initilize__Forecast","hasData","animationDownloadFunction","isProcessing","getIsProcessing","setIsProcessing","fps","fpsInput","propList","AllDateAndTimeList","abcT","currentFormat","aTime","timeButtom_text","dateisoFormatForLevel","localDateTime","wms_url","WMSURL","wms_layer","wms_time","dateisoFormat","wms_style","wms_NUMCOLORBANDS","NUMCOLORBANDS","ColorScale","bottom_text","RGB","collectProp","layersDetail","PostCreateGIFMapImage","DownLoadURL","GetAnimationImage","startDateArchive","endDateArchive","forecast","LayerCollectionObjet","Recent","Archive","Forecast","cascaderObject","otherval","styleFunction","NotificationWhenAdded","mainbar","Bar","setPosition","editbar","toggleOne","group","sbar","selectCtrl","getInteraction","info","interaction","hitTolerance","bar","autoActivate","active","setSelectInteraction","setSelectedLayerObj","pedit","fedit","geometryFunction","coordinates","geometry","nbpts","setCoordinates","concat","removeLastPoint","finishDrawing","handleAddFeature","evt","coordi","getCoordinates","area","outputArea","round","li","LineString","outputLength","collapsed","getInventory","Inventory","chartComponentArchive","mapControlsArchive","mapComponentArchive","forecasteDate","WRF_Chem_PM","WRF_Chem_O3","WRF_Chem_SO2","WRF_Chem_NO2","WRF_Chem_CO","formatForecastDate","isNoData","OnlyOnceForInitialCompute","recentPollutant","changeDataPeriod","ForcastdateFormat","runDate","SliceFromCatalogForecast","a","isDataThere","addVectorLayerToMap","GeoJSON","GeoJSONParse","objFeature","stationOnCascaderObject","isDatathere","legendPathImage","VectorLayer","selId","readFeatures","l3","ClearWMSWithNoDataAndVectorDatawithNodata","total","currentValue","dd","currentValue1","currentIndex","arr","splice","enableTrueColorMap","toUpperCase","chartComponentForecast","mapControlsForecast","mapComponentForecast","gutter","PlotOptionValue","ChangePlotOption","PlotOptions","CascaderValue","RefreshChart","value1","getHCObject","ArgParam","plotBackgroundColor","plotShadow","cascaderValue","tooltip","pointFormat","accessibility","point","valueSuffix","pie","allowPointSelect","cursor","dataLabels","connectorColor","showInLegend","colorByPoint","announceNewData","borderWidth","headerFormat","TickPositioner__yyyy_func","PositionList","TickPositionerFunction","TickPositioner__yyyy","DateFormatter__dd_func","Timeseries","zoomType","dateTimeLabelFormats","tickPositioner","labels","formatter","code","hcObject","HCObject","ChartDiv","destroy","indexVal","pltOpt","casVal","form","inline","getIsInlineFormorNot","inventory","updateMapLayer","pollutants","sectors","initialYear","allYears","unshift","dataSelect","region","periodicity","periodicityOutlook","ensemble","layerList","getLayerPropObj","Invertory","pollutant","selArray","ar","propForSLD","rangeLength","RangeVal","classType","range","retObj","showLegendTitle","parameterName","isInlineForm","onSubmit","getInLineData","$store","setDefaultMap","geoJson","custom-class","drawerAppendToBody","modal","Control","element","getElementById","changeInventory","addTimeDimensionLayer","selectedLayr","checkLayer","ll","EdalSldObj","EDALSLD","WMSList","legendUrl","getEDALSLD","mm","customLegendElement","getLegendHTMLElement","lk","maxHistory","addAdminLayers","countryBoundary","provinceBoundary","DistrictBoundary","PalikaBoundary","l1","l2","l4","RefreshInformation","showStat","shadow","infoHeading","tableDataStat","label-class-name","layerIndex","InterestedLayer","cobj","ind","currentLayerIndex","currentLayerId","layerDetail","chartComponentEmission","mapControlsEmission","mapComponentEmission","EmissionStatistics","CurrentYear","dataOptions","pop_year","isLoading","socioEconomicType","population","Year","categories","reversed","step","opposite","linkedTo","abs","numberFormat","showFirstLabel","colorAxis","populationDensity","AgeGroup","borderRadius","distance","property","operator","PieChartData","PopulationDistribution","PostChartDataProcessSocioEconomic","SocioEconomicObject","PopulationType","ShowAnimationPanel","popYear","TDSHOST","layerIdAnimation","WMS","layerVariableName","year_str","paramObj","showAnimationPannel","addLayerPopulation","SLDAll","aa","always","RefereshSummary","TotalPop","Male","Female","Child","Adult","Old","PostPopulationSummary","totalPop","totalMale","totalFemale","child","chartComponentSocioEconomic","mapControlsSocioEconomic","mapComponentSocioEconomic","RGBProducts","dlcRGB","dustRGB","fireRGB","ntmicroRGB","truecolorRGB","ends_with","AMIRGBProduct","legendAMIDustRGB","mapComponentRGBProduct","String","TabBodyRecent","TabBodyArchive","TabBodyForecast","TabBodyEmission","TabBodySocioEconomic","TabBodyRGBProducts","SelectedLayerObj","LegendItemList","getItems","remove","it","idx","addItem","stringParam","CreateGIFMapImage","PostGet2DImage","ReDirectToSmogAppDotCom","host","RDirect","pathname","reDirectHTTPSToHTTP","SocioEconomic","ChartDataProcessSocioEconomic","GetPopulationSummary","airqualityRGBProducts","BaseUrl","GeoServerBaseVar","CityData","defaultObservationStation","createGIFMapImage","faInfo","dom"],"mappings":"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","file":"static/airquality/js/chunk-common.17de04c6059e88818874.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./SocioEconomic.vue?vue&type=style&index=0&id=25ef2b01&lang=scss\"","<template>\n  <nav class=\"navbar navbar-light template-nabar full-height\">\n    <div class=\"nav-logo-image flexBox\">\n      <div class=\"\">\n        <img class=\"logo-image-style\" src=\"@/assets/logo-icimod.png\" alt=\"\">\n      </div>\n      <div class=\"clearfix hack logo\" style=\"text-align:left; margin-left: 71px;\">\n        <p style=\"margin-top: 0px;\">\n        </p>\n      </div>\n    </div>\n    <a class=\"navbar-brand flexBox\" href=\"\"> Air Quality Watch - HKH</a>\n    <div class=\"col-md-5 flexBox infoIconAbout\">\n      <el-button type=\"primary\" @click=\"centerDialogVisible = true\">\n        <font-awesome-icon icon=\"info-circle\" class=\"infoTabIcon\"/>\n      </el-button>\n    </div>\n    <el-dialog\n        title=\"Air Quality Information System\"\n        v-model=\"centerDialogVisible\"\n        width=\"75%\"\n        center class=\"model-title-header\">\n      <div class=\"aboutContent\">\n        <h3 class=\"headingPara\">About</h3>\n        <p class=\"\">\n          <a href=\"https://www.icimod.org/\">ICIMOD</a> , a regional intergovernmental organization, serves the eight\n          countries of the Hindu Kush Himalaya\n          (HKH) - Afghanistan, Bangladesh, Bhutan, China, India, Myanmar, Nepal, and Pakistan. It aims to influence\n          policies and practices addressing environmental and livelihood challenges in the HKH region. The institute\n          offers a platform for global researchers, practitioners, and policymakers to share knowledge, support\n          evidence-based decisions, and promote regional cooperation.\n        </p>\n\n        <p class=\"\">\n          ICIMOD's fifth Medium-Term Action Plan (MTAP V: 2023-2026) outlines a roadmap for achieving a greener,\n          inclusive, and climate resilient HKH. The plan consists of three Strategic Groups (SGs): Reducing Climate and\n          Environmental Risks, Shaping Green and Resilient Mountain Economies, and Enabling Regional and Global\n          Mechanisms for Sustainable Action. Each SG includes two Action Areas (AAs). SG1 includes Action Area A (AAA)\n          and Action Area B (AAB); AAB focuses on stimulating action for clean air by strengthening institutions,\n          capacity, policies, and investments for air quality improvement.\n        </p>\n        <p class=\"\">\n          Established in 2013 as part of the regional atmosphere program, the Atmospheric Watch Initiative (AWI) was\n          previously known as the Atmosphere Initiative until December 2019. AWI aims to reduce air pollution impacts in\n          the HKH through enhanced knowledge and capacity. It works on understanding emissions sources, atmospheric\n          processes, air pollution impacts, testing mitigation solutions, building cross-border networks, and\n          contributing to policies at various levels.\n        </p>\n        <p class=\"\">\n          The Air Quality Watch-HKH initiative is developing an integrated information platform for air quality data.\n          This platform supports decision-making by professionals responsible for air quality management. It enables\n          users to compare pollutants and observations from different data sources, providing a comprehensive\n          understanding of the situation.\n        </p>\n\n        <h3 class=\"headingPara\">Pollutants name: </h3>\n        <p class=\"\">\n          Aerosol optical depth (AOD), Ozone(O<sub>3</sub>), Sulphur dioxide (SO<sub>2</sub>), Nitrogen dioxide (NO<sub>2</sub>),\n          Carbon-monoxide (CO), Particulate matter (PM<sub>2.5</sub>)\n        </p>\n\n        <h3 class=\"headingPara\">Data/tools categories:</h3>\n\n\n        <div class=\"data-tool\">\n\n          <el-collapse>\n            <el-collapse-item title=\"Recent (Last 24 hours)\" name=\"1\">\n              <div>\n                <a href=\"https://www.airnow.gov/\">AirNow network</a>: https://www.airnow.gov/): The U.S. EPA AirNow\n                program provides air quality data and information at\n                state, national, and globally. AirNow receives real-time air quality observations from over 2,000\n                monitoring stations and collects forecasts for more than 300 cities. In Air Quality Watch-HKH, every day\n                last 24-hour PM<sub>2.5</sub> concentrations were displayed for eight selected stations: Dhaka, Lahore,\n                Kolkata,\n                Yangon, Kathmandu, Islamabad, Kabul, and New Delhi.\n\n\n              </div>\n              <br>\n              <div class=\"\">\n                <a href=\"https://aeronet.gsfc.nasa.gov/\">AERONET</a>: The AErosol RObotic NETwork (AERONET) is a network\n                of ground-based sun photometers that measure aerosol\n                properties. It provides continuous cloud-screened observations of spectral aerosol optical depth (AOD).\n                AOD is regularly measured every 15 minutes 340, 380, 440, 500, 675, 870, 940, and 1020 nm following a\n                direct measurement of the Sun when cloud-free. The AERONET AOD database has been widely used for\n                statistical assessment and evaluation of satellite and model AOD. In Air Quality Watch-HKH, AERONET\n                level 1.5 AOD measured at 500 nm is analyzed and extracted for the following stations: Amity University\n                Gurgaon, Bhola, Bidur, Dhaka University, Gandhi College, IIT Delhi, Kanpur, Karachi, Lahore, Lumbini\n                North, Mandalay MTU.\n              </div>\n              <br>\n              <div class=\"\">\n                <strong>Terra Modis True color</strong> (Red: VIS<sub>0.64</sub> micrometer; Green: VIS<sub>0.51</sub>\n                micrometer, Blue:\n                VIS<sub>0.47</sub> micrometer) is\n                used for layer control over the HKH domain in the dashboard: Suite of Red-Green-Blue (RGB) products from\n                the geostationary Advanced Meteorological Instrument (AMI) for monitoring can help better understand the\n                evolution of dust, fires, haze, smoke, cloud, fog, and snow.\n              </div>\n\n              <div class=\"\">\n                Using the three visible channels of AMI, this system monitors aerosols, clouds, and vegetation. It is\n                designed to imitate the visual perception of a scene as perceived by the human eye.\n              </div>\n\n            </el-collapse-item>\n            <el-collapse-item title=\"Archive (Past 1 week)\" name=\"2\">\n              <strong>TROPOMI satellite</strong>\n\n              <div>\n                Copernicus Sentinel-5 Precursor (S5P) satellite carrying the TROPOspheric Monitoring Instrument\n                (TROPOMI)\n                instrument is the first of the atmospheric composition Sentinels, launched on 13 October 2017, provides\n                high spatial-temporal resolution atmospheric measurements of pollutants such as NO<sub>2</sub>, CO,\n                SO<sub>2</sub>, and PM<sub>2.5</sub>.\n                Its mission is to reduce gaps in the availability of global atmospheric data products between\n                SCIAMACHY/Envisat (which ended in April 2012), the OMI/AURA mission, and the future Copernicus\n                Sentinel-4\n                and Sentinel-5 missions. TROPOMI, a state-of-the-art spectrometer satellite with a swath width of ~2600\n                km, maps the global atmosphere daily. Tropomi total column level 3 NO<sub>2</sub> & SO<sub>2</sub> data\n                products are available\n                at 5.5x3.5 and CO at 7.0x7.0 resolution.\n\n                Copernicus Sentinel-5 Precursor (S5P) satellite carrying the TROPOspheric Monitoring Instrument\n                (TROPOMI) instrument is the first of the atmospheric composition Sentinels, launched on 13 October 2017,\n                provides high spatial-temporal resolution atmospheric measurements of pollutants such as NO<sub>2</sub>,\n                CO,\n                SO<sub>2</sub>, and PM<sub>2.5</sub>. Its mission is to reduce gaps in the availability of global\n                atmospheric data products between\n                SCIAMACHY/Envisat (which ended in April 2012), the OMI/AURA mission, and the future Copernicus\n                Sentinel-4 and Sentinel-5 missions. TROPOMI, a state-of-the-art spectrometer satellite with a swath\n                width of ~2600 km, maps the global atmosphere daily. Tropomi total column level 3 NO<sub>2</sub> &\n                SO<sub>2</sub> data\n                products available at 5.5x3.5, and CO at 7.0x7.0 resolution is used on the ICIMOD dashboard.\n\n              </div>\n              <br>\n\n\n              <strong>MODIS (TERRA) satellite AOD </strong>\n\n              <div>\n                The MODIS (Moderate Resolution Imaging Spectroradiometer) instrument on board the Terra satellite\n                monitors the ambient aerosol optical thickness over land and ocean surfaces globally at a spatial\n                resolution of 250m at nadir, 500m, and 1km. The instrument captures data in the visible and\n                near-infrared regions of the electromagnetic spectrum with a swath of 2,330 km and provides global\n                coverage every one to two days. It measures the amount of aerosol particles present in a vertical column\n                of the atmosphere. It quantifies the extinction of solar radiation due to aerosol scattering and\n                absorption. We add satellite AOD data in Air Quality Watch-HKH for understanding air quality, climate\n                modeling, and studying the impact of aerosols on weather patterns and ecosystems.\n              </div>\n              <br>\n\n\n              <strong> <a href=\"https://geos-chem.seas.harvard.edu/geos-overview\">GEOS-Chem (Reanalysis)</a> </strong>\n\n              <div>\n                The Global Modeling and Assimilation Office (GMAO) uses the GEOS ESM system to generate GEOS-Forward\n                Processing (GEOS-FP) data products in near real-time or reanalysis modes supporting diverse user\n                communities. The FP products are primarily used for real-time support for NASA field campaigns, support\n                for NASA science, GEOS system evaluation, and interaction with other data assimilation centers. We have\n                downloaded six-hourly PM<sub>2.5</sub>, O<sub>3</sub>, SO<sub>2</sub>, NO<sub>2</sub>, and CO data over\n                the selected domain.\n              </div>\n              <br>\n              <strong>Terra Modis True color </strong>\n              <div>\n                (Red: VIS <sub>0.64</sub> micrometer; Green: VIS <sub>0.51</sub> micrometer, Blue: VIS <sub>0.47</sub>\n                micrometer) is used for layer control\n                over the HKH domain in the dashboard: Suite of Red-Green-Blue (RGB) products from the geostationary\n                Advanced Meteorological Instrument (AMI) for monitoring can help better understand the evolution of\n                dust, fires, haze, smoke, cloud, fog, and snow.\n                Using the three visible channels of AMI, this system monitors aerosols, clouds, and vegetation. It is\n                designed to imitate the visual perception of a scene as perceived by the human eye.\n              </div>\n              <br>\n            </el-collapse-item>\n            <el-collapse-item title=\"Forecast (Next 48 hours)\" name=\"3\">\n              <strong> <a href=\"https://gmao.gsfc.nasa.gov/weather_prediction/GEOS-CF/\">GEOS-CF (model data)</a>\n              </strong>\n              <div>\n                The GEOS-Composition Forecasting (GEOS-CF) system generates real-time distributions of atmospheric\n                constituents, including five-day forecasts, beginning at 12Z, with a horizontal resolution of about\n                25km. GEOS-CF was made possible by including the GEOS-Chem chemistry model in GEOS. The system uses a\n                contemporary atmospheric chemistry module and observation-based emissions estimates to provide a unique\n                dataset for research studies based on NASA’s observations of atmospheric composition. Geos forecast data\n                are obtained from the NASA/GMAO Centre for Climate Simulation (<a href=\"https://portal.nccs.nasa.gov/datashare/gmao/geoscf/v1/forecast/\n              &https://gmao.gsfc.nasa.gov/weather_prediction/GEOS-CF/\">NCCS</a>)\n              </div>\n              <br>\n\n\n              <strong><a href=\"https://www.mmm.ucar.edu/models/wrf\">WRF-Chem model </a></strong>\n              <div>\n                The WRF-Chem (Weather Research and Forecasting with Chemistry) model is widely used for simulating and\n                forecasting atmospheric chemistry and air quality. It combines the WRF meteorological model with various\n                chemistry and aerosol modules to simulate the transport, transformation, and deposition of pollutants in\n                the atmosphere. The WRF-Chem version 4.2.1 model simulation over the Hindu Kush Himalaya (HKH) at 12 km\n                resolution and Nepal at 4km resolution helps us to understand the current state of air quality and\n                pollutant distributions in the region.\n              </div>\n              <br>\n              <div>\n                Additionally, having a 48-hour pollution forecast in the dashboard is valuable for predicting and\n                understanding the future air quality impact in the region. The forecasted information can help\n                stakeholders and decision-makers across the HKH region take appropriate measures to mitigate air\n                pollution and its associated environmental impacts.\n              </div>\n              <br>\n              <div>\n                Overall, the combination of real-time pollution simulation and 48-hour pollution forecast using the\n                WRF-Chem model can provide valuable insights into the air quality state and help make informed decisions\n                regarding pollution management and control in the HKH and Nepal region.\n              </div>\n              <br>\n              <div class=\"\">Note: Model validation with observations data for the following stations: Kabul, Islamabad,\n                Lahore, New Delhi, Kanpur, Lumbini, Kathmandu, Patna, Kolkata\n              </div>\n            </el-collapse-item>\n            <el-collapse-item title=\"Emission Inventory (Annual)\" name=\"4\">\n              <strong> <a href=\"https://eccad.sedoo.fr/#/catalogue\">Emission data</a></strong>\n              <div>\n                1. Regional Emission inventory in ASia version 3.2.1 (REASv3.2.1) provides details of emissions from\n                major anthropogenic sectors for each country and its sub-regions and provides monthly gridded data with\n                0.25<sup>∘</sup>×0.25<sup>∘</sup> resolution from 1950-2015 over the East, Southeast, and South Asia\n                region\n                (<a href=\"https://doi.org/10.5194/acp-20-12761-2020\">https://doi.org/10.5194/acp-20-12761-2020</a> & <a\n                  href=\"https://eccad.aeris-data.fr/\">https://eccad.aeris-data.fr/</a>).\n\n              </div>\n\n              <div>\n                Species available: SO<sub>2</sub>, NO<sub>x</sub>, CO, NMVOC, PM<sub>10</sub>, PM<sub>2.5</sub>, BC, OC,\n                NH<sub>3</sub>, and CO<sub>2</sub>\n              </div>\n              <br>\n              <div class=\"\">\n                2. Greenhouse Gas-Air Pollution INteractions and Synergies (GAINS) model inventory data available at\n                0.5<sup>◦</sup>x0.5<sup>◦</sup> Km grid. The GAINS Model gridded globally following the ECLIPSE\n                (Evaluating the Climate and\n                Air Quality Impacts of Short-Lived Pollutants) project version 5a [ECLIPSE-GAINS-V5a]\n                (<a href=\"https://eccad.aeris-data.fr/\">https://eccad.aeris-data.fr/ </a>).\n              </div>\n              <br>\n              <div class=\"\">\n                3. Emissions Database for Global Atmospheric Research version 5 (EDGARv5) provides pollutants, including\n                greenhouse gases per sector and country globally at a horizontal resolution of 0.1x0.1 km grid size and\n                temporal coverage from 1970-2015 (<a\n                  href=\"https://eccad.aeris-data.fr/\">https://eccad.aeris-data.fr/</a>).\n              </div>\n              <div class=\"\">\n                Species available: SO<sub>2</sub>, NO<sub>x</sub>, CO, NMVOC, VOC, PM <sub>10</sub>, PM<sub>2.5</sub>,\n                BC, OC, NH<sub>3</sub>, CH<sub>4</sub>, CO<sub>2</sub> etc.\n              </div>\n              <div class=\"\">\n                Note: Emissions from large-scale biomass burning with Savannah burning, forest fires, and sources and\n                sinks from land use, land-use change, and forestry (LULUCF) are excluded. For the energy-related\n                sectors, the activity data are mainly based on the energy balance statistics of IEA (2017)\n                ( <a\n                  href=\"http://www.oecd-ilibrary.org/energy/co2-emissions-from-fuel-combustion-2017_co2_fuel-2017-en\">http://www.oecd-ilibrary.org/energy/co2-emissions-from-fuel-combustion-2017_co2_fuel-2017-en</a>),\n                whereas\n                the activity data for the agricultural sectors originate mainly from FAO (2018); Crippa et al. (2019).\n\n\n              </div>\n              <br>\n\n            </el-collapse-item>\n            <el-collapse-item title=\"Demography (Annual scale)\" name=\"5\">\n              <div>\n                <a href=\"https://www.worldpop.org/datacatalog/\">WorldPop</a>\n                is based at the University of Southampton and was initiated in 2013 with the aim of producing detailed\n                and freely available high-resolution data for mapping human population, distributions, and composition\n                for the whole of Central and South America, Africa, and Asia. WorldPop provides gridded information on\n                population density, population count, Age, and sex structure from 2000 to 2020 at 1km horizontal\n                resolution. The population density data are produced by the unconstrained top-down modeling method. In\n                this method, a global database of the administrative unit-based census and projection counts for each\n                year 2000-2020 is taken and utilizes a set of detailed geospatial datasets to disaggregate to grid\n                cell-based counts. Two methods have been adopted to produce these over multiple countries using Random\n                Forests machine learning methods described in the following link (<a\n                  href=\"https://www.worldpop.org/methods/top_down_constrai ned_vs_unconstrained/\">https://www.worldpop.org/methods/top_down_constrai\n                ned_vs_unconstrained/</a>).\n\n              </div>\n\n\n            </el-collapse-item>\n          </el-collapse>\n\n        </div>\n\n        <br>\n        <h3 class=\"headingPara\">Acknowledgment of Current Data Source</h3>\n        <ul>\n          <li><a href=\"https://servir.icimod.org/\">SERVIR-HKH</a> contributes data products.</li>\n          <li>Ground-based observation – <a href=\"https://www.airnow.gov/international/us-embassies-and-consulates/\">AirNow</a>,\n             <a href=\"https://aeronet.gsfc.nasa.gov/\">AERONET</a>\n          </li>\n          <li>Satellite products – <a href=\"https://modis.gsfc.nasa.gov/data/\">MODIS</a>, <a\n              href=\"https://sentinel.esa.int/web/sentinel/sentinel-data-access\">TROPOMI</a></li>\n          <li>Air quality models – <a\n              href=\"https://gmao.gsfc.nasa.gov/weather_prediction/GEOS-CF/data_access/\">GEOS-CF</a>, WRF-Chem forecast\n            (<a href=\"https://servir.icimod.org/\">SERVIR-HKH</a>)\n          </li>\n          <li>Reanalysis –  <a href=\"https://geos-chem.seas.harvard.edu/geos-overview\">GEOS-CF</a></li>\n          <li>Emission inventory – <a href=\"https://www.nies.go.jp/REAS/\">REAS</a>, <a\n              href=\"https://edgar.jrc.ec.europa.eu/dataset_htap_v2\">EDGAR-HTAP</a>,\n            <a href=\"https://gains.iiasa.ac.at/models/\">GAINS</a></li>\n        </ul>\n\n        <h3 class=\"headingPara\">Contact</h3>\n        <ul>\n          <li>Bhupesh Adhikary</li>\n          <li>Senior Air Quality Specialist, AAB: Stimulating Action for Clean Air </li>\n          <li>bhupesh.adhikary@icimod.org</li>\n        </ul>\n\n        <h3 class=\"headingPara\">Disclaimer!</h3>\n        <ul>\n          <li>\n            Quality of the datasets is attributed to the original data provider's quality assurance/quality control. Additional datasets continue to be added as and when they are readily available.\n          </li>\n        </ul>\n      </div>\n      <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button class=\"cancel-dialog\" @click=\"centerDialogVisible = false\">Cancel</el-button>\n      </span>\n      </template>\n    </el-dialog>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: \"NavBar\",\n  data() {\n    return {\n      centerDialogVisible: false,\n      LangVal: true,\n    };\n  }\n}\n</script>\n\n\n<style scoped>\n:root {\n  --fontColors: '#606266';\n}\n\n.template-nabar {\n  background-color: #007196;\n  overflow: hidden;\n}\n\n.navbar {\n  position: relative;\n  display: -ms-flexbox;\n  display: flex;\n  flex-direction: row;\n  -ms-flex-align: center;\n  align-items: center;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n}\n\n.flexBox {\n  flex: 33.33%\n}\n\n.full-height {\n  height: 100%;\n}\n\n.template-nabar .navbar-brand {\n  /* padding-bottom: .3125rem; */\n  /* margin-right: 1rem; */\n  font-size: 1.7rem;\n  /* line-height: inherit; */\n  /* white-space: nowrap; */\n}\n\n.template-nabar a.navbar-brand {\n  color: white !important;\n}\n\n.navbar-brand {\n  display: inline-block;\n  padding-top: .3125rem;\n  padding-bottom: .3125rem;\n  margin-right: 1rem;\n  font-size: 1.25rem;\n  line-height: inherit;\n  white-space: nowrap;\n}\n\na {\n  color: #007bff;\n  text-decoration: none;\n  background-color: transparent;\n}\n\n.navbar-brand {\n  margin-left: 1rem;\n}\n\n.nav-logo-image {\n  margin-right: 15px;\n  margin-top: 2px;\n  margin-left: 47px;\n}\n\n.logo-image-style {\n  height: 40px;\n  float: left;\n}\n\n.nav-bar-font {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  font-feature-settings: normal;\n  font-kerning: auto;\n  font-optical-sizing: auto;\n  font-stretch: 100%;\n  font-style: normal;\n  font-variant-caps: normal;\n  font-variant-east-asian: normal;\n  font-variant-ligatures: normal;\n  font-variant-numeric: normal;\n  font-variation-settings: normal;\n  line-height: 1.2;\n}\n\n.navbar-brand.flexBox {\n  text-align: center;\n}\n\n.col-md-5.flexBox.infoIconAbout .el-button {\n  border-color: #4192ac;\n}\n\n.headingPara {\n  font-weight: bold;\n}\n\n.aboutDetPara {\n  text-align: justify;\n  word-break: initial;\n}\n\n.about-body ul {\n  list-style-type: none;\n}\n\n.aboutContent ul {\n  list-style-type: none;\n}\n\n.infoTabIcon {\n  font-size: 20px;\n}\n\n.aboutContent {\n  font-family: Arial, Helvetica, sans-serif;\n  color: var(--fontColors);\n}\n\n.data-tool {\n  padding-left: 40px;\n}\n\n\n/*.aboutContent .el-collapse-item__content {*/\n/*  font-family: Arial, Helvetica, sans-serif;*/\n/*  color: rgb(96, 98, 102) !important;*/\n/*}*/\n\n/*.model-title-header .el-dialog__title{*/\n/*  font-weight: bold;*/\n/*}*/\n</style>","import { render } from \"./NavBar.vue?vue&type=template&id=3a4430d9&scoped=true\"\nimport script from \"./NavBar.vue?vue&type=script&lang=js\"\nexport * from \"./NavBar.vue?vue&type=script&lang=js\"\n\nimport \"./NavBar.vue?vue&type=style&index=0&id=3a4430d9&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3a4430d9\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapLagend.vue?vue&type=style&index=0&id=2c1654b0&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapComponentRGBProduct.vue?vue&type=style&index=0&id=0ec5f3e4&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./airqualitynpRecent.vue?vue&type=style&index=0&id=42ca2144&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapControlsForecast.vue?vue&type=style&index=0&id=93723b5a&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapComponentArchive.vue?vue&type=style&index=0&id=2df3e78e&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./chartComponentForecast.vue?vue&type=style&index=0&id=73a67096&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./EmissionStatistics.vue?vue&type=style&index=0&id=9b1ecce6&lang=css\"","module.exports = __webpack_public_path__ + \"static/airquality/images/female.svg\";","import axios from \"axios\";\nimport {Action} from \"../actionType\";\n// import eventHub from '../../utils/utils';\n// import helper from \"../../utils/helpers\";\n\n\nexport const actionBase = axios.create({\n    baseURL: Action.Base\n});\n\nexport async function postApiWithoutToken(action, param) {\n    // eventHub.$emit('before-request');\n    return await new Promise((resolve, reject) => {\n        // setXCSRFToken();\n        // param.csrfmiddlewaretoken=document.querySelector('[name=csrfmiddlewaretoken]').value;\n        actionBase.post(\"/\" + action, param).then(\n            res => {\n                // eventHub.$emit('after-response');\n                resolve(res.data);\n            },\n            err => {\n                console.log(\"error on postapi\");\n                console.log(err);\n                reject(err);\n            }\n        );\n    });\n};\n\nexport async function getApiWithoutToken(action) {\n    return await new Promise((resolve, reject) => {\n        actionBase.get(\"/\" + action).then(\n            res => {\n                resolve(res.data);\n            },\n            err => {\n                console.log(\"hello error getApiWithoutToken\");\n                console.log(err);\n                reject(err);\n            }\n        );\n    });\n};\n\nexport async function getApiWithoutTokenAbsoluteURL(action) {\n    return await new Promise((resolve, reject) => {\n        actionBase.get(action).then(\n            res => {\n                resolve(res.data);\n            },\n            err => {\n                console.log(\"hello error getApiWithoutToken\");\n                console.log(err);\n                reject(err);\n            }\n        );\n    });\n};\n\n// function getCookie(name) {\n//     let cookieValue = null;\n//     if (document.cookie && document.cookie !== '') {\n//         const cookies = document.cookie.split(';');\n//         for (let i = 0; i < cookies.length; i++) {\n//             const cookie = cookies[i].trim();\n//             // Does this cookie string begin with the name we want?\n//             if (cookie.substring(0, name.length + 1) === (name + '=')) {\n//                 cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n//                 break;\n//             }\n//         }\n//     }\n//     return cookieValue;\n// }\n//\n// function setXCSRFToken() {\n//     let csrftokenCookie = getCookie('csrftoken');\n//     actionBase.defaults.headers.common[\"X-CSRFToken\"] = csrftokenCookie;\n// }\n\n//\n// function clearXCSRFToken() {\n//     delete actionBase.defaults.headers.common[\"X-CSRFToken\"];\n// }\n","<template>\n  <div class=\"all-conts\">\n    <el-container class=\"cont-outer\">\n      <el-header>\n        <NavBar></NavBar>\n      </el-header>\n      <el-container class=\"sidebar-main\">\n        <Tabs :activeTab=\"currentTab\"></Tabs>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\n\nimport NavBar from \"../components/common/NavBar\";\nimport Tabs from \"../components/common/Tabs\";\nimport {ReDirectToSmogAppDotCom, reDirectHTTPSToHTTP} from \"../utils/ReDirect\";\n\n// https://codepen.io/suman111/pen/ExmdwxP?editors=0010\n\nexport default {\n  name: \"emission\",\n\n  components: {\n    NavBar,\n    Tabs,\n  },\n  data() {\n    return {\n      selectedTab: 'Emission',\n    };\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  },\n  methods: {\n    getCurrentTab() {\n      return this.selectedTab;\n    }\n  },\n  beforeCreate() {\n    ReDirectToSmogAppDotCom();\n    reDirectHTTPSToHTTP();\n  }\n};\n\n</script>\n\n<style lang=\"scss\">\n@import \"../utils/main\";\n\n</style>\n","import { render } from \"./emission.vue?vue&type=template&id=a544b320\"\nimport script from \"./emission.vue?vue&type=script&lang=js\"\nexport * from \"./emission.vue?vue&type=script&lang=js\"\n\nimport \"./emission.vue?vue&type=style&index=0&id=a544b320&lang=scss\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {getApiWithoutToken, getApiWithoutTokenAbsoluteURL, postApiWithoutToken} from './api';\nimport {Action} from '../actionType';\n// import {ThreddsServer} from '../../config';\n\nexport async function getCascaderOptions(){\n        const action = Action.CascaderOptions\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n\nexport async function PostChartDataProcess(param){\n        const action=Action.ChartDataProcess;\n        const response= await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function GETLayerInfoStat(param){\n        const action=Action.LayerInfoStat;\n        const response= await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function GETCountryGeojson(){\n        const action=Action.GeoServerBase+\"/AirQuality/ows?ID=1&service=WFS&version=1.0.0&request=GetFeature&typeName=AirQuality%3Anepal_provincial_boundary&maxFeatures=50&outputFormat=application%2Fjson&CQL_FILTER=pr_name='Bagmati'\"\n        const response= await getApiWithoutTokenAbsoluteURL(action);\n        return response;\n}","import {createStore} from \"vuex\";\nimport {getCascaderOptions, GETCountryGeojson, GETLayerInfoStat, PostChartDataProcess} from \"../api/emission\";\n\nexport default createStore({\n    state() {\n        return {\n            CascaderInventriesComparison: [],\n            CascaderSectorContribution: [],\n            CascaderSectorShare: [],\n            CascaderTimeSeries: [],\n            selectInteractionObj: null,\n            TimeSeriesLayerCollection: [],\n            vectorLayerSource:null,\n            mapObject:null,\n        };\n    },\n    mutations: {\n        setCascaderInventriesComparison(state, payload) {\n            state.CascaderInventriesComparison = payload;\n        }, setCascaderSectorContribution(state, payload) {\n            state.CascaderSectorContribution = payload;\n        }, setCascaderSectorShare(state, payload) {\n            state.CascaderSectorShare = payload;\n        }, setCascaderTimeSeries(state, payload) {\n            state.CascaderTimeSeries = payload;\n        }, setSelectInteractionObj(state, payload) {\n            state.selectInteractionObj = payload;\n        },setVectorLayerSource(state, payload) {\n            state.vectorLayerSource = payload;\n        },setmapObject(state, payload) {\n            state.mapObject = payload;\n        },\n        appendTimeSeriesLayerCollection(state, payload) {\n            state.TimeSeriesLayerCollection.push(payload);\n        }\n    },\n    actions: {\n        async getCascaderOptions(context) {\n            let data = await getCascaderOptions();\n            context.commit(\"setCascaderInventriesComparison\", data.InventriesComparison);\n            context.commit(\"setCascaderSectorContribution\", data.SectorContribution);\n            context.commit(\"setCascaderSectorShare\", data.SectorShare);\n            context.commit(\"setCascaderTimeSeries\", data.TimeSeries);\n            return data\n        },\n        async PostChartDataProcess(context, param) {\n            let data = await PostChartDataProcess(param);\n            return data;\n        },\n        async GetLayerStatInfo(context,param) {\n            let data = await GETLayerInfoStat(param);\n            return data;\n        },\n        async GETCountryGeojson() {\n            let data = await GETCountryGeojson();\n            return data;\n        },\n    },\n    getters: {},\n    modules: {},\n});","import { createApp } from \"vue\";\nimport emission from \"./views/emission.vue\";\nimport store from \"./store/modules/emission\";\nimport ElementPlus from 'element-plus';\nimport 'element-plus/theme-chalk/index.css';\n\n\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nimport {faHandPointer,faTimes,faMapMarkerAlt,faDrawPolygon,faPrint,faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faHandPointer);\nlibrary.add(faTimes);\nlibrary.add(faMapMarkerAlt);\nlibrary.add(faDrawPolygon);\nlibrary.add(faPrint);\nlibrary.add(faInfoCircle);\n\n\n\nconst app = createApp(emission);\napp.component(\"font-awesome-icon\", FontAwesomeIcon);\napp.use(store);\napp.use(ElementPlus);\napp.mount('#app');\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TabBodyRecent.vue?vue&type=style&index=0&id=c96ee428&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapComponentSocioEconomic.vue?vue&type=style&index=0&id=245d4d8a&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TabBodySocioEconomic.vue?vue&type=style&index=0&id=e1996674&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./chartComponentSocioEconomic.vue?vue&type=style&index=0&id=7f6e7ae1&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./airqualityRGBProducts.vue?vue&type=style&index=0&id=13078d20&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TabBodyForecast.vue?vue&type=style&index=0&id=0ebaac7f&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"static/airquality/images/layers.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapControlsArchive.vue?vue&type=style&index=0&id=7e71a95d&scoped=true&lang=css\"","<template>\n  <el-tabs type=\"border-card\" class=\"tabs-outer\" height=\"28px\" v-model=\"currentTab\" @tab-click=\"changePage\">\n\n    <el-tab-pane key=\"Recent\" name=\"Recent\" label=\"Recent\" class=\"full-height\">\n      <TabBodyRecent v-if=\"currentTab ==='Recent'\"></TabBodyRecent>\n    </el-tab-pane>\n\n    <el-tab-pane key=\"Archive\" name=\"Archive\" label=\"Archive\" class=\"full-height\">\n      <TabBodyArchive v-if=\"currentTab ==='Archive'\"></TabBodyArchive>\n    </el-tab-pane>\n\n    <el-tab-pane key=\"Forecast\" name=\"Forecast\" label=\"Forecast\" class=\"full-height\">\n      <TabBodyForecast v-if=\"currentTab ==='Forecast'\"></TabBodyForecast>\n    </el-tab-pane>\n\n    <el-tab-pane key=\"Emission\" name=\"Emission\" label=\"Emission\" class=\"full-height\">\n      <TabBodyEmission v-if=\"currentTab ==='Emission'\"></TabBodyEmission>\n    </el-tab-pane>\n\n    <el-tab-pane key=\"SocioEconomic\" name=\"SocioEconomic\" label=\"Demography\"\n                 class=\"full-height\">\n      <TabBodySocioEconomic v-if=\"currentTab ==='SocioEconomic'\"></TabBodySocioEconomic>\n    </el-tab-pane>\n\n    <el-tab-pane key=\"RGBProduct\" name=\"RGBProduct\" label=\"RGB Product\"\n                 class=\"full-height\">\n      <TabBodyRGBProducts v-if=\"currentTab ==='RGBProduct'\"></TabBodyRGBProducts>\n    </el-tab-pane>\n\n  </el-tabs>\n</template>\n\n<script>\nimport {TethysAppName} from \"../../config\";\n// import outlookTabBody from \"./outlookTabBody\";\n\nimport TabBodyRecent from \"../Recent/TabBodyRecent\";\nimport TabBodyArchive from \"../Archive/TabBodyArchive\";\nimport TabBodyForecast from \"../Forecast/TabBodyForecast\";\nimport TabBodyEmission from \"../Emission/TabBodyEmission\";\nimport TabBodySocioEconomic from \"../SocioEconomic/TabBodySocioEconomic\";\nimport TabBodyRGBProducts from \"../RGBProducts/TabBodyRGBProducts\"\nexport default {\n  name: \"Tabs\",\n  props: {\n    activeTab: {\n      type: String,\n      required: true\n    },\n  },\n  components: {\n    TabBodyRecent,\n    TabBodyArchive,\n    TabBodyForecast,\n    TabBodyEmission,\n    TabBodySocioEconomic,\n    TabBodyRGBProducts,\n  },\n  data() {\n    return {selectedTab: 'emission'}\n  },\n  methods: {\n    changePage(evt) {\n      var download = document.createElement('a');\n      if (evt.props.name === \"Recent\") {\n        download.href = \"/apps/\" + TethysAppName + \"/recent/\";\n      } else if (evt.props.name === \"Archive\") {\n        download.href = \"/apps/\" + TethysAppName + \"/archive/\";\n      } else if (evt.props.name === \"Forecast\") {\n        download.href = \"/apps/\" + TethysAppName + \"/forecast/\";\n      } else if (evt.props.name === \"Emission\") {\n        download.href = \"/apps/\" + TethysAppName + \"/emission/\";\n      } else if (evt.props.name === \"SocioEconomic\") {\n        download.href = \"/apps/\" + TethysAppName + \"/demographic\";\n      }else{\n         download.href = \"/apps/\" + TethysAppName + \"/rgbproducts\";\n      }\n      // }\n      download.click();\n    },\n    getCurrentTab() {\n      return this.activeTab\n    }\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.tabs-outer {\n  width: 100%;\n}\n\n\n.tabs-outer .el-tabs__nav-scroll, .tabs-outer .el-tabs__nav.is-top, .el-tabs__item {\n  height: 28px;\n}\n\n.el-tabs__item.is-active {\n  height: 29px;\n}\n\n.el-tabs__nav-scroll {\n  color: white;\n}\n\n.el-tabs--border-card {\n  border: 0px solid #DCDFE6;\n}\n\n.tabs-outer .el-tabs__item {\n  color: white !important;\n}\n\n.el-tabs__item.is-active {\n  background-color: #9cb4be !important;\n  border-right-color: #9cb4be !important;\n  border-left-color: #9cb4be !important;\n}\n\n.el-tabs__content {\n  background-color: #9cb4be !important;\n}\n\n.el-tabs__item {\n  line-height: 32px\n}\n\n.el-tabs__content {\n  height: calc(100% - 28px);\n  padding: 0px !important;\n}\n\n.full-height {\n  height: 100%;\n}\n</style>","export var TethysAppName = \"airquality\";\n\nexport var TethysAPIAppName = \"airquality\";\n\n\n\nlet threddDataSourceVar=null;\nif (process.env.NODE_ENV === \"production\") {\n    // threddDataSourceVar = 'https://smog.icimod.org';\n    threddDataSourceVar = window.location.origin +'/thredds/';\n} else {\n    threddDataSourceVar = 'http://smog.icimod.org:8080/thredds/';\n}\nexport let threddDataSource = threddDataSourceVar;\n\nlet GeoServerHostLVar = null;\n\nif (process.env.NODE_ENV === \"production\") {\n    // GeoServerHostLVar = 'https://smog.icimod.org:8080';\n    GeoServerHostLVar = window.location.origin;\n} else {\n    GeoServerHostLVar = 'http://smog.icimod.org:8080';\n}\n\nexport let GeoServerHost = GeoServerHostLVar;\n\n\n\n\n\n\nexport var DefaultMaskWMS = false;\n\nexport var DefaultPlotInfo = {\n    colorScheme: 'jet',\n    BBOX: [60, 15, 110, 40],\n    tickSpan: 10,\n    Resolution: 600,\n    width: 12,\n    height: 9\n}\n","<template>\n  <el-row class=\"airquality\">\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapControlsRecent></mapControlsRecent>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-10 padding-top-5 padding-right-5\">\n            <chartComponentRecent  :IndexValue=\"1\"></chartComponentRecent>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"12\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapComponentRecent></mapComponentRecent>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentRecent  :IndexValue=\"2\"></chartComponentRecent>\n        </el-col>\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentRecent  :IndexValue=\"3\"></chartComponentRecent>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-10\">\n                    <LayerSwitcherControl></LayerSwitcherControl>\n\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-10\">\n          <chartComponentRecent  :IndexValue=\"4\"></chartComponentRecent>\n        </el-col>\n      </el-row>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n\nimport LayerSwitcherControl from '../common/LayerSwitcherControl';\n\n// import about from \"./about\";\nimport chartComponentRecent from \"./chartComponentRecent\";\nimport mapControlsRecent from \"./mapControlsRecent\";\nimport mapComponentRecent from \"./mapComponentRecent\";\n// import {mapActions} from \"vuex\";\n\nexport default {\n  name: \"TabBodyRecent\",\n  components: {\n    LayerSwitcherControl,\n    chartComponentRecent,\n    mapControlsRecent,\n    mapComponentRecent,\n  },\n  methods: {\n    // ...mapActions([\"getCascaderOptions\"]),\n  },\n  async mounted() {\n    // let data = await this.getCascaderOptions();\n    // console.log(data);\n  }\n}\n</script>\n\n<style scoped>\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n.full-height {\n  height: 100%;\n}\n.second-row div{\n  /*height: calc(100% - 12.5px);*/\n}\n</style>\n","<template>\n  <div class=\"card-box full-height full-width layer-collection-div1\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Layer Control\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n        <div class=\"layerCollection\"></div>\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"LayerSwitcherControl\",\n}\n</script>\n\n<style scoped>\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.pollutant-cascader:not(:last-child) {\n  padding-bottom: 10px;\n}\n\n.body-container {\n  height: calc(100% - 50px);\n}\n\n.layer-collection-div1 .body-container{\n    padding: 0px;\n}\n\n\n\n</style>","import { render } from \"./LayerSwitcherControl.vue?vue&type=template&id=d7895530&scoped=true\"\nimport script from \"./LayerSwitcherControl.vue?vue&type=script&lang=js\"\nexport * from \"./LayerSwitcherControl.vue?vue&type=script&lang=js\"\n\nimport \"./LayerSwitcherControl.vue?vue&type=style&index=0&id=d7895530&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d7895530\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\" ref=\"outerViz\">\n    <div v-if=\"visualizationIn =='chart'\" class=\"chart-div\" :id=\"'chart'+IndexValue\" ref=\"ChartDiv\">\n      <div class=\"flex-center-vertically\">\n        <!--        Please select a layer and draw a feature to view the chart-->\n        <el-skeleton :rows=\"5\" animated/>\n      </div>\n    </div>\n\n    <div v-if=\"visualizationIn =='2Dimage'\" class=\"position-relative  full-width full-height\" ref=\"Image2D\">\n      <div class=\"download-map-Image\" @click=\"downloadImage()\">\n        <i class=\"fas fa-download\"></i>\n      </div>\n      <div class=\"vertically-center\">\n        <img class=\"generated-image\" :width=\"imageInfo.width\" :src=\"imageInfo.url\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport eventHub from \"../../utils/utils\"\n\nimport Highcharts from 'highcharts';\n\n// Alternatively, this is how to load Highstock. Highmaps is similar.\n// import Highcharts from 'highcharts/highstock';\n\n// Load the exporting module.\nimport Exporting from 'highcharts/modules/exporting';\nimport ExportData from 'highcharts/modules/export-data';\nimport NOdata from 'highcharts/modules/no-data-to-display'\nimport MoreHighcharts from 'highcharts/highcharts-more';\n\n// Initialize exporting module.\nExporting(Highcharts);\nNOdata(Highcharts);\nMoreHighcharts(Highcharts);\nExportData(Highcharts);\n\n// window.Highcharts = Highcharts;\nimport {AirPollutionWatchApp} from \"../../utils/dataRecent\";\nimport {mapActions, mapState, mapGetters} from 'vuex';\n\n\nexport default {\n  name: \"chartComponent\",\n  props: {\n    IndexValue: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      visualizationIn: 'chart',\n      imageInfo: {\n        url: '',\n        downloadFileName: '',\n        width: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"PostGetStationData\", \"PostGet2DImage\", \"TimeSeriesRasterQuery\"]),\n    async renderVisualization() {\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n\n          let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"parameter_by_pollutant_value_stationData_val\" + this.IndexValue]);\n          } else {\n            console.log(\"\");\n            // let Extent = [];\n            // this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].featureExtent.forEach(function (ext1) {\n            //   Extent.push(parseFloat(ext1.toFixed(6)))\n            // });\n            // console.log(Extent);\n            // let layer = await this.getBindedLayer(kk.layerId);\n            // layer.setVisibleDivBind(true);\n            // // let NewMapObj = myApp.CreateMapObject(WorkingIndex);\n            // let layerPropertiesObject = await this.getLayer(kk.layerId).getCurrentLayer().getProperties();\n            // let layerSourceParam = layerPropertiesObject.source.getParams();\n            // // let layerUrl = layerPropertiesObject.source.getUrls()[0].split('wms')[1];\n            // let plotProp = layerPropertiesObject.plotInfo();\n            // plotProp.wmsList = layerPropertiesObject.wmsList;\n            // plotProp.LAYER = layerSourceParam.LAYERS;\n            // plotProp.TIME = layerSourceParam.TIME;\n            // plotProp.COLORSCALERANGE = layerSourceParam.COLORSCALERANGE;\n            // plotProp.BBOX = Extent;\n            // let date = new Date(layerSourceParam.TIME);\n            // let dateTimeFormat = new Intl.DateTimeFormat('en', {year: 'numeric', month: 'short', day: '2-digit'});\n            // let [{value: month}, , {value: day}, , {value: year}] = dateTimeFormat.formatToParts(date)\n            // let completeDateLabel = `${day} ${month} ${year}`;\n            // plotProp.labelName = completeDateLabel + layerPropertiesObject.plotInfo().LabelTitleTime;\n            // this.visualizationIn = '2Dimage';\n            // let w = this.$refs.outerViz.clientWidth;\n            // let h = this.$refs.outerViz.clientHeight;\n            // let width = w / 96;\n            // let height = h / 96;\n            // plotProp.width = width.toFixed(3);\n            // plotProp.height = height.toFixed(3);\n            // plotProp.rid = 0;\n            // let ParseJson = await this.PostGet2DImage(plotProp);\n            // this.imageInfo.url = ParseJson.image;\n            // this.imageInfo.downloadFileName = plotProp.title + '.png';\n            // this.imageInfo.width = w;\n          }\n        } else {\n          //by location\n          let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][2]);\n          }\n        }\n\n    },\n    getCascaderInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    async ObservationDatavisualization(kk, stationId) {\n      let layer = this.getBindedLayer(kk.layerId);\n      layer.setVisibleDivBind(true);\n      let param = {\n        stId: stationId,\n        ModelClass: kk.ModelClass,\n        ModelClassDataList: kk.ModelClassDataList,\n        typeName: kk.typeName,\n        StartDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate),\n        EndDate: this.AirPollutionWatchApp.formatDateWithHHMM(AirPollutionWatchApp.endDate)\n      };\n      let parsedData = await this.PostGetStationData(param);\n      this.visualizationIn = 'chart'\n      var stationObject = kk.childrenData.filter((stdata) => {\n        return stdata.value == stationId\n      })[0]\n\n      let stationName = stationObject.folder_name;\n\n      let title;\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate));\n      } else {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate), this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate));\n      }\n      // debugger;\n      let XaxisLabel = kk.chart.XaxisLabel();\n      let plotType = kk.chart.plotType;\n      let highchartsObj = null;\n      if (plotType === 'point') {\n        highchartsObj = this.AirPollutionWatchApp.datetimePointChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      } else {\n        highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      }\n      Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n\n    },\n    downloadImage() {\n      this.AirPollutionWatchApp.forceDownload(this.imageInfo.url, this.imageInfo.downloadFileName);\n    },\n    async TimeSeriesPlot(kk, WKT, WKTType,default_level_value) {\n\n      let layerBind = this.getBindedLayer(kk.layerId);\n      let layer = layerBind.getLayer();\n\n      let SourceParam = null;\n      let SourceURL = null;\n      let layerProperties = null;\n\n      if (layer.getProperties().ThreddsDataServerVersion) {\n        layerProperties = layer.getProperties();\n        SourceParam = layer.getCurrentLayer().getProperties().source.getParams();\n        SourceURL = [];\n        layerProperties.source.url.forEach(function (val) {\n          SourceURL.push(val.split('/wms/')[1]);\n        });\n\n      } else {\n        layerProperties = layer.getProperties();\n        SourceParam = layer.source.getParams();\n        SourceURL = layer.source.getUrls()[0].split('wms')[1];\n      }\n      let param = {\n        DATADIR: SourceURL,\n        LAYER: SourceParam.LAYERS,\n        wkt: WKT,\n        type: WKTType\n      };\n\n      let parsedData = await this.TimeSeriesRasterQuery(param);\n      if (parsedData.status === 200) {\n        let title = layerProperties.chartDetail.title + \" values\";\n        let subTitle;\n        if (default_level_value) {\n          subTitle = default_level_value;\n        } else {\n          subTitle = parsedData.geom;\n        }\n        let YaxisLabel = layerProperties.chartDetail.unit;\n        let SeriesName = layerProperties.chartDetail.SeriesName;\n        let highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, subTitle, parsedData.SeriesData, SeriesName, YaxisLabel, parsedData.XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1])\n        Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n      }\n    }\n  },\n  computed: {\n    ...mapState([\"mapControlVariable\", \"TimeSeriesLayerCollection\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n  },\n  created() {\n    eventHub.$on(\"getVisualization\", () => {\n      this.renderVisualization();\n    });\n  },\n  async mounted() {\n\n    // Generate the chart\n//     Highcharts.chart('chart', {\n//       credits: {\n//         enabled: false\n//       },\n//       title: {\n//         align: \"center\",\n//         text: \"Select Indices to Display Chart\",\n//       },\n//       series: [{\n//         data: [],\n//       }],\n//       chart: {\n//         backgroundColor: 'rgba(255,255,255,0)',\n//         style: {\n//           \"fontFamily\": \"Lato,\\\"Lucida Grande\\\", \\\"Lucida Sans Unicode\\\", Verdana, Arial, Helvetica, sans-serif\",\n//           \"fontSize\": \"12px\"\n//         },\n//\n//         animation: true,\n//         zoomType: 'x',\n// //        borderColor: '#000000',\n// //        borderWidth: 2,\n//         type: 'area',\n//       },\n//       noData: {\n//         style: {\n//           fontWeight: 'bold',\n//           fontSize: '15px',\n//           color: '#303030'\n//         }\n//       },\n//     });\n    eventHub.$on('UpdateChart', (HcObject) => {\n      this.updateChart(HcObject);\n    });\n  },\n};\n</script>\n\n<style scoped>\n\n.chart-option .el-row {\n  margin-left: 5px !important;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-right: 8px !important;\n}\n\n.chart-option {\n  border-bottom: solid 1px #e2e2e2;\n}\n\n.chart-div {\n  height: 100%;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n.center-content-parent {\n  position: relative;\n}\n\n.center-content-child {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  margin: -70px 0 0 -170px;\n}\n\n.flex-center-vertically {\n  padding: 20px;\n  justify-content: center;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  height: 100%;\n}\n\n.plotSelection {\n  display: block;\n}\n\n.sync-chart .el-button {\n  width: 100%;\n}\n\n.position-relative {\n  position: relative !important;\n}\n\n.download-map-Image {\n  z-index: 1000;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  color: #afacac;\n  cursor: pointer;\n}\n\n.vertically-center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</style>\n","import emitter from 'tiny-emitter/instance';\n\nexport default {\n  $on: (...args) => emitter.on(...args),\n  $once: (...args) => emitter.once(...args),\n  $off: (...args) => emitter.off(...args),\n  $emit: (...args) => emitter.emit(...args),\n}","import Highcharts from 'highcharts';\nlet AllMonths = {\n    0: \"January\",\n    1: \"February\",\n    2: \"March\",\n    3: \"April\",\n    4: \"May\",\n    5: \"June\",\n    6: \"July\",\n    7: \"August\",\n    8: \"September\",\n    9: \"October\",\n    10: \"November\",\n    11: \"December\"\n}\n\n\nvar chartHelperObj = {};\nchartHelperObj.DateTickInterval__monthly = 30 * 24 * 3600 * 1000; //Month\nchartHelperObj.DateTickInterval__quartly = 30 * 24 * 3600 * 1000; //Month\nchartHelperObj.DateTickInterval__dekad = 10 * 24 * 3600 * 1000; //10 days\n\nchartHelperObj.DateFormatter__monthly = function () {\n    return Highcharts.dateFormat('%Y-%b', this.value);\n};\nchartHelperObj.DateFormatter__quartly = function () {\n    let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    var dt = new Date(this.value);\n    var str = dt.getFullYear().toString() + \"-\";\n    str += monthNames[dt.getMonth()][0];\n    dt.setDate(1);\n    dt.setMonth(dt.getMonth() + 1);\n    str += monthNames[dt.getMonth()][0];\n    dt.setMonth(dt.getMonth() + 1);\n    str += monthNames[dt.getMonth()][0];\n    return str;\n    // return Highcharts.dateFormat('%Y-%b', this.value)\n};\nchartHelperObj.DateFormatter__dekad = function () {\n    var dt = new Date(this.value);\n    if (dt.getDate() <= 10) {\n        return Highcharts.dateFormat('%Y-%b-D1', this.value);\n    } else if (dt.getDate() <= 20) {\n        return Highcharts.dateFormat('%Y-%b-D2', this.value);\n    } else {\n        return Highcharts.dateFormat('%Y-%b-D3', this.value);\n    }\n};\n\nchartHelperObj.TickPositioner__monthly = function () {\n    return undefined;\n};\nchartHelperObj.TickPositioner__quartly = function () {\n    return undefined;\n};\nchartHelperObj.TickPositioner__dekad = function (data) {\n    let PositionList = [];\n    data.forEach(function (val) {\n        PositionList.push(val[0]);\n    });\n    let TickPositionerFunction = function () {\n        return PositionList;\n    };\n    return TickPositionerFunction;\n};\n\nchartHelperObj.TooltipFormater__dekad = function () {\n    let funn = function () {\n        var dt = new Date(this.x);\n        let customDate = '';\n        if (dt.getDate() <= 10) {\n            customDate = Highcharts.dateFormat('%Y-%b-D1', this.x);\n        } else if (dt.getDate() <= 20) {\n            customDate = Highcharts.dateFormat('%Y-%b-D2', this.x);\n        } else {\n            customDate = Highcharts.dateFormat('%Y-%b-D3', this.x);\n        }\n        let htmlStr = customDate + '<br/>';\n        this.points.forEach((val) => {\n            let aa = '<span style=\"color:' + val.color + '\">●</span> ' + val.series.name + ': <b>' + val.y + val.series.tooltipOptions.valueSuffix + '</b><br/>';\n            htmlStr = htmlStr + aa;\n        });\n        return htmlStr;\n    }\n    return funn;\n};\nchartHelperObj.TooltipFormater__monthly = function () {\n    let funn = function () {\n        let customDate = Highcharts.dateFormat('%Y-%b', this.x);\n        let htmlStr = customDate + '<br/>';\n        this.points.forEach((val) => {\n            let aa = '<span style=\"color:' + val.color + '\">●</span> ' + val.series.name + ': <b>' + val.y + val.series.tooltipOptions.valueSuffix + '</b><br/>';\n            htmlStr = htmlStr + aa;\n        });\n        return htmlStr;\n    }\n    return funn;\n};\nchartHelperObj.TooltipFormater__quartly = function () {\n    let funn = function () {\n        let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        var dt = new Date(this.x);\n        dt.setDate(1);\n        // dt.setMonth(dt.getMonth() + 1);\n        var str = dt.getFullYear().toString() + \"-\";\n        str += monthNames[dt.getMonth()][0];\n        dt.setDate(1);\n        dt.setMonth(dt.getMonth() + 1);\n        str += monthNames[dt.getMonth()][0];\n        dt.setMonth(dt.getMonth() + 1);\n        str += monthNames[dt.getMonth()][0];\n        let customDate = str;\n        let htmlStr = customDate + '<br/>';\n        this.points.forEach((val) => {\n            let aa = '<span style=\"color:' + val.color + '\">●</span> ' + val.series.name + ': <b>' + val.y + val.series.tooltipOptions.valueSuffix + '</b><br/>';\n            htmlStr = htmlStr + aa;\n        });\n        return htmlStr;\n    };\n    return funn;\n};\n\nvar MapHelper = {};\nMapHelper.dateisoFormatForLevelFormatter__monthly = function (isoDate) {\n    let dateObj = Date.parseISO8601(isoDate);\n    let FullYear = dateObj.getFullYear().toString();\n    let FullMonth = dateObj.getMonth();\n    return FullYear + '-' + AllMonths[FullMonth];\n};\n\nMapHelper.dateisoFormatForLevelFormatter__dekad = function (isoDate) {\n    var dt = new Date(isoDate);\n    if (dt.getDate() <= 10) {\n        return Highcharts.dateFormat('%Y-%b-D1', dt)\n    } else if (dt.getDate() <= 20) {\n        return Highcharts.dateFormat('%Y-%b-D2', dt)\n    } else {\n        return Highcharts.dateFormat('%Y-%b-D3', dt)\n    }\n};\n\nMapHelper.dateisoFormatForLevelFormatter__quartly = function (isoDate) {\n        let dateObj = Date.parseISO8601(isoDate);\n        let FullYear = dateObj.getFullYear().toString();\n        let FullMonth = dateObj.getMonth();\n        let threeMonths = '';\n        if (FullMonth === 11) {\n            threeMonths = AllMonths[FullMonth].slice(0, 1) + AllMonths[0].slice(0, 1) + AllMonths[1].slice(0, 1);\n        } else if (FullMonth === 10) {\n            threeMonths = AllMonths[FullMonth].slice(0, 1) + AllMonths[FullMonth + 1].slice(0, 1) + AllMonths[0].slice(0, 1);\n        } else {\n            threeMonths = AllMonths[FullMonth].slice(0, 1) + AllMonths[FullMonth + 1].slice(0, 1) + AllMonths[FullMonth + 2].slice(0, 1);\n        }\n        return FullYear + '-' + threeMonths;\n    };\n\n\nexport function CollectHighchartRequiredInfo(dataPeriod, mean_data) {\n    let tickInterval = chartHelperObj[\"DateTickInterval__\" + dataPeriod];\n    let Dateformater = chartHelperObj[\"DateFormatter__\" + dataPeriod];\n    let TickPositioner = chartHelperObj[\"TickPositioner__\" + dataPeriod](mean_data);\n    let TootTipFormatter = chartHelperObj[\"TooltipFormater__\" + dataPeriod]();\n    return {tickInterval, Dateformater, TickPositioner, TootTipFormatter};\n}\nexport function CustomTimeDimensionalLayerDateLabel(dataPeriod){\n    return MapHelper[\"dateisoFormatForLevelFormatter__\"+dataPeriod];\n}\n\nexport function CurrentDateFormat(){\n        var d = new Date(),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function getURLParameters() {\n    var vars = {};\n\n    window.location.href.split('#')[0].replace(/[?&]+([^=&]+)=([^&]*)/gi,\n        function (m, key, value) {\n            vars[key] = value;\n        });\n    return vars;\n}\n\n\n\n\nexport function updateURLParameter(url, param, paramVal) {\n    var TheAnchor = null;\n    var newAdditionalURL = \"\";\n    var tempArray = url.split(\"?\");\n    var baseURL = tempArray[0];\n    var additionalURL = tempArray[1];\n    var temp = \"\";\n    let tmpAnchor = '';\n    let TheParams = '';\n    if (additionalURL) {\n        tmpAnchor = additionalURL.split(\"#\");\n        TheParams = tmpAnchor[0];\n        TheAnchor = tmpAnchor[1];\n        if (TheAnchor)\n            additionalURL = TheParams;\n\n        tempArray = additionalURL.split(\"&\");\n\n        for (var i = 0; i < tempArray.length; i++) {\n            if (tempArray[i].split('=')[0] != param) {\n                newAdditionalURL += temp + tempArray[i];\n                temp = \"&\";\n            }\n        }\n    } else {\n        tmpAnchor = baseURL.split(\"#\");\n        TheParams = tmpAnchor[0];\n        TheAnchor = tmpAnchor[1];\n\n        if (TheParams)\n            baseURL = TheParams;\n    }\n\n    if (TheAnchor)\n        paramVal += \"#\" + TheAnchor;\n\n    var rows_txt = temp + \"\" + param + \"=\" + paramVal;\n    return baseURL + \"?\" + newAdditionalURL + rows_txt;\n}","import {DefaultMaskWMS, TethysAPIAppName} from \"../config\";\n// import {Icon} from \"ol/style\";\nimport {Action} from \"../store/actionType\";\nimport {getURLParameters} from \"./helpers\";\n\n\nvar myApp = {};\n// First need to initilize\n\n\nmyApp.startDate = new Date();\nmyApp.startDate.setDate(myApp.startDate.getDate() - 1);\nmyApp.endDate = new Date();\n\n\nlet recentDate = getURLParameters()['date'];\nif (recentDate) {\n    if (recentDate.length == 8) {\n        let checkInt = parseInt(recentDate);\n        if (checkInt) {\n            // Number with valid\n            let YYYY = parseInt(recentDate.slice(0, 4));\n            let MM_index = parseInt(recentDate.slice(4, 6)) - 1;\n            let DD = parseInt(recentDate.slice(6, 8));\n            let dObject = new Date(YYYY, MM_index, DD);\n            myApp.startDate = dObject;\n            myApp.endDate = new Date(YYYY, MM_index, DD);\n            myApp.endDate.setDate(myApp.endDate.getDate() + 1);\n        }\n    }\n}\n\n\n\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\n\n\nmyApp.APICollection = {\n    layerData: {\n        Aeronet: '/apps/' + TethysAPIAppName + '/aeronetaodpm/',\n        USEmbassyAOD: '/apps/' + TethysAPIAppName + '/usembassypm/',\n        getGeoJSONofStations: '/apps/' + TethysAPIAppName + '/getGeoJSONofStations/',\n        getGeoJsonForOneSatation: '/apps/' + TethysAPIAppName + '/getGeoJsonForOneSatation/',\n        getAllStationsID: '/apps/' + TethysAPIAppName + '/getAllStationsID/',\n    },\n    api: {\n        commonAPI: '/apps/' + TethysAPIAppName + '/getData/',\n        RegionGeojson: '/apps/' + TethysAPIAppName + '/geojsonregion/',\n        AOIPolygon: '/apps/' + TethysAPIAppName + '/aoipolygon/',\n        GetMapImage: '/apps/' + TethysAPIAppName + '/getmapimage/',\n        GetImage: '/apps/' + TethysAPIAppName + '/downloadImage/',\n        SlicedFromCatalog: '/apps/' + TethysAPIAppName + '/slicedfromcatalog/'\n    }\n};\n\n\nmyApp.constants = {\n    recent: {\n        layerId: {\n            TerraModisTrueColor: 'Recent__TerraModisTrueColor',\n            VIIRS_SNPPTrueColor: 'Recent__VIIRS_SNPP-TrueColor1km',\n            PM_AeronetAOD: 'Recent__aeronet',\n            PM_usembassy: 'Recent__usembassy',\n            GEOS_PM2p5: 'Recent__GEOS_PM2p5',\n            TerraModisAOD: 'Recent__TerraModisAOD',\n            O3_GEOS: 'Recent__GEOS_O3',\n            O3_usembassy: 'Recent__usembassy_O3',\n            SO2_GEOS: 'Recent__GEOS_SO2',\n            NO2_GEOS: 'Recent__GEOS_NO2',\n            CO_GEOS: 'Recent__GEOS_CO',\n            Nep_Gov_PM1:'Nep_Gov_PM1',\n            Nep_Gov_PM10:'Nep_Gov_PM10',\n            Nep_Gov_PM2p5:'Nep_Gov_PM2p5',\n            Nep_Gov_tsp:'Nep_Gov_tsp',\n        }\n    }\n};\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\nmyApp.AllBindedLayersList = [];\nmyApp.OnlyOnce = true;\n\nmyApp.getLayer = function (id) {\n    // console.log(id)\n    var layer;\n    for (let i = 0; i < myApp.AllBindedLayersList.length; i++) {\n        // console.log(myApp.AllBindedLayersList[i].getProperties().id);\n        if (id == myApp.AllBindedLayersList[i].getProperties().id) { ///popDensityLayer.getProperties().id\n            layer = myApp.AllBindedLayersList[i].getLayer();\n            break;\n        }\n    }\n    return layer;\n};\n\n\n\n\nmyApp.formatDateWithHHMM = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear(),\n        hour =''+d.getHours(),\n    minute = ''+d.getMinutes()\n\n    if (month.length < 2)\n        month = '0' + month;\n\n    if (day.length < 2)\n        day = '0' + day;\n\n    if (hour.length<2)\n        hour='0'+hour\n\n    if(minute.length<2)\n        minute='0'+minute\n\n    return [year, month, day,hour,minute].join('-');\n};\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n    return [year, month, day].join('-');\n};\n\nlet SLDRGB=`<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"\n                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"\n                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:resc=\"http://www.resc.reading.ac.uk\">\n    <NamedLayer>\n     <se:Name>red</se:Name>\n        <UserStyle>\n            <se:Name>Thesholded colour scheme</se:Name>\n            <se:CoverageStyle>\n                <se:Rule>\n                    <resc:RasterRGBSymbolizer>\n                        <se:Opacity>1.0</se:Opacity>\n                        <se:ColorMap>\n                            <resc:RedBand>\n                                <resc:BandName>red</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:RedBand>\n                            <resc:GreenBand>\n                                <resc:BandName>green</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:GreenBand>\n                            <resc:BlueBand>\n                                <resc:BandName>blue</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>1</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                    <resc:Spacing>linear</resc:Spacing>\n                                </resc:Range>\n                            </resc:BlueBand>\n                        </se:ColorMap>\n                    </resc:RasterRGBSymbolizer>\n                </se:Rule>\n            </se:CoverageStyle>\n        </UserStyle>\n    </NamedLayer>\n</StyledLayerDescriptor>\n`;\n\n// myApp.TrueColorImage = {\n//     catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/TerraMODIS-TrueColor1km/catalog.xml',\n//     useSLD: true,\n//     isTimeDimensionLayer: true,\n//     SLD: SLDRGB,\n//     getStartDate: function () {\n//         return myApp.formatDate(myApp.startDate)\n//     },\n//     getEndDate: function () {\n//         return myApp.formatDate(myApp.startDate)\n//     },\n//     VisibleDivBind: true,\n//     threddLayerProp: {\n//         id: myApp.constants.recent.layerId.TerraModisTrueColor,\n//         title: 'TerraModis-TrueColor (' + myApp.formatDate(myApp.startDate) + ')',\n//         visible: true,\n//         opacity: 0.5,\n//         legendPath: Action.Base + '/' + Action.trueColorLegendImage,\n//         ThreddsDataServerVersion: 5,\n//         serverType: 'TDS',\n//         timeSeries: false,\n//         alignTimeSlider: 'left',\n//         timeSliderSize: 'small',\n//         showlegend: false,\n//         showControlPanel: false,\n//         zIndex: 10,\n//         source: {\n//             url: [],\n//             params: {\n//                 'LAYERS': 'red',\n//                 'transparent': true\n//             }\n//         },\n//         mask: DefaultMaskWMS,\n//         CropOrMask: 'crop',\n//         changeWMSProxy: true,\n//     }\n// };\n\nmyApp.TrueColorImage = {\n    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/VIIRS_SNPP-TrueColor1km/catalog.xml',\n    useSLD: true,\n    isTimeDimensionLayer: true,\n    SLD: SLDRGB,\n    getStartDate: function () {\n        return myApp.formatDate(myApp.startDate)\n    },\n    getEndDate: function () {\n        return myApp.formatDate(myApp.startDate)\n    },\n    VisibleDivBind: true,\n    threddLayerProp: {\n        id: myApp.constants.recent.layerId.VIIRS_SNPPTrueColor,\n        title: 'VIIRS SNPP TrueColor (' + myApp.formatDate(myApp.startDate) + ')',\n        visible: true,\n        opacity: 0.5,\n        legendPath: Action.Base + '/' + Action.trueColorLegendImage,\n        ThreddsDataServerVersion: 5,\n        serverType: 'TDS',\n        timeSeries: false,\n        alignTimeSlider: 'left',\n        timeSliderSize: 'small',\n        showlegend: false,\n        showControlPanel: false,\n        zIndex: 10,\n        source: {\n            url: [],\n            params: {\n                'LAYERS': 'red',\n                'transparent': true\n            }\n        },\n        mask: DefaultMaskWMS,\n        CropOrMask: 'crop',\n        changeWMSProxy: true,\n    }\n};\n\nmyApp.DefaultSations = {\n    aeronetAOD: [2, 5, 3, 6],\n    pm2p5Embassy: [6, 7, 6, 7],\n    o3Embassy: [6, 7, 6, 7],\n    NepalStation: [57,11,15,71]\n};\n\nmyApp.cascaderObj = [\n    {\n        label: 'PM',\n        value: 1,\n        children: [\n            {\n                label: 'Surface Observation-AOD (AERONET)',\n                value: 11,\n                layerId: myApp.constants.recent.layerId.PM_AeronetAOD,\n                stationData: true,\n                ModelClass: 'AeronetAod',\n                ModelClassDataList: 'AeronetDataList',\n                typeName: 'aod',\n                defaultStation: myApp.DefaultSations.aeronetAOD,\n                chart: {\n                    title: function (stationName) {\n                        return stationName + ' (' + 'Last 24 hours' + ')';\n                    },\n                    subTitle: 'AERONET level 1.5 data measured at 500nm',\n                    SeriesName: 'SeriesName',\n                    YaxisLabel: 'AOD (500nm)',\n                    XaxisLabel: function () {\n                        return 'Time (UTC)'\n                    },\n                    plotType: 'point'\n                },\n                layerProperties: {\n                    initilize: false,\n                    id: myApp.constants.recent.layerId.PM_AeronetAOD,\n                    title: 'Surface Observation-AOD (AERONET)',\n                    visible: false,\n                    opacity: 1,\n                    zIndex: 5,\n                    layer: 'AirQuality:aeronet_aod',\n                },\n            },\n            {\n                label: 'Ground Observation-PM2.5 (AirNow)',\n                layerId: myApp.constants.recent.layerId.PM_usembassy,\n                value: 12,\n                stationData: true,\n                ModelClass: 'UsEmbassyPm',\n                ModelClassDataList: 'UsEmbassyDataList',\n                typeName: 'pm',\n                defaultStation: myApp.DefaultSations.pm2p5Embassy,\n                chart: {\n                    title: function (stationName) {\n                        return stationName + ' (' + 'Last 24 hours' + ')';\n                    },\n                    subTitle: 'source: AirNow',\n                    SeriesName: 'PM2.5',\n                    YaxisLabel: 'PM<sub>2.5</sub>(μg/m<sup>3</sup>)',\n                    XaxisLabel: function () {\n                        return 'Time (UTC)';\n                    }\n                },\n                layerProperties: {\n                    initilize: false,\n                    id: myApp.constants.recent.layerId.PM_usembassy,\n                    title: 'Ground Observation-PM2.5',\n                    visible: false,\n                    opacity: 1,\n                    zIndex: 6,\n                    layer: 'AirQuality:us_embassy_pm2p5',\n                },\n            },\n        ]\n    },\n    // {\n    //     label: 'O3',\n    //     value: 2,\n    //     children: [\n    //         {\n    //             label: 'Surface Observation-O3',\n    //             layerId: myApp.constants.recent.layerId.O3_usembassy,\n    //             value: 23,\n    //             stationData: true,\n    //             ModelClass: 'UsEmbassyPm',\n    //             ModelClassDataList: 'UsEmbassyDataList',\n    //             typeName: 'O3',\n    //             defaultStation: myApp.DefaultSations.o3Embassy,\n    //             chart: {\n    //                 title: function (stationName) {\n    //                     return stationName + ' (' + sd + ')';\n    //                 },\n    //                 subTitle: 'source: AirNow',\n    //                 SeriesName: 'O3',\n    //                 YaxisLabel: 'O<sub>3</sub>(ppb)',\n    //                 XaxisLabel: function () {\n    //                     return 'Time (UTC)'\n    //                 }\n    //             },\n    //             layerProperties: {\n    //                 initilize: false,\n    //                 id: myApp.constants.recent.layerId.O3_usembassy,\n    //                 title: 'Surface Observation-O3',\n    //                 visible: false,\n    //                 opacity: 1,\n    //                 zIndex: 7,\n    //                 layer: 'AirQuality:us_embassy_o3',\n    //             },\n    //         },\n    //     ]\n    // }\n    ];\n\n\nmyApp.makeRequest = function (method, url) {\n    return new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(method, url);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                resolve(xhr.response);\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n};\n\nmyApp.datetimePointChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n            chart: {\n                marginLeft: 65,\n                /* marginRight: 0, */\n                /* spacingLeft: 0, */\n                /* spacingRight: 0 */\n                backgroundColor: 'transparent',\n                plotBorderColor: '#afafaf',\n                plotBorderWidth: 1,\n            },\n            title: {\n                text: title,\n                fontSize: '10px',\n                useHTML: true\n            },\n            subtitle: {\n                text: subTitle,\n                fontSize: '8px'\n            },\n            series: [{\n                name: SeriesName,\n                data: SeriesData,\n                lineWidth: 0,\n                marker: {\n                    enabled: true,\n                    symbol: 'diamond',\n                    radius: 2\n                },\n            }],\n            xAxis: {\n                type: 'datetime',\n                title: {\n                    text: XaxisLabel,\n                    align: 'high',\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0\n            },\n            yAxis: {\n                title: {\n                    text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                    useHTML: true,\n                    rotation: 0,\n                    // align: 'high',\n                    offset: 0,\n                    x: -50\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0,\n                gridLineWidth: 0\n            },\n            legend: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    color: plotColor\n                }\n            },\n            lang: {\n                noData: DataPeriod + 'data not available for this station.'\n            },\n            exporting: {\n                buttons: {\n                    contextButton: {\n                        menuItems: [\"printChart\",\n                            \"separator\",\n                            \"downloadPNG\",\n                            \"downloadJPEG\",\n                            \"downloadPDF\",\n                            \"downloadSVG\",\n                            \"separator\",\n                            \"downloadCSV\",\n                            \"downloadXLS\",\n                            //\"viewData\",\n                            \"openInCloud\"]\n                    }\n                },\n                // chartOptions: {\n                //     title: {\n                //         text: title,\n                //         fontSize: '10px',\n                //         useHTML: true\n                //     }, yAxis: {\n                //         title: {\n                //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                //             useHTML: true,\n                //             rotation: 250\n                //         }\n                //     },\n                // },\n                allowHTML: true,\n                // fallbackToExportServer: false,\n                // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n            }\n        }\n    ;\n    return data\n};\n\nmyApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n        chart: {\n            marginLeft: 65,\n            /* marginRight: 0, */\n            /* spacingLeft: 0, */\n            /* spacingRight: 0 */\n            backgroundColor: 'transparent',\n            plotBorderColor: '#afafaf',\n            plotBorderWidth: 1,\n        },\n        title: {\n            text: title,\n            fontSize: '10px',\n            useHTML: true\n        },\n        subtitle: {\n            text: subTitle,\n            fontSize: '8px'\n        },\n        series: [{\n            name: SeriesName,\n            data: SeriesData,\n            // marker: {\n            //     enabled: true,\n            //     symbol: 'diamond',\n            //     radius: 3\n            // },\n        }],\n        xAxis: {\n            type: 'datetime',\n            title: {\n                text: XaxisLabel,\n                align: 'high',\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0\n        },\n        lang: {\n            noData: DataPeriod + 'data not available for this station.'\n        },\n        yAxis: {\n            title: {\n                text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                useHTML: true,\n                rotation: 0,\n                // align: 'high',\n                offset: 0,\n                x: -50\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0,\n            gridLineWidth: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                color: plotColor\n            }\n        },\n        exporting: {\n            buttons: {\n                contextButton: {\n                    menuItems: [\"printChart\",\n                        \"separator\",\n                        \"downloadPNG\",\n                        \"downloadJPEG\",\n                        \"downloadPDF\",\n                        \"downloadSVG\",\n                        \"separator\",\n                        \"downloadCSV\",\n                        \"downloadXLS\",\n                        //\"viewData\",\n                        \"openInCloud\"]\n                }\n            },\n            // chartOptions: {\n            //     title: {\n            //         text: title,\n            //         fontSize: '10px',\n            //         useHTML: true\n            //     }, yAxis: {\n            //         title: {\n            //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n            //             useHTML: true,\n            //             rotation: 250\n            //         }\n            //     },\n            // },\n            allowHTML: true,\n            // fallbackToExportServer: false,\n            // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n        }\n    };\n    return data\n};\n\nmyApp.forceDownload = function (url, fileName) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        var urlCreator = window.URL || window.webkitURL;\n        var imageUrl = urlCreator.createObjectURL(this.response);\n        var tag = document.createElement('a');\n        tag.href = imageUrl;\n        tag.download = fileName;\n        document.body.appendChild(tag);\n        tag.click();\n        document.body.removeChild(tag);\n    }\n    xhr.send();\n}\n\n\nexport var AirPollutionWatchApp = myApp;\n","import { render } from \"./chartComponentRecent.vue?vue&type=template&id=102c4e27&scoped=true\"\nimport script from \"./chartComponentRecent.vue?vue&type=script&lang=js\"\nexport * from \"./chartComponentRecent.vue?vue&type=script&lang=js\"\n\nimport \"./chartComponentRecent.vue?vue&type=style&index=0&id=102c4e27&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-102c4e27\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Map Controls\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n        <el-form\n            label-position=\"left\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n        >\n          <el-form-item label=\"Select By\" prop=\"select_by\">\n            <el-select v-model=\"mapControlVariable.select_by\" placeholder=\"Select By\" style=\"width: 100%\">\n              <el-option\n                  v-for=\"item in options.select_by\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                  :disabled=\"item.disabled\"\n              >\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n        </el-form>\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n            v-if=\"mapControlVariable.select_by ==='Location'\"\n        >\n\n          <el-form-item v-show=\"mapControlVariable.data_period !=='Recent'\" label=\"Select Location\"\n                        prop=\"Select Location\">\n\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-model=\"mapControlVariable.location_by\" placeholder=\"Select Location\" style=\"width: 100%\">\n                <el-option\n                    v-for=\"item in options.location_by\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n\n              </el-select>\n            </el-col>\n            <el-col :span=\"2\" style=\"width: 100%\">\n              <div class=\"\" style=\"width: 100%;text-align: center;\">\n                -\n              </div>\n            </el-col>\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-show=\"mapControlVariable.location_by ==='default_locations'\"\n                         v-model=\"mapControlVariable.default_location\"\n                         placeholder=\"Select Location\" style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.default_location\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n              <div class=\"\" v-show=\"mapControlVariable.location_by ==='AOI'\">\n                <div class=\"feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===true\">Feature\n                  selected\n                </div>\n                <div class=\"no-feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===false\">No Feature\n                  selected\n                </div>\n              </div>\n            </el-col>\n\n          </el-form-item>\n\n          <el-form-item label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value1\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value2\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value3\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value4\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n\n        >\n          <el-form-item v-show=\"mapControlVariable.select_by ==='Parameter'\" label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n\n              <el-cascader\n                  v-model=\"mapControlVariable.parameter_by_pollutant_value\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n\n            </div>\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===false\"\n              label=\"Select Locations\" prop=\"Locations\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--                                                            -->\n            <!--            </el-radio-group>-->\n\n            <el-radio-group v-model=\"mapControlVariable.radioValue\">\n              <el-radio :label=\"1\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='1'?false:true\"\n\n                                :IndexValue=\"1\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"2\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='2'?false:true\"\n                                :IndexValue=\"2\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"3\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='3'?false:true\"\n                                :IndexValue=\"3\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"4\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='4'?false:true\"\n                                :IndexValue=\"4\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n            </el-radio-group>\n\n\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===true\"\n              label=\"Select Stations\" prop=\"station\">\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val1\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val2\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val3\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val4\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n        <el-button class=\"compute-now\" type=\"primary\" size=\"mini\" style=\"width: 100%\" @click=\"computeData\">compute\n        </el-button>\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n<script>\n\nimport {mapActions, mapGetters, mapMutations, mapState} from \"vuex\";\nimport OLWKT from \"ol/format/WKT\";\nimport selectLocation from \"../common/selectLocation\";\n// import {threddDataSource} from \"../config\"\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\nimport {AirPollutionWatchApp} from \"../../utils/dataRecent\";\n// import OlVectorLayer from \"ol/layer/Vector\";\n// import OlVectorSource from \"ol/source/Vector\";\nimport OlGeoJSON from \"ol/format/GeoJSON\";\nimport {getCenter as ol_extent_getCenter} from \"ol/extent\";\nimport eventHub from \"../../utils/utils\";\n\n// import {ElLoading} from 'element-plus';\n// import rgbLegend from '../assets/rgblegend.jpg';\n// import usembassyPm2p5 from '../assets/usembassyPm2p5.jpg';\n// import AODAeroNet from '../assets/AODAeroNet.jpg';\nimport {Action} from \"../../store/actionType\";\nimport {Image as ImageLayer} from \"ol/layer\";\nimport ImageWMS from \"ol/source/ImageWMS\";\nimport {GeoServerHost, threddDataSource} from \"../../config\";\n// import rgbLegend from \"../assets/rgblegend.jpg\";\nimport TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport Style from \"ol/style/Style\";\nimport {Icon} from \"ol/style\";\n// import ol_legend_Item from 'ol-ext/legend/Item';\n\nexport default {\n  name: \"mapControlsRecent\",\n  data() {\n    return {\n      maskCoordinate: null,\n      data__layer__initilize__Recent: false,\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      options: {\n        select_by: [\n          {\n            value: 'Location',\n            label: 'Location',\n          },\n          {\n            value: 'Parameter',\n            label: 'Parameter',\n          }\n        ],\n        location_by: [\n          {\n            value: 'default_locations',\n            label: 'Major Cities',\n          },\n          {\n            value: 'AOI',\n            label: 'Select on map',\n          }\n        ],\n        default_location: [],\n        ObservationStationOptions: []\n      },\n      PROXY_PREFIX: Action.Base + '/apps/airquality/WMSProxy/',\n    }\n  },\n  watch: {\n    SelectDefaultLocation(newVal, oldVal) {\n      if (newVal) {\n        // add it to vectorLayer\n        let selNewValObj = this.options.default_location.filter(function (x) {\n          return newVal == x.value\n        })[0];\n\n        let Feature = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        Feature.set(\"SelectBy\", \"Location\");\n        Feature.set(\"LocationBy\", \"default_location\");\n        this.WorkingVectorLayer.getSource().addFeature(Feature);\n\n        var view = this.mapObject.getView();\n        var resolution = view.getResolutionForExtent(Feature.getGeometry().getExtent(), this.mapObject.getSize());\n        var zoom = view.getZoomForResolution(resolution);\n        var center = ol_extent_getCenter(Feature.getGeometry().getExtent());\n        // redraw before zoom\n        setTimeout(function () {\n          view.animate({\n            center: center,\n            zoom: Math.min(zoom, 11)\n          });\n        }, 100);\n\n        var format = new OLWKT();\n        var wktfeaturegeom = format.writeGeometry(Feature.getGeometry(), {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        var geometryType = Feature.getGeometry().getType();\n\n        // let featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n\n        // let featureForExtent = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        // featureExtent = featureExtent.getGeometry().getExtent();\n\n        this.mapControlVariable.location_by_wktValue = wktfeaturegeom;\n        this.mapControlVariable.location_by_geometryType = geometryType;\n        this.mapControlVariable.location_by_default_level_value = selNewValObj.label;\n\n      } else {\n        this.mapControlVariable.location_by_wktValue = '';\n        this.mapControlVariable.location_by_geometryType = '';\n        this.mapControlVariable.location_by_default_level_value = '';\n      }\n\n      if (oldVal) {\n        // remove it from vector layer\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Location\" && f.get(\"LocationBy\") == \"default_location\" && f.get(\"id\") == oldVal) {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n      }\n    },\n    SelectLocationBy() {\n      this.mapControlVariable.default_location = '';\n    },\n    async SelectByOption() {\n\n      if (this.mapControlVariable.select_by == \"Location\") {\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"default_location\") {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n\n        //remove the layers which are on select by parameter\n        this.SetLayerOfSelectByParameterLayer(false);\n\n        let that = this;\n        console.log(that);\n\n        // debugger;\n\n        let kk = this.getStationInfoObject(11);\n        await this.AddLayerToLayerList(kk);\n\n        let jj = this.getStationInfoObject(12);\n        await this.AddLayerToLayerList(jj);\n\n\n        // clear parameter\n        this.mapControlVariable.parameter_by_pollutant_value = [];\n\n        this.mapControlVariable.location_by_pollutant_value1 = [1, 11, 2];\n        this.mapControlVariable.location_by_pollutant_value2 = [1, 11, 5];\n        this.mapControlVariable.location_by_pollutant_value3 = [1, 12, 6];\n        this.mapControlVariable.location_by_pollutant_value4 = [1, 12, 7];\n\n      } else {\n\n        //clear Location\n        this.mapControlVariable.location_by_pollutant_value1 = [];\n        this.mapControlVariable.location_by_pollutant_value2 = [];\n        this.mapControlVariable.location_by_pollutant_value3 = [];\n        this.mapControlVariable.location_by_pollutant_value4 = [];\n\n        this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n\n        // no single default location on parameter\n        this.mapControlVariable.default_location = '';\n        this.SetLayerOfSelectByParameterLayer(true);\n      }\n      this.ObservationStationOption();\n    },\n    async SelectByParameterPollutant(newPollutant, oldPollutant) {\n\n      if (oldPollutant) {\n        if (oldPollutant.length) {\n          let kk = this.getStationInfoObject(oldPollutant[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n      let kk = this.getStationInfoObject(newPollutant[1]);\n\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        await this.AddLayerToLayerList(kk);\n        let layer = this.getBindedLayer(kk.layerId);\n        // console.log(layer.getProperties().OLEXTLegendObject);\n        // this.addLegend(layer.getProperties().OLEXTLegendObject);\n        layer.setVisibleDivBind(true);\n        layer.setVisible(false);\n        layer.setVisible(true);\n\n        if (kk.stationData) {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = true;\n          this.options.ObservationStationOptions = kk.childrenData;\n        } else {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = false;\n          this.options.ObservationStationOptions = [];\n        }\n      }\n      // check if there is selected pollutant first\n      if (Object.keys(kk).length) {\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = kk.defaultStation[0];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = kk.defaultStation[1];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = kk.defaultStation[2];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = kk.defaultStation[3];\n      }\n    },\n    location_by_pollutant_value1(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value2(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value3(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value4(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n  },\n  components: {selectLocation},\n  methods: {\n    ...mapActions([\"getCityData\", \"PostSlicedFromCatalog\", \"getGeoJsonForOneSatation\", \"getDefaultGroundObservation\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\", \"addLegend\", \"removeLegend\"]),\n    featureSelectorDeleteUpdate() {\n      var wktfeaturegeom, geometryType;\n      if (this.selectInteraction) {\n        if (this.selectInteraction.getFeatures().getLength()) {\n          var features = this.selectInteraction.getFeatures();\n          features.forEach(function (f) {\n            var format = new OLWKT();\n            wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            });\n            geometryType = f.getGeometry().getType();\n          });\n          let Param = {\n            geometryType: geometryType,\n            wkt: wktfeaturegeom,\n          };\n          console.log(Param);\n          if (this.mapControlVariable.location_by == 'AOI') {\n            this.mapControlVariable.is_AOI_Feature_selected = true;\n            this.parameter_by_location.wktValue = wktfeaturegeom;\n            this.parameter_by_location.geometryType = geometryType;\n          }\n        } else {\n          if (this.mapControlVariable.location_by == 'AOI') {\n            this.mapControlVariable.is_AOI_Feature_selected = false;\n            this.parameter_by_location.wktValue = '';\n            this.parameter_by_location.geometryType = '';\n            this.parameter_by_location.location_by_default_level_value = '';\n          }\n        }\n      }\n    },\n    CatalogSlicingParam(url, startDate, endDate) {\n      let param = {\n        url: url,\n        data_ext: '.nc',\n        startDate: startDate,\n        endDate: endDate,\n      }\n      return param\n    },\n    async addRasterLayerToMap(kk) {\n      let slicingParam, responseData, resPonseParsed, wmsList = [], isTrue;\n      let catalogURl = threddDataSource + kk.catalog;\n      slicingParam = this.CatalogSlicingParam(catalogURl, kk.getStartDate(), kk.getEndDate());\n      responseData = await this.PostSlicedFromCatalog(slicingParam);\n      resPonseParsed = responseData;\n      isTrue = resPonseParsed.data.length;\n      if (isTrue) {\n        resPonseParsed.data.forEach(function (fileName) {\n          let url = catalogURl.replace(\"/catalog/\", \"/wms/\").replace(\"catalog.xml\", fileName);\n          wmsList.push(url)\n        });\n      }\n      var Newlayer;\n      if (kk.isTimeDimensionLayer) {\n        if (kk.useSLD) {\n          let SLD = kk.SLD.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n          let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&SLD_BODY=';\n          let legendWMS = '';\n          if (!kk.legendPath) {\n            if (Array.isArray(wmsList)) {\n              legendWMS = wmsList[0] + LegendParameter + encodeURIComponent(SLD).toString();\n            } else {\n              legendWMS = wmsList + LegendParameter + encodeURIComponent(SLD).toString();\n            }\n          } else {\n            legendWMS = kk.legendPath\n          }\n          console.log(legendWMS);\n\n          let OLEXTLegendObject = {\n            id: kk.threddLayerProp.id,\n            title: kk.threddLayerProp.title,\n            typeGeom: 'Point',\n            style: new Style({\n              image: new Icon({\n                src: kk.threddLayerProp.legendPath,\n                crossOrigin: 'anonymous', // Enable print\n              })\n            }),\n            size: [60, 30]\n          };\n\n          let timedimensionTilePara = kk.threddLayerProp;\n          timedimensionTilePara.source.params.SLD_BODY = SLD;\n          timedimensionTilePara.source.url = wmsList;\n          // timedimensionTilePara.legendPath = rgbLegend;\n          timedimensionTilePara.wmsList = wmsList;\n          timedimensionTilePara.changeWMSProxy = true;\n          timedimensionTilePara.OLEXTLegendObject = OLEXTLegendObject;\n          // timedimensionTilePara.showAnimationButton = true;\n          // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n          Newlayer = new TimeDimensionTile(timedimensionTilePara);\n\n          let AddRemoveLegendFunction = function () {\n            if (this.getProperties().visible) {\n              that.addLegend(this.getProperties().OLEXTLegendObject);\n            } else {\n              that.removeLegend(this.getProperties().OLEXTLegendObject);\n            }\n          };\n\n          let that = this;\n          Newlayer.on('change:visible', AddRemoveLegendFunction);\n\n          await Newlayer.init().then(() => {\n            this.mapObject.addThreddsLayer(Newlayer);\n            let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true, 'withOpacityChange');\n            l5.setVisibleDivBind(false);\n            l5.setVisibleDivBind(true);\n            l5.setVisibleDivBind(kk.VisibleDivBind);\n            let properties = Newlayer.getProperties();\n            if (properties.mask) {\n              console.log(properties);\n              if (properties.CropOrMask == 'crop') {\n                Newlayer.setCrop(this.maskCoordinate);\n              } else {\n                Newlayer.setMask(this.maskCoordinate);\n              }\n            }\n            this.appendTimeSeriesLayerCollection(l5);\n            // myApp.AllBindedLayersList.push(l5);\n          });\n\n        } else {\n          let timedimensionTilePara = kk.threddLayerProp;\n          let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&LAYERS=' + timedimensionTilePara.source.params.LAYERS + '&COLORSCALERANGE=' + timedimensionTilePara.source.params.COLORSCALERANGE + '&STYLES=' + timedimensionTilePara.source.params.STYLES;\n          let legendWMS = '';\n          if (!kk.legendPath) {\n            if (Array.isArray(wmsList)) {\n              legendWMS = wmsList[0] + LegendParameter;\n            } else {\n              legendWMS = wmsList + LegendParameter;\n            }\n          } else {\n            legendWMS = kk.legendPath\n          }\n          timedimensionTilePara.source.url = wmsList;\n          timedimensionTilePara.legendPath = this.PROXY_PREFIX + legendWMS;\n          timedimensionTilePara.wmsList = wmsList;\n          timedimensionTilePara.changeWMSProxy = true;\n          // timedimensionTilePara.showAnimationButton = true;\n          // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n          console.log(JSON.stringify(timedimensionTilePara));\n          Newlayer = new TimeDimensionTile(timedimensionTilePara);\n\n          await Newlayer.init().then(() => {\n            this.mapObject.addThreddsLayer(Newlayer);\n            // myApp.map.addThreddsLayer(val);\n            let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true);\n            l5.setVisibleDivBind(kk.VisibleDivBind);\n            let properties = Newlayer.getProperties()\n            if (properties.mask) {\n              if (properties.CropOrMask == 'crop') {\n                Newlayer.setCrop(this.maskCoordinate);\n              } else {\n                Newlayer.setMask(this.maskCoordinate);\n              }\n            }\n            this.appendTimeSeriesLayerCollection(l5);\n            // myApp.AllBindedLayersList.push(l5);\n          });\n\n        }\n      }\n    },\n\n    computeData() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n          let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            if (this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val4) {\n              eventHub.$emit('getVisualization');\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select station on all dropdown menu.',\n                type: 'warning'\n              });\n            }\n          } else {\n            if (this.mapControlVariable.parameter_by_location__1.wktValue && this.mapControlVariable.parameter_by_location__2.wktValue && this.mapControlVariable.parameter_by_location__3.wktValue && this.mapControlVariable.parameter_by_location__4.wktValue) {\n              eventHub.$emit('getVisualization');\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select locations on all dropdown menu.',\n                type: 'warning'\n              });\n            }\n          }\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please Select a pollutant',\n            type: 'warning'\n          });\n        }\n      } else {\n        if (this.location_by_pollutant_value1.length > 0 && this.location_by_pollutant_value2.length > 0 && this.location_by_pollutant_value3.length > 0 && this.location_by_pollutant_value4.length > 0) {\n          eventHub.$emit('getVisualization');\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please select pollutants on all dropdown menu.',\n            type: 'warning'\n          });\n        }\n      }\n    },\n    ObservationStationOption() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.children) {\n              delete obj2.children;\n            }\n          });\n        });\n      } else {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.childrenData) {\n              obj2.children = obj2.childrenData;\n            }\n          });\n        });\n      }\n    },\n    getStationInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    SetLayerOfSelectByParameterLayer(IsViz) {\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n        let layer = this.getBindedLayer(kk.layerId);\n        if (IsViz) {\n          layer.setVisibleDivBind(IsViz);\n        } else {\n          layer.setVisibleDivBind(IsViz);\n        }\n      }\n    },\n    setLayerVisible(layerId, IsViz) {\n      let layer = this.getBindedLayer(layerId);\n      if (IsViz) {\n        layer.setVisible(IsViz);\n      } else {\n        layer.setVisibleDivBind(IsViz);\n      }\n    },\n    async onChangePollutantsOnSelectByLocation(newVal, oldVal) {\n      if (newVal.length) {\n        let kk = this.getStationInfoObject(newVal[1]);\n        if (Object.keys(kk).length != 0) {\n          await this.AddLayerToLayerList(kk);\n          let layer = this.getBindedLayer(kk.layerId);\n          layer.setVisibleDivBind(true);\n        }\n      }\n      if (oldVal.length) {\n        let count = 0;\n        if (this.location_by_pollutant_value1.length) {\n          if (this.location_by_pollutant_value1[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value2.length) {\n          if (this.location_by_pollutant_value2[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value3.length) {\n          if (this.location_by_pollutant_value3[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value4.length) {\n          if (this.location_by_pollutant_value4[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (count === 0) {\n          let kk = this.getStationInfoObject(oldVal[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n    },\n    async AddLayerToLayerList(kk) {\n      console.log(kk)\n      if (kk.layerProperties.initilize == false) {\n        kk.layerProperties.initilize = true;\n        if (kk.stationData == true) {\n          let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n          let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n          let lyr = kk.layerProperties.layer;\n          let le = {\n            id: kk.layerProperties.id,\n            title: kk.layerProperties.title,\n            typeGeom: 'Point',\n            style: new Style({\n              image: new Icon({\n                src: WMSURLWithRequestParameter + lyr,\n                crossOrigin: 'anonymous' // Enable print\n              })\n            }),\n               size: [60, 30]\n          };\n          let layerObj = new ImageLayer({\n            id: kk.layerProperties.id,\n            title: kk.layerProperties.title,\n            visible: kk.layerProperties.visible,\n            legendPath: WMSURLWithRequestParameter + lyr,\n            zIndex: kk.layerProperties.zIndex,\n            OLEXTLegendObject: le,\n            opacity: kk.layerProperties.opacity,\n            source: new ImageWMS({\n              url: GeoServerWMSURL,\n              crossOrigin: 'anonymous',\n              params: {'LAYERS': lyr},\n              serverType: 'geoserver',\n            }),\n          });\n\n          let AddRemoveLegendFunction = function () {\n            if (this.getProperties().visible) {\n              that.addLegend(this.getProperties().OLEXTLegendObject);\n            } else {\n              that.removeLegend(this.getProperties().OLEXTLegendObject);\n            }\n          };\n\n          let that = this;\n          layerObj.on('change:visible', AddRemoveLegendFunction);\n\n          this.mapObject.addLayer(layerObj);\n          let l5 = new LayerSwitcher(\".layerCollection\", layerObj, false, false);\n          this.appendTimeSeriesLayerCollection(l5);\n          l5.setVisibleDivBind(kk.layerProperties.visible);\n          let sd = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n          let ed = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.endDate);\n          let regionOrCountry = 0;\n          let Param = '?ModelClass=' + kk.ModelClass + \"&ModelClassDataList=\" + kk.ModelClassDataList + '&typeName=' + kk.typeName + '&StartDate=' + sd + '&EndDate=' + ed + '&rid=' + regionOrCountry\n          let dataResponse = await this.getGeoJsonForOneSatation(Param);\n          kk.childrenData = dataResponse.data;\n        } else {\n          console.log(kk);\n        }\n      }\n    },\n    InitilizeStationDataOnLoad() {\n      this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n        obj1.children.forEach((obj2) => {\n          if (obj2.stationData) {\n            this.AddLayerToLayerList(obj2);\n          }\n        });\n      });\n    }\n  },\n  computed: {\n    ...mapState([\"selectInteraction\", \"mapObject\", \"TimeSeriesLayerCollection\", \"WorkingVectorLayer\", \"mapControlVariable\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n    cascaderData() {\n      return this.AirPollutionWatchApp.cascaderObj;\n    },\n    SelectDefaultLocation() {\n      return this.mapControlVariable.default_location;\n    },\n    SelectLocationBy() {\n      return this.mapControlVariable.location_by;\n    },\n    SelectByOption() {\n      return this.mapControlVariable.select_by;\n    },\n    SelectDataPeriod() {\n      return this.mapControlVariable.data_period;\n    },\n    SelectByParameterPollutant() {\n      return this.mapControlVariable.parameter_by_pollutant_value;\n    },\n    location_by_pollutant_value1() {\n      return this.mapControlVariable.location_by_pollutant_value1;\n    },\n    location_by_pollutant_value2() {\n      return this.mapControlVariable.location_by_pollutant_value2;\n    },\n    location_by_pollutant_value3() {\n      return this.mapControlVariable.location_by_pollutant_value3;\n    },\n    location_by_pollutant_value4() {\n      return this.mapControlVariable.location_by_pollutant_value4;\n    },\n  },\n  async mounted() {\n    // load city location Data\n\n\n    setTimeout(() => {\n      this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n    }, 500);\n\n    this.addRasterLayerToMap(this.AirPollutionWatchApp.TrueColorImage);\n\n    // let OLEXTLegendObject = {\n    //   id: this.AirPollutionWatchApp.TrueColorImage.threddLayerProp.id,\n    //   title: this.AirPollutionWatchApp.TrueColorImage.threddLayerProp.title,\n    //   typeGeom: 'Point',\n    //   style: new Style({\n    //     image: new Icon({\n    //       src: this.AirPollutionWatchApp.TrueColorImage.threddLayerProp.legendPath,\n    //       crossOrigin: 'anonymous', // Enable print\n    //     })\n    //   })\n    // };\n    // this.AirPollutionWatchApp.TrueColorImage.threddLayerProp.OLEXTLegendObject = OLEXTLegendObject;\n    // this.addLegend(OLEXTLegendObject);\n    // console.log(OLEXTLegendObject);\n    // console.log(\"OLEXTLegendObject--------------\");\n    // this.selectInteraction.on('select', () => {\n    //   this.featureSelectorDeleteUpdate();\n    // });\n\n    setTimeout(() => {\n      this.computeData();\n      this.InitilizeStationDataOnLoad();\n    }, 2500);\n\n  },\n  async created() {\n    let sdt = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n    let edt = this.AirPollutionWatchApp.formatDateWithHHMM(this.AirPollutionWatchApp.endDate);\n\n    let defalultSt = await this.getDefaultGroundObservation({\n      typeName: 'pm',\n      startDate: sdt,\n      endDate: edt,\n    });\n\n    this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n      obj1.children.forEach((obj2) => {\n        if (obj2.ModelClass == 'UsEmbassyPm') {\n          obj2.defaultStation = defalultSt.defaultStation\n        }\n      })\n    });\n\n    let defaultLocation = await this.getCityData();\n    this.options.default_location = defaultLocation.data;\n\n  },\n  async beforeCreate() {\n\n  }\n}\n</script>\n\n<style scoped>\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.pollutant-cascader:not(:last-child) {\n  padding-bottom: 10px;\n}\n\n.body-container {\n  height: calc(100% - 50px);\n}\n\nbutton.el-button.el-button--primary.el-button--mini.compute-now, button.el-button.el-button--primary.el-button--mini.compute-now:focus, button.el-button.el-button--primary.el-button--mini.compute-now:hover {\n  background-color: #66b1ff;\n  border-color: #66b1ff;\n}\n\n</style>","<template>\n  <el-row style=\"width: 100%\">\n    <el-col :span=\"11\" style=\"width: 100%\">\n      <el-select :disabled=\"isDisable\" v-model=\"parameter_by_location.location_by\" placeholder=\"Select Location\"\n                 style=\"width: 100%\">\n        <el-option\n            v-for=\"item in options.location_by\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n            :disabled=\"item.disabled\"\n        >\n        </el-option>\n\n      </el-select>\n    </el-col>\n    <el-col :span=\"2\" style=\"width: 100%\">\n      <div class=\"\" style=\"width: 100%;text-align: center;\">\n        -\n      </div>\n    </el-col>\n    <el-col :span=\"11\" style=\"width: 100%\">\n      <el-select :disabled=\"isDisable\" v-show=\"parameter_by_location.location_by ==='default_locations'\"\n                 v-model=\"parameter_by_location.default_location\"\n                 placeholder=\"Select Location\" style=\"width: 100%\" ref=\"defaultLocation\">\n        <el-option\n            v-for=\"item in Select_Option_Default_Location\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n        >\n        </el-option>\n      </el-select>\n\n      <div class=\"\" v-show=\"parameter_by_location.location_by ==='AOI'\">\n        <div class=\"feature-selected\" v-show=\"parameter_by_location.is_AOI_Feature_selected ===true\">Feature selected\n        </div>\n        <div class=\"no-feature-selected\" v-show=\"parameter_by_location.is_AOI_Feature_selected ===false\">No Feature\n          selected\n        </div>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n\nimport {mapActions, mapState} from \"vuex\";\nimport OLWKT from \"ol/format/WKT\";\nimport OlGeoJSON from \"ol/format/GeoJSON\";\nimport eventHub from \"../../utils/utils\";\n\nexport default {\n  name: 'selectLocation',\n  props: {\n    isDisable: {\n      type: Boolean,\n      required: true\n    }, IndexValue: {\n      type: Number,\n      required: true\n    }, Select_Option_Default_Location: {\n      type: Array,\n      required: true\n    },\n  },\n  data() {\n    return {\n      options: {\n        location_by: [\n          {\n            value: 'default_locations',\n            label: 'Major Cities',\n          },\n          {\n            value: 'AOI',\n            label: 'Select on map',\n          }\n        ],\n      }\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    ...mapActions([\"getCityData\"]),\n    featureSelectorDeleteUpdate() {\n\n      var wktfeaturegeom, geometryType, featureExtent;\n\n\n      if (this.selectInteraction) {\n        if (this.SelectByOption == 'Parameter') {\n          if (this.parameter_by_location.location_by == \"AOI\") {\n            if (this.selectInteraction.getFeatures().getLength()) {\n              var features = this.selectInteraction.getFeatures();\n              features.forEach((f) => {\n                var format = new OLWKT();\n                wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n                  dataProjection: 'EPSG:4326',\n                  featureProjection: 'EPSG:3857'\n                });\n                geometryType = f.getGeometry().getType();\n\n                featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n                featureExtent = featureExtent.getGeometry().getExtent();\n                f.set(\"SelectBy\", \"Parameter\");\n                f.set(\"LocationBy\", \"AOI\");\n                f.set(\"IndexValue\", this.radioValue);\n              });\n            }\n\n            let countSelectedFeature = 0;\n            this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n              if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"AOI\" && f.get(\"IndexValue\") == this.IndexValue) {\n                countSelectedFeature += 1;\n              }\n            });\n            console.log(countSelectedFeature + \" | \" + this.radioValue + \" | \" + this.IndexValue);\n            if (this.IndexValue == this.radioValue) {\n              if (countSelectedFeature) {\n                this.parameter_by_location.is_AOI_Feature_selected = true;\n                this.parameter_by_location.wktValue = wktfeaturegeom;\n                this.parameter_by_location.geometryType = geometryType;\n                this.parameter_by_location.featureExtent = featureExtent;\n              } else {\n                this.parameter_by_location.is_AOI_Feature_selected = false;\n                this.parameter_by_location.wktValue = '';\n                this.parameter_by_location.geometryType = '';\n                this.parameter_by_location.featureExtent = '';\n              }\n            }\n          } else {\n            if (this.radioValue == this.IndexValue) {\n              this.selectInteraction.getFeatures().clear();\n              this.$notify({\n                title: 'Warning',\n                message: \"To select this feature you need to select 'Select on map' from drop down menu\",\n                type: 'warning'\n              });\n            }\n          }\n        }\n      }\n    }\n  },\n  watch: {\n    SelectDefaultLocation(newVal, oldVal) {\n\n      if (newVal) {\n        // add it to vectorLayer\n        let selNewValObj = this.Select_Option_Default_Location.filter(function (x) {\n          return newVal == x.value\n        })[0];\n\n        let Feature = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        Feature.set(\"SelectBy\", \"Parameter\");\n        Feature.set(\"LocationBy\", \"default_location\");\n        Feature.set(\"IndexValue\", this.IndexValue);\n        this.WorkingVectorLayer.getSource().addFeature(Feature);\n\n        var format = new OLWKT();\n        var wktfeaturegeom = format.writeGeometry(Feature.getGeometry(), {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        var geometryType = Feature.getGeometry().getType();\n\n        let featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n\n        // let featureForExtent = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        featureExtent = featureExtent.getGeometry().getExtent();\n        this.parameter_by_location.wktValue = wktfeaturegeom;\n        this.parameter_by_location.geometryType = geometryType;\n        this.parameter_by_location.featureExtent = [featureExtent[0] - 5, featureExtent[1] - 3, featureExtent[2] + 5, featureExtent[3] + 3];\n        this.parameter_by_location.default_level_value = selNewValObj.label;\n      } else {\n        this.parameter_by_location.wktValue = '';\n        this.parameter_by_location.geometryType = '';\n        this.parameter_by_location.featureExtent = '';\n        this.parameter_by_location.default_level_value = '';\n      }\n      if (oldVal) {\n        // remove it from vector layer\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"default_location\" && f.get(\"id\") == oldVal && f.get(\"IndexValue\") == this.IndexValue) {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n      }\n    },\n    SelectLocationBy() {\n      this.parameter_by_location.default_location = '';\n    }\n  },\n  computed: {\n    ...mapState([\"selectInteraction\", \"mapObject\", \"WorkingVectorLayer\", \"mapControlVariable\"]),\n    SelectDefaultLocation() {\n      return this.parameter_by_location.default_location\n    }, SelectLocationBy() {\n      return this.parameter_by_location.location_by\n    },\n    parameter_by_location() {\n      return this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue.toString()];\n    }, radioValue() {\n      return this.mapControlVariable.radioValue;\n    }, SelectByOption() {\n      return this.mapControlVariable.select_by;\n    }\n  },\n  beforeCreate() {\n    eventHub.$once(\"runFeatureInteractionCode\", () => {\n\n      this.selectInteraction.on('select', () => {\n        this.featureSelectorDeleteUpdate();\n      });\n    });\n\n    eventHub.$on(\"SelectByParameterDefaultLocation\", () => {\n      console.log(\"okok\")\n      var elem = this.$refs.defaultLocation.$el // Element to fire on\n      // debugger;\n      elem.dispatchEvent(new Event(\"change\")); // Fire event\n    });\n\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n</style>","import { render } from \"./selectLocation.vue?vue&type=template&id=e359f4b6\"\nimport script from \"./selectLocation.vue?vue&type=script&lang=js\"\nexport * from \"./selectLocation.vue?vue&type=script&lang=js\"\n\nimport \"./selectLocation.vue?vue&type=style&index=0&id=e359f4b6&lang=scss\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./mapControlsRecent.vue?vue&type=template&id=f8ff0a68&scoped=true\"\nimport script from \"./mapControlsRecent.vue?vue&type=script&lang=js\"\nexport * from \"./mapControlsRecent.vue?vue&type=script&lang=js\"\n\nimport \"./mapControlsRecent.vue?vue&type=style&index=0&id=f8ff0a68&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f8ff0a68\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div id=\"map-container2\" ref=\"LayerSelectorDropdown\">\n    </div>\n    <!--    <div id=\"layerSwitcherDiv\" class=\"ol-unselectable ol-control\" @click=\"LayerSwitcherClick()\">-->\n    <!--      <button>-->\n    <!--        <img src=\"@/assets/layers.svg\" style=\"height: 20px;width: 20px;\">-->\n    <!--      </button>-->\n    <!--    </div>-->\n\n    <!--    <el-drawer-->\n    <!--        title=\"Layers\"-->\n    <!--        v-model=\"drawer\"-->\n    <!--        custom-class=\"drawerCustomCSS\"-->\n    <!--        :append-to-body=\"drawerAppendToBody\"-->\n    <!--        :modal=\"false\"-->\n    <!--        :modal-class=\"'drawerForLayersList'\"-->\n    <!--    >-->\n    <!--      <span>-->\n    <!--        <div class=\"layerCollection\"></div>-->\n    <!--          </span>-->\n    <!--    </el-drawer>-->\n    <PrintMap></PrintMap>\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\n// import Control from \"ol/control/Control\"\n// import OSM from \"ol/source/OSM\";\nimport XYZ from 'ol/source/XYZ';\n// import {Image as ImageLayer, Tile as TileLayer} from 'ol/layer';\nimport { Tile as TileLayer} from 'ol/layer';\n// import TileWMS from \"ol/source/TileWMS\";\n// import ImageWMS from 'ol/source/ImageWMS';\nimport View from \"ol/View\";\n// import {dataSelect} from \"../utils/data\";\n// import eventHub from \"../utils/utils\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import EDALSLD from 'ol-plus/sld/EDALSLD';\n// import {ThreddsServer} from '../config';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n// import {lineString, lineDistance, area as turfArea,polygon as turfPolygon, length as turfLength} from '@turf/turf';\n// import {getArea, getLength,} from 'ol/sphere';\n// import LineString from 'ol/geom/LineString';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n\n// import {MajorBasinExtent, BasinExtent, mbasin, dataSelect, WMSSLD, legendImage} from \"../utils/data\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import {ThreddsServer} from \"../utils/config\";\n\n\n// import 'ol-ext/control/Search.css';\nimport SearchNominatim from 'ol-ext/control/SearchNominatim';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nimport Text from \"ol/style/Text\";\nimport {Icon} from 'ol/style';\nimport {toSize} from 'ol/size';\nimport ImageIcon from '../../assets/markers_default.png';\nimport {getCenter as ol_extent_getCenter} from 'ol/extent';\nimport GeoJSON from \"ol/format/GeoJSON\";\n// import Legend from \"ol-ext/legend/Legend\";\nimport Legend from \"../../utils/customLegend\"\nimport LegendControl from \"ol-ext/control/Legend\";\nimport CanvasScaleLine from \"ol-ext/control/CanvasScaleLine\";\nimport PrintDialog from \"ol-ext/control/PrintDialog\";\n\n// import OLPolygon from 'ol/geom/Polygon';\n// import OlSelect from 'ol/interaction/Select';\n// import OlDraw from 'ol/interaction/Draw';\n// import OlExtTextButton from 'ol-ext/control/TextButton';\n// import Bar from 'ol-ext/control/Bar';\nimport OlExtButton from 'ol-ext/control/Button';\n// import OlExtToggle from 'ol-ext/control/Toggle';\n// import 'ol-ext/control/Bar.css'\nimport CircleStyle from \"ol/style/Circle\";\n// import ScaleLine from \"ol/control/ScaleLine\";\nimport CanvasTitle from \"ol-ext/control/CanvasTitle\";\nimport {defaults} from \"ol/control\";\n\nimport {saveAs} from 'file-saver';\nimport {jsPDF} from \"jspdf\";\n\nimport {mapMutations, mapState} from 'vuex';\n\nimport PrintMap from \"../common/PrintMap\";\n\n// import {GeoServerHost} from \"../config\";\n// import ol_legend_Item from 'ol-ext/legend/Item';\n// import ol_legend_Legend from \"ol-ext/legend/Legend\";\n\n// ol_legend_Legend.prototype.removeItem = function (item) {\n//   let index = false;\n//   this._items.array_.forEach(function (it, idx) {\n//     if (it.getProperties().id == item.id) {\n//       index = idx;\n//     }\n//   });\n//   console.log(\"index\");\n//   console.log(index);\n//   if (index !== false) {\n//     this._items.array_.splice(index, 1);\n//   }\n// };\nexport default {\n  name: \"mapComponentRecent\",\n  components: {PrintMap},\n  data() {\n    return {\n      // drawerAppendToBody: true,\n      mapObj: '',\n      HighLightedLayer: '',\n      view: '',\n      mapObject: '',\n      MajorBasin: '',\n      AllLayers: '',\n      selectedFilesOnAYear: [],\n      // drawer: true,\n    }\n  },\n  created() {\n    this.mapControlVariable.LegendObject = new Legend({\n      title: 'Legend',\n      margin: 3,\n      // items: legendItems,\n      // size:[40, 25]\n      size:[60,30]\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSelectedLayerObj\", \"appendTimeSeriesLayerCollection\", \"setSelectInteraction\", \"setMapObject\", \"setWorkingVectorLayer\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\", \"addLegend\", \"removeLegend\"]),\n    mapInitilization() {\n\n      // let osm = new TileLayer({\n      //   source: new OSM({attributions: [],}),\n      //   // visible:false\n      // });\n\n      let esri_world_topomap = new TileLayer({\n        visible: true,\n        zIndex: 1,\n        source: new XYZ({\n          attributions: [],\n          url:\n              'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n              'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n          crossOrigin: \"Anonymous\"\n        }),\n      });\n\n      let view = new View({\n        center: [9388155.512006583, 3291367.8109067543],\n        zoom: 4,\n        extent: [6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793]\n\n      });\n      // let ScaleControl = new ScaleLine({\n      //   units: 'metric'\n      // });\n      //\n      var map = new Map({\n        layers: [],\n        // target: this.$refs['map-root'],\n        renderer: 'canvas',\n        target: 'map-container2',\n        controls: defaults({\n          attribution: false\n        }).extend([]),\n        view: view,\n      });\n      // map.addLayer(osm);\n      map.addLayer(esri_world_topomap);\n      this.mapObject = map;\n      window.mapObject = map;\n      this.view = view;\n\n      // this.mapObject.addControl(\n      //     new Control({\n      //       element: document.getElementById('layerSwitcherDiv')\n      //     })\n      // );\n      map.getView().fit([6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793], map.getView());\n      this.setMapObject(this.mapObject);\n    },\n    legendObjectCollection() {\n      let legendObjectEnabled = [];\n      this.TimeSeriesLayerCollection.forEach(function (layerObj) {\n        let Properties = layerObj.getProperties();\n        console.log(Properties.legendPath);\n        let lObj = {\n          title: Properties.title,\n          // typeGeom: 'Point',\n          style: new Style({\n            image: new Icon({\n              src: Properties.legendPath,\n              crossOrigin: 'anonymous' // Enable print\n            })\n          })\n        };\n        legendObjectEnabled.push(lObj)\n      });\n      return legendObjectEnabled;\n    },\n    addGeoCodingAndInteractionBar() {\n      var map = this.mapObject;\n\n// Set the control grid reference\n      var search = new SearchNominatim({\n        polygon: true,\n        reverse: false,\n        position: true,\t// Search, with priority to geo position,\n        // maxHistory: -1,\n        className: 'OSMBasedGeocodingEmissionPage',\n      });\n\n// search.set('copy', false)\n\n      var GeoCodingAndDrawLayer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 999\n      });\n\n      this.setWorkingVectorLayer(GeoCodingAndDrawLayer);\n\n      map.addLayer(GeoCodingAndDrawLayer);\n\n      map.addControl(search);\n\n\n      function removePreviousSearchFeature() {\n        var features = GeoCodingAndDrawLayer.getSource().getFeatures();\n        features.forEach(function (f) {\n          if (f.getProperties().osm_id) {\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          }\n        });\n        // console.log(features);\n      }\n\n      function UpDateVectorLayerStyle() {\n        GeoCodingAndDrawLayer.getSource().forEachFeature(function (feature) {\n          let StyleObj = null;\n          if (feature.getProperties().osm_id) {\n            StyleObj = [\n              new Style({\n                stroke: new Stroke({\n                  color: [0, 0, 0, 0],\n                  opacity: 1,\n                  width: 3\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff00'\n                })\n                // Commented to only see the lines\n                //,fill: new ol.style.Stroke ({\n                //  color: [155, 155, 155, 0.4]\n                //})\n              }),\n              // Dash white lines (second style, on the top)\n              new Style({\n                image: new Icon({\n                  anchor: [0.5, 46],\n                  anchorXUnits: 'fraction',\n                  anchorYUnits: 'pixels',\n                  src: ImageIcon,\n                  size: toSize([40, 45]),\n                  // offset:[20,20]\n                }),\n                stroke: new Stroke({\n                  color: [0, 0, 255, 1.0],\n                  opacity: 1,\n                  width: 3,\n                  lineDash: [4, 8, 4, 8]\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff40'\n                })\n              })\n            ];\n\n          } else {\n            StyleObj = new Style({\n              image: new CircleStyle({\n                radius: 5,\n                stroke: new Stroke({\n                  color: [255, 0, 0, 1],\n                  opacity: 1,\n                  width: 2\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff50'\n                }),\n              }),\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              })\n              // Commented to only see the lines\n              //,fill: new ol.style.Stroke ({\n              //  color: [155, 155, 155, 0.4]\n              //})\n            });\n\n          }\n          feature.setStyle(StyleObj);\n\n        });\n      }\n\n\n// Select feature when click on the reference index\n      search.on('select', function (e) {\n        // console.log(e);\n        // GeoCodingAndDrawLayer.getSource().clear();\n        removePreviousSearchFeature();\n        // Check if we get a geojson to describe the search\n        if (e.search.geojson) {\n          var format = new GeoJSON();\n          var f = format.readFeature(e.search.geojson, {\n            dataProjection: \"EPSG:4326\",\n            featureProjection: map.getView().getProjection()\n          });\n          delete e.search.geojson;\n          f.setProperties(e.search);\n          GeoCodingAndDrawLayer.getSource().addFeature(f);\n          var view = map.getView();\n          var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n          var zoom = view.getZoomForResolution(resolution);\n          var center = ol_extent_getCenter(f.getGeometry().getExtent());\n          // redraw before zoom\n          setTimeout(function () {\n            view.animate({\n              center: center,\n              zoom: Math.min(zoom, 16)\n            });\n          }, 100);\n        } else {\n          map.getView().animate({\n            center: e.coordinate,\n            zoom: Math.max(map.getView().getZoom(), 16)\n          });\n        }\n        UpDateVectorLayerStyle();\n      });\n\n\n//\n//       // this is for selection and create new feature\n//       // Main control bar\n//       var mainbar = new Bar();\n//       mainbar.setPosition('top-left');\n//\n//       map.addControl(mainbar);\n//\n// // Edit control bar\n//       var editbar = new Bar({\n//         toggleOne: true,\t// one control active at the same time\n//         group: false\t\t\t// group controls together\n//       });\n//       mainbar.addControl(editbar);\n//\n// // Add selection tool:\n// //  1- a toggle control with a select interaction\n// //  2- an option bar to delete / get information on the selected feature\n//       var sbar = new Bar();\n//       sbar.addControl(new OlExtButton({\n//         html: '<i class=\"fa fa-times\"></i>',\n//         title: \"Delete\",\n//         handleClick: function () {\n//           var features = selectCtrl.getInteraction().getFeatures();\n//           if (!features.getLength()) info(\"Select an object first...\");\n//           else info(features.getLength() + \" object(s) deleted.\");\n//\n//           features.forEach(function (f) {\n//             console.log(f);\n//             GeoCodingAndDrawLayer.getSource().removeFeature(f);\n//           });\n//           selectCtrl.getInteraction().getFeatures().clear();\n//           selectCtrl.getInteraction().dispatchEvent({type: 'select'});\n//         }\n//       }));\n//\n//\n//       var selectCtrl = new OlExtToggle({\n//         html: '<i class=\"fa fa-hand-pointer\"></i>',\n//         title: \"Select\",\n//         interaction: new OlSelect({\n//           hitTolerance: 2,\n//           style: new Style({\n//             image: new CircleStyle({\n//               radius: 5,\n//               stroke: new Stroke({\n//                 color: [255, 0, 0, 1],\n//                 opacity: 1,\n//                 width: 2\n//               }),\n//               fill: new Fill({\n//                 color: '#e5e5ff50'\n//               }),\n//             }),\n//             stroke: new Stroke({\n//               color: [255, 0, 0, 1],\n//               opacity: 1,\n//               width: 2\n//             }),\n//             fill: new Fill({\n//               color: '#e5e5ff50'\n//             })\n//             // Commented to only see the lines\n//             //,fill: new ol.style.Stroke ({\n//             //  color: [155, 155, 155, 0.4]\n//             //})\n//           }),\n//           layers: [GeoCodingAndDrawLayer]\n//         }),\n//         bar: sbar,\n//         autoActivate: true,\n//         active: true\n//       });\n//       this.setSelectInteraction(selectCtrl.getInteraction());\n//\n//       editbar.addControl(selectCtrl);\n//       this.setSelectedLayerObj(selectCtrl.getInteraction());\n// // Add editing tools\n//       var pedit = new OlExtToggle({\n//         html: '<i class=\"fa fa-map-marker-alt\" ></i>',\n//         title: 'Point',\n//         interaction: new OlDraw({\n//           type: 'Point',\n//           source: GeoCodingAndDrawLayer.getSource()\n//         })\n//       });\n//       editbar.addControl(pedit);\n//       var fedit = new OlExtToggle({\n//         html: '<i class=\"fa fa-draw-polygon\" ></i>',\n//         title: 'Polygon',\n//         interaction: new OlDraw({\n//           type: 'Polygon',\n//           source: GeoCodingAndDrawLayer.getSource(),\n//           // Count inserted points\n//           geometryFunction: function (coordinates, geometry) {\n//             this.nbpts = coordinates[0].length;\n//             if (geometry) geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n//             else geometry = new OLPolygon(coordinates);\n//             return geometry;\n//           }\n//         }),\n//         // Options bar ssociated with the control\n//         bar: new Bar({\n//           controls: [new OlExtTextButton({\n//             html: 'undo',//'<i class=\"fa fa-mail-reply\"></i>',\n//             title: \"undo last point\",\n//             handleClick: function () {\n//               if (fedit.getInteraction().nbpts > 1) fedit.getInteraction().removeLastPoint();\n//             }\n//           }),\n//             new OlExtTextButton({\n//               html: 'finish',\n//               title: \"finish\",\n//               handleClick: function () {\n//                 // Prevent null objects on finishDrawing\n//                 if (fedit.getInteraction().nbpts > 3) fedit.getInteraction().finishDrawing();\n//               }\n//             })\n//           ]\n//         })\n//       });\n//       editbar.addControl(fedit);\n//\n//\n//       // fedit.getInteraction().on('drawend', function (e) {\n//       //\n//       //   console.log(e.feature);\n//       //   console.log(e.feature);\n//       //\n//       //   // GeoCodingAndDrawLayer.getSource().removeFeature(e.feature);\n//       //\n//       //\n//       // });\n//\n//       fedit.getInteraction().on('drawstart', function () {\n//         GeoCodingAndDrawLayer.getSource().once('addfeature', handleAddFeature);\n//       });\n//\n//       function handleAddFeature(evt) {\n//         let coordi = evt.feature.getGeometry().getCoordinates();\n//\n//         const area = getArea(evt.feature.getGeometry());\n//         // Sq.Km\n//         let outputArea = Math.round((area / 1000000) * 100) / 100;\n//         console.log(outputArea);\n//\n//         let li = new LineString(coordi);\n//         const length = getLength(li);\n//         // In Km\n//         let outputLength = Math.round((length / 1000) * 100) / 100;\n//         console.log(outputLength);\n//         // GeoCodingAndDrawLayer.getSource().removeFeature(evt.feature);\n//       }\n//\n// // Show info\n//       function info(i) {\n//         console.log(i);\n//         // document.querySelector(\"#info\").innerHTML(i || \"\");\n//       }\n//\n//\n//\n//       console.log(\"second\");\n//       eventHub.$emit('runFeatureInteractionCode');\n    },\n    addPrintMapFunctionality() {\n      // Add a custom push button with onToggle function\n      // let that = this;\n      var PrintButton = new OlExtButton({\n        html: '<i class=\"fas fa-print\"></i>',\n        className: \"PrintMap\",\n        title: \"Print map\",\n        handleClick: () => {\n          // that.PrintMapComponentData.PrintMapDialogVisible = true;\n          // setTimeout(() => {\n          //   eventHub.$emit('OpenDialogOfPrintAndProxyfy');\n          // }, 500);\n        }\n      });\n\n      this.mapObject.addControl(PrintButton);\n    },\n    olExtLegentItem(title, id, legend) {\n      return {\n        id: id,\n        title: title,\n        typeGeom: 'Point',\n        style: new Style({\n          image: new Icon({\n            src: legend,\n            crossOrigin: 'anonymous' // Enable print\n          })\n        })\n      };\n    },\n    LayerSwitcherClick() {\n      this.drawer = true;\n    },\n    handleClose(done, e) {\n      console.log(e);\n\n    },\n    olextPrintFunction() {\n      // Add a title control\n      this.mapObject.addControl(new CanvasTitle({\n        title: 'my title',\n        visible: false,\n        style: new Style({text: new Text({font: '20px \"Lucida Grande\",Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif'})})\n      }));\n      // let legendItems=[];\n      // Add a legend to the print\n      var legendCtrl = new LegendControl({legend: this.mapControlVariable.LegendObject});\n      this.mapObject.addControl(legendCtrl);\n\n      // Add a ScaleLine control\n      this.mapObject.addControl(new CanvasScaleLine());\n\n      // Print control\n      var printControl = new PrintDialog({lang: 'en'});\n      printControl.setSize('A4');\n      printControl.setOrientation('landscape');\n      this.mapObject.addControl(printControl);\n\n      /* On print > save image file */\n      printControl.on(['print', 'error'], (e) => {\n        // let LegendImageArray = this.legendObjectCollection();\n        // LegendImageArray.forEach(function (ii) {\n        //   console.log(ii);\n        //   legendd.addItem(ii);\n        // });\n        // // legendItems = LegendImageArray;\n        // console.log(LegendImageArray);\n\n        // Print success\n        if (e.image) {\n          if (e.pdf) {\n            // Export pdf using the print info\n            var pdf = new jsPDF({\n              orientation: e.print.orientation,\n              unit: e.print.unit,\n              format: e.print.size\n            });\n            pdf.addImage(e.image, 'JPEG', e.print.position[0], e.print.position[0], e.print.imageWidth, e.print.imageHeight);\n            pdf.save(e.print.legend ? 'legend.pdf' : 'map.pdf');\n          } else {\n            // Save image as file\n            e.canvas.toBlob(function (blob) {\n              var name = (e.print.legend ? 'legend.' : 'map.') + e.imageType.replace('image/', '');\n              saveAs(blob, name);\n            }, e.imageType, e.quality);\n          }\n        } else {\n          console.warn('No canvas to export');\n        }\n      });\n    },\n  },\n  computed: {\n    ...mapState([\"TimeSeriesLayerCollection\", \"PrintMapComponentData\", \"mapControlVariable\"]),\n    // getInventory() {\n    //   return dataSelect.Inventory;\n    // },\n  },\n\n  beforeMount() {\n  },\n  mounted() {\n    console.log(this.mapControlVariable);\n    this.mapInitilization();\n    // this.addGeoCoding();\n    this.addGeoCodingAndInteractionBar();\n    // this.addPrintMapFunctionality();\n\n    this.olextPrintFunction();\n    //\n    // let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n    // let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n    //\n    //\n    // let AddRemoveLegendFunction = function () {\n    //\n    //   if (this.getProperties().visible) {\n    //     that.addLegend(this.getProperties().OLEXTLegendObject);\n    //   } else {\n    //     that.removeLegend(this.getProperties().OLEXTLegendObject);\n    //   }\n    // };\n    //\n    // let le1 = this.olExtLegentItem('Country Outline', 'Country_Outline', WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry')\n    //\n    // // this.drawer = false;\n    // let countryBoundary = new ImageLayer({\n    //   id: 'Country_Outline',\n    //   title: 'Country Outline',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry',\n    //   zIndex: 6,\n    //   OLEXTLegendObject: le1,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_country_boundry'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le2 = this.olExtLegentItem('Province', 'Province', WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary')\n    //\n    // let provinceBoundary = new ImageLayer({\n    //   id: 'Province',\n    //   title: 'Province',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary',\n    //   zIndex: 5,\n    //   OLEXTLegendObject: le2,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_provincial_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le3 = this.olExtLegentItem('District', 'District', WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary')\n    //\n    // let DistrictBoundary = new ImageLayer({\n    //   id: 'District',\n    //   title: 'District',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary',\n    //   zIndex: 4,\n    //   OLEXTLegendObject: le3,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_district_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le4 = this.olExtLegentItem('Palika', 'Palika', WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary')\n    //\n    // let PalikaBoundary = new ImageLayer({\n    //   id: 'Palika',\n    //   title: 'Palika',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary',\n    //   zIndex: 3,\n    //   OLEXTLegendObject: le4,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_palika_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    //\n    // let that = this;\n    // countryBoundary.on('change:visible', AddRemoveLegendFunction);\n    // provinceBoundary.on('change:visible', AddRemoveLegendFunction);\n    // DistrictBoundary.on('change:visible', AddRemoveLegendFunction);\n    // PalikaBoundary.on('change:visible', AddRemoveLegendFunction);\n    // this.mapObject.addLayer(countryBoundary);\n    // this.mapObject.addLayer(provinceBoundary);\n    // this.mapObject.addLayer(DistrictBoundary);\n    // this.mapObject.addLayer(PalikaBoundary);\n    //\n    // let l1 = new LayerSwitcher(\".layerCollection\", countryBoundary, false, false);\n    // let l2 = new LayerSwitcher(\".layerCollection\", provinceBoundary, false, false);\n    // let l3 = new LayerSwitcher(\".layerCollection\", DistrictBoundary, false, false);\n    // let l4 = new LayerSwitcher(\".layerCollection\", PalikaBoundary, false, false);\n    //\n    // l1.setVisible(true);\n    // l2.setVisible(true);\n    // l3.setVisible(true);\n    // l4.setVisible(true);\n    //\n    // this.appendTimeSeriesLayerCollection(l1);\n    // this.appendTimeSeriesLayerCollection(l2);\n    // this.appendTimeSeriesLayerCollection(l3);\n    // this.appendTimeSeriesLayerCollection(l4);\n    //\n    //\n  },\n}\n</script>\n\n<style>\n#map-container2 {\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n}\n\n#map-container2 .ol-viewport {\n  border-radius: 5px;\n}\n\n#layerSwitcherDiv {\n  right: 0.5em;\n  top: 0.5em;\n  position: absolute;\n}\n\n#layerSwitcherDiv button {\n  line-height: unset;\n  border-radius: 1px;\n}\n\n\n.drawerForLayersList {\n  position: initial !important;\n}\n\n/* OSM Based Geocoding*/\n.ol-search ul li {\n  border-bottom: 1px solid lightgray;\n\n  padding: 10px 5px 10px 5px !important;\n  flex: 1;\n  max-width: 608px;\n  white-space: normal !important;\n  overflow: unset;\n  flex-grow: 1;\n  text-overflow: ellipsis;\n}\n\n.ol-search ul li:last-child {\n  border-bottom: none;\n  border-radius: 0px;\n}\n\n.ol-search ul {\n  list-style: none;\n  cursor: pointer;\n  padding: 0px 5px 0px 5px !important;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  clear: both;\n  cursor: pointer;\n  max-width: 618px;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #fff;\n  font-size: 13px;\n}\n\n.ol-search {\n  z-index: 999;\n}\n\n.ol-search {\n  top: 4.1em;\n  left: 0.5em;\n  /*width: 500px;*/\n}\n\n.ol-search input {\n  width: 600px;\n}\n\n\n.ol-control.ol-bar {\n  left: 3.2em;\n  top: 6em;\n}\n\n.ol-control.ol-bar.ol-top.ol-left, .ol-control.ol-bar.ol-top.ol-right {\n  top: 6.5em;\n  transform: none;\n}\n\n.PrintMap.ol-button.ol-unselectable.ol-control {\n  top: 12em;\n  left: 0.5em;\n}\n\n.LayerDiv {\n  margin-top: 10px;\n}\n\n.withOpacityChange {\n  margin-bottom: 18px;\n}\n\n.ol-scale-line {\n  right: 0;\n  left: auto;\n  bottom: 2em;\n}\n</style>","import {DEVICE_PIXEL_RATIO as ol_has_DEVICE_PIXEL_RATIO} from \"ol/has\";\nimport {asString as ol_color_asString} from \"ol/color\";\nimport {toContext as ol_render_toContext} from \"ol/render\";\nimport ol_Feature from \"ol/Feature\";\nimport ol_geom_Point from \"ol/geom/Point\";\nimport ol_geom_LineString from \"ol/geom/LineString\";\nimport ol_geom_Polygon from \"ol/geom/Polygon\";\nimport {extend as ol_extent_extend} from \"ol/extent\";\nimport ol_legend_Legend from \"ol-ext/legend/Legend\";\n\n/** Refresh the legend\n */\nol_legend_Legend.prototype.refresh = function () {\n    var table = this._listElement;\n    table.innerHTML = '';\n    var margin = this.get('margin');\n    var width = this.get('size')[0] + 2 * margin;\n    var height = this.get('lineHeight') || this.get('size')[1] + 2 * margin;\n\n    var canvas = this.getCanvas();\n    var ctx = canvas.getContext('2d');\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    var ratio = ol_has_DEVICE_PIXEL_RATIO;\n\n    // Calculate width\n    ctx.font = this._titleStyle.getFont();\n    var textWidth = this._measureText(ctx, this.getTitle('title')).width;\n    // get longest width from this loop\n    this._items.forEach(function (r) {\n        if (r.get('feature') || r.get('typeGeom')) {\n            ctx.font = r.get('textStyle') ? r.get('textStyle').getFont() : this._textStyle.getFont();\n            textWidth = Math.max(textWidth, this._measureText(ctx, r.get('title')).width + width);\n        } else {\n            ctx.font = r.get('textStyle') ? r.get('textStyle').getFont() : this._titleStyle.getFont();\n            textWidth = Math.max(textWidth, this._measureText(ctx, r.get('title')).width);\n        }\n    }.bind(this));\n\n    let heightAccumulator = height;\n    //custom calculation of height\n    this._items.forEach(function (r) {\n        heightAccumulator = heightAccumulator + 6 + r.getProperties().size[1];\n    });\n\n    canvas.width = (textWidth + 2 * margin) * ratio;\n    canvas.height = heightAccumulator;\n    canvas.style.height = heightAccumulator;\n\n    //getLength gives the number of array on _items\n    // canvas.height = (this._items.getLength() + 1) * height * ratio;\n    // canvas.style.height = ((this._items.getLength() + 1) * height) + 'px';\n\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = ol_color_asString(this._textStyle.getFill().getColor());\n\n    // Add Title\n    if (this.getTitle()) {\n        table.appendChild(this._title.getElement([width, height], function (b) {\n            this.dispatchEvent({\n                type: 'select',\n                index: -1,\n                symbol: b,\n                item: this._title\n            });\n        }.bind(this)));\n        ctx.font = this._titleStyle.getFont();\n        ctx.textAlign = 'center';\n        this._drawText(ctx, this.getTitle(), canvas.width / ratio / 2, height / 2);\n    }\n    let HTextAndImage = height + height * 0.5;\n    // Add items\n    this._items.forEach(function (r, i) {\n        var index = i + (this.getTitle() ? 1 : 0);\n        table.appendChild(r.getElement([width, height], function (b) {\n            this.dispatchEvent({\n                type: 'select',\n                index: i,\n                symbol: b,\n                item: r\n            });\n        }.bind(this)));\n        var item = r.getProperties();\n        ctx.textAlign = 'left';\n        if (item.feature || item.typeGeom) {\n            canvas = this.getLegendImage(item, canvas, index, HTextAndImage);\n            ctx.font = r.get('textStyle') ? r.get('textStyle').getFont() : this._textStyle.getFont();\n            this._drawText(ctx, r.get('title'), width + margin, HTextAndImage);\n\n            // this._drawText(ctx, r.get('title'), width + margin, (i + 1.5) * height);\n            HTextAndImage = HTextAndImage + 6 + r.getProperties().size[1];\n        } else {\n            ctx.font = r.get('textStyle') ? r.get('textStyle').getFont() : this._titleStyle.getFont();\n            if (/\\bcenter\\b/.test(item.className)) {\n                ctx.textAlign = 'center';\n                this._drawText(ctx, r.get('title'), canvas.width / ratio / 2, (i + 1.5) * height);\n            } else {\n                this._drawText(ctx, r.get('title'), margin, (i + 1.5) * height);\n            }\n        }\n    }.bind(this));\n\n    console.log(\"loop complete\")\n\n    // Done\n    this.dispatchEvent({\n        type: 'refresh',\n        width: width,\n        height: (this._items.length + 1) * height\n    });\n};\n\n/** Get the image for a style\n * @param {olLegendItemOptions} item\n * @param {Canvas|undefined} canvas a canvas to draw in, if none creat one\n * @param {int|undefined} row row number to draw in canvas, default 0\n * @return {CanvasElement}\n */\nol_legend_Legend.prototype.getLegendImage = function (options, canvas, row, accumulatedHeight) {\n    options = options || {};\n    return ol_legend_Legend.getLegendImage({\n        className: options.className,\n        feature: options.feature,\n        typeGeom: options.typeGeom,\n        style: options.style || this._style,\n        properties: options.properties,\n        margin: options.margin || this.get('margin'),\n        size: options.size || this.get('size'),\n        accumulatedHeight: accumulatedHeight,\n        lineHeight: options.lineHeight || this.get('lineHeight'),\n        onload: function () {\n            // Force refresh\n            this.refresh();\n        }.bind(this)\n    }, canvas, row);\n};\n\n/** Get a symbol image for a given legend item\n * @param {olLegendItemOptions} item\n * @param {Canvas|undefined} canvas a canvas to draw in, if none creat one\n * @param {int|undefined} row row number to draw in canvas, default 0\n */\nol_legend_Legend.getLegendImage = function (item, canvas, row) {\n    item = item || {};\n    if (typeof (item.margin) === 'undefined') item.margin = 10;\n    var size = item.size || [40, 25];\n    item.onload = item.onload || function () {\n        setTimeout(function () {\n            ol_legend_Legend.getLegendImage(item, canvas, row);\n        }, 100);\n    };\n    var width = size[0] + 2 * item.margin;\n    var height = item.lineHeight || (size[1] + 2 * item.margin);\n    var ratio = item.pixelratio || ol_has_DEVICE_PIXEL_RATIO;\n    if (!canvas) {\n        row = 0;\n        canvas = document.createElement('canvas');\n        canvas.width = width * ratio;\n        canvas.height = height * ratio;\n    }\n\n    var ctx = canvas.getContext('2d');\n    ctx.save();\n    var vectorContext = ol_render_toContext(ctx, {pixelRatio: ratio});\n\n    var typeGeom = item.typeGeom;\n    var style;\n    var feature = item.feature;\n    if (!feature && typeGeom) {\n        if (/Point/.test(typeGeom)) feature = new ol_Feature(new ol_geom_Point([0, 0]));\n        else if (/LineString/.test(typeGeom)) feature = new ol_Feature(new ol_geom_LineString([0, 0]));\n        else feature = new ol_Feature(new ol_geom_Polygon([[0, 0]]));\n        if (item.properties) feature.setProperties(item.properties);\n    }\n    if (feature) {\n        style = feature.getStyle();\n        if (typeof (style) === 'function') style = style(feature);\n        if (!style) {\n            style = typeof (item.style) === 'function' ? item.style(feature) : item.style || [];\n        }\n        typeGeom = feature.getGeometry().getType();\n    } else {\n        style = [];\n    }\n    if (!(style instanceof Array)) style = [style];\n\n    var cx = width / 2;\n    var cy = height / 2;\n    var sx = size[0] / 2;\n    var sy = size[1] / 2;\n    var dySave = 10;\n\n    var i, s;\n    // Get point offset\n    if (typeGeom === 'Point') {\n        var extent = null;\n        for (i = 0; style[i]; i++) {\n            s = style[i]\n            var img = s.getImage();\n            // Refresh legend on image load\n            if (img) {\n                var imgElt = img.getPhoto ? img.getPhoto() : img.getImage();\n                // Check image is loaded\n                if (imgElt && imgElt instanceof HTMLImageElement && !imgElt.naturalWidth) {\n                    if (typeof (item.onload) === 'function') {\n                        imgElt.addEventListener('load', function () {\n                            setTimeout(function () {\n                                item.onload()\n                            }, 100);\n                        });\n                    }\n                    img.load();\n                }\n                // Check anchor to center the image\n                if (img.getAnchor) {\n                    var anchor = img.getAnchor();\n                    if (anchor) {\n                        var si = img.getSize();\n                        var dx = anchor[0] - si[0];\n                        var dy = anchor[1] - si[1];\n                        dySave = anchor[1];\n                        if (!extent) {\n                            extent = [dx, dy, dx + si[0], dy + si[1]];\n                        } else {\n                            ol_extent_extend(extent, [dx, dy, dx + si[0], dy + si[1]]);\n                        }\n                    }\n                }\n            }\n        }\n        if (extent) {\n            cx = cx + (extent[2] + extent[0]) / 2;\n            cy = cy + (extent[3] + extent[1]) / 2;\n        }\n    }\n\n    // Draw image\n    cy += (row * height) || 0;\n    cy = item.accumulatedHeight + dySave - 10;\n    for (i = 0; style[i]; i++) {\n        s = style[i]\n        vectorContext.setStyle(s);\n        ctx.save();\n        var geom;\n        switch (typeGeom) {\n            case ol_geom_Point:\n            case 'Point':\n            case 'MultiPoint': {\n                geom = new ol_geom_Point([cx, cy]);\n                break;\n            }\n            case ol_geom_LineString:\n            case 'LineString':\n            case 'MultiLineString': {\n                // Clip lines\n                ctx.rect(item.margin * ratio, 0, size[0] * ratio, canvas.height);\n                ctx.clip();\n                geom = new ol_geom_LineString([[cx - sx, cy], [cx + sx, cy]]);\n                break;\n            }\n            case ol_geom_Polygon:\n            case 'Polygon':\n            case 'MultiPolygon': {\n                geom = new ol_geom_Polygon([[[cx - sx, cy - sy], [cx + sx, cy - sy], [cx + sx, cy + sy], [cx - sx, cy + sy], [cx - sx, cy - sy]]]);\n                break;\n            }\n        }\n        // Geometry function?\n        if (s.getGeometryFunction()) {\n            geom = s.getGeometryFunction()(new ol_Feature(geom));\n            ctx.restore();\n            vectorContext.drawGeometry(geom);\n        } else {\n            vectorContext.drawGeometry(geom);\n            ctx.restore();\n        }\n    }\n\n    ctx.restore();\n\n    return canvas;\n};\n\n\nexport default ol_legend_Legend","<template>\n  <div class=\"\">\n    <el-dialog\n        v-model=\"PrintMapComponentData.PrintMapDialogVisible\"\n        title=\"Print Map\"\n        width=\"95%\"\n        :before-close=\"handleClose\"\n        :append-to-body=\"true\"\n        :top=\"'3vh'\"\n    >\n      <el-row>\n        <el-col :span=\"8\" class=\"printing-control\">\n\n          <el-form\n              ref=\"MapPrintValidateForm\"\n              :model=\"MapPrintValidateForm\"\n              label-width=\"100px\"\n              class=\"demo-ruleForm\"\n              size=\"mini\"\n              label-position=\"top\"\n          >\n\n            <el-form-item\n                label=\"Map Title\"\n                prop=\"title\"\n                :rules=\"[\n        { required: true, message: 'Map title is required' },\n        { type: 'string', message: 'Map title must be string' },\n      ]\"\n            >\n              <el-input\n                  v-model.number=\"MapPrintValidateForm.title\"\n                  type=\"age\"\n                  autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n\n            <el-form-item\n                label=\"Output File Name\"\n                prop=\"fileName\"\n                :rules=\"[\n        { required: true, message: 'Map title is required' },\n        { type: 'string', message: 'Output File Name must be string' },\n      ]\"\n            >\n              <el-input\n                  v-model.number=\"MapPrintValidateForm.fileName\"\n                  type=\"fileName\"\n                  autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n\n            <el-form-item>\n              <el-collapse v-model=\"AccordionActiveName\" accordion>\n                <el-collapse-item name=\"1\">\n\n                  <template #title>\n                    <el-checkbox v-model=\"CheckSelectAll\" label=\"Select legend all items\"\n                                 class=\"selectAllLegend\"></el-checkbox>\n                  </template>\n                  <mapLagend\n                      v-for=\"item in legendInfos\"\n                      :key=\"item.id\"\n                      :item=\"item\"\n                  />\n\n                </el-collapse-item>\n              </el-collapse>\n            </el-form-item>\n            <el-form-item>\n\n              <el-button @click=\"Cancel\">Cancel</el-button>\n\n              <el-button type=\"primary\" @click=\"submitForm('MapPrintValidateForm')\"\n              >Export map\n              </el-button\n              >\n            </el-form-item>\n\n\n          </el-form>\n\n\n        </el-col>\n        <el-col :span=\"16\">\n          <div class=\"map-print-controls\">\n            <div class=\"muted-text\">Adjust the map extent as per your requirement.</div>\n            <div class=\"grid-content bg-purple-light\" id=\"map-control-printing\">\n            </div>\n\n          </div>\n        </el-col>\n      </el-row>\n\n    </el-dialog>\n  </div>\n\n</template>\n\n<script>\nimport {mapState} from \"vuex\";\nimport jsPDF from \"jspdf/dist/jspdf.min\";\n\nimport eventHub from \"../../utils/utils\";\nimport mapLagend from \"./mapLagend\";\nimport {Action} from \"../../store/actionType\";\n\nexport default {\n  name: \"PrintMap\",\n  data() {\n    return {\n      MapPrintValidateForm: {\n        title: '',\n        fileName: ''\n      },\n      AccordionActiveName: '',\n      CheckSelectAll: false,\n      PROXY_PREFIX: Action.Base + '/apps/airquality/WMSProxy/',\n      legendInfos: [],\n      LegendUIList: []\n    };\n  },\n  components: {mapLagend},\n  watch: {\n    CheckSelectAll(newVal) {\n\n      this.legendInfos.forEach(function (obj1) {\n        obj1.visible = newVal\n      });\n\n\n    }\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n            if (valid) {\n              console.log(\"test\");\n\n              const layout = this.getMapPDFLayout();\n              const title = this.MapPrintValidateForm.title;\n              const outputfilename = this.MapPrintValidateForm.fileName;\n\n              const mapSize = this.mapObject.getSize();\n              const mapResolution = this.mapObject.getView().getResolution();\n              this.mapObject.once(\"rendercomplete\", async () => {\n                    // setting up the canvas\n                    const canvas = document.createElement(\"canvas\");\n                    canvas.width = layout.mapFrameSizePxl[0];\n                    canvas.height = layout.mapFrameSizePxl[1];\n                    const context = canvas.getContext(\"2d\");\n\n                    // sort the legend by height\n                    let legendInfos1 = this.legendInfos.filter(function (curObje) {\n                      return curObje.visible === true;\n                    }).sort((item1, item2) => item1.imgHeight - item2.imgHeight);\n\n                    this.copyOLMapTo(context);\n\n                    if (legendInfos1.length || false) {\n                      await this.addLegendsTo(context, {\n                        legendInfos: legendInfos1,\n                        pos: layout.legendBoxPxl.pos,\n                        columnWidth: layout.legendBoxPxl.columnWidth,\n                        height: layout.legendBoxPxl.height,\n                      });\n                    }\n\n                    this.drawPolygon(context, \"black\", layout.northArrowCoordsPxl)\n                    this.drawScaleBar(context, {x: canvas.width, y: canvas.height})\n                    context.strokeStyle = \"black\";\n                    context.strokeRect(0, 0, canvas.width, canvas.height) // map frame border\n\n                    this.createMapPDF(title, outputfilename, canvas, layout)\n                    // reset original map size\n                    this.mapObject.setSize(mapSize);\n                    this.mapObject.getView().setResolution(mapResolution);\n                  }\n              );\n              // set map size to print frame size\n              const frameSize = layout.mapFrameSizePxl;\n              this.mapObject.setSize(frameSize);\n              const scaling = Math.min(frameSize[0] / mapSize[0], frameSize[1] / mapSize[1]);\n              this.mapObject.getView().setResolution(mapResolution / scaling);\n\n            } else {\n              console.log('error submit!!');\n              return false\n            }\n          }\n      )\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    Cancel() {\n      this.PrintMapComponentData.PrintMapDialogVisible = false;\n      this.backToNormal();\n    },\n    handleClose(done) {\n      done();\n      this.backToNormal();\n    },\n    backToNormal() {\n      let target = document.querySelector('#map-container2');\n      this.mapObject.setTarget(target);\n      this.deproxifyWMSLayers();\n\n    },\n    getMapPDFLayout() {\n      const DPI = 120; // pdf's dpi\n      const mmToPixel = dim_mm => dim_mm * DPI / 25.4; // 1 inch = 25.4 mm\n      // all measurements are in mm if not suffixed by pxl\n      const margin = 10;\n      const topMargin = 15;\n      const pageWidth = 297;\n      const pageHeight = 210;\n      const mapWidth = pageWidth - 2 * margin; // 272\n      const mapHeight = pageHeight - topMargin - margin; // 180\n      const mapHeightPxl = mmToPixel(mapHeight);\n      // legend positions are relative to mapframe\n      let legendHeightPercent = 0.42;\n      let legendHeightPxl = mapHeightPxl * legendHeightPercent;\n      let legendPosPxl = {\n        x: mmToPixel(2),\n        y: mapHeightPxl * (1 - legendHeightPercent) - mmToPixel(2)\n      }\n      // northArrow Coords: also relative to mapFrame\n      const arrowBaseWidth = 9;\n      const arrowHeight = 12;\n      const arrowTop = 6;\n      const arrowCenterX = mapWidth - (6 + arrowBaseWidth / 2);\n      const northArrowCoords = [\n        [arrowCenterX, arrowTop], // top coordinate\n        [arrowCenterX + arrowBaseWidth / 2, arrowTop + arrowHeight], // rightCoordinate\n        [arrowCenterX, arrowTop + 2 * arrowHeight / 3], // middleCoordinate\n        [arrowCenterX - arrowBaseWidth / 2, arrowTop + arrowHeight], // leftCoordinate\n      ];\n      return {\n        format: \"a4\",\n        pageDim: [pageWidth, pageHeight],\n        margin,\n        topMargin,\n        mapFrameSize: [mapWidth, mapHeight],\n        mapFrameSizePxl: [mmToPixel(mapWidth), mapHeightPxl],\n        northArrowCoordsPxl: northArrowCoords.map(pt => pt.map(mmToPixel)),\n        legendBoxPxl: {\n          pos: legendPosPxl,\n          height: legendHeightPxl,\n          columnWidth: 260\n        },\n      };\n    },\n    copyOLMapTo(context) {\n      context.fillStyle = \"white\";\n      context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n      document.querySelectorAll(\".ol-layer canvas\").forEach(mapCanvas => {\n        if (mapCanvas.width > 0) {\n          const opacity = mapCanvas.parentNode.style.opacity;\n          console.log(\"-------\");\n          console.log(opacity);\n          console.log(\"-------\");\n          context.globalAlpha = opacity === \"\" ? 1 : Number(opacity);\n          // get the map's transform parameters from the style's transform matrix\n          const matrix = (mapCanvas.style.transform).match(/^matrix\\((.*)\\)$/)[1].split(\",\").map(Number);\n          // apply the transform to the exporting temp canvas's context\n          context.setTransform(...matrix);\n          context.drawImage(mapCanvas, 0, 0);\n        }\n      });\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    },\n    async addImageProcess(src) {\n      return new Promise((resolve, reject) => {\n        let img = new Image()\n        img.onload = () => resolve(img)\n        img.onerror = reject\n        img.setAttribute('crossorigin', 'anonymous');\n        img.src = src\n      })\n    },\n    async addLegendsTo(context, {legendInfos, pos, columnWidth, height: maxHeight}) {\n      // debugger;\n      const margin = 10;\n      let offsetX = margin;\n      let offsetY = margin;\n      const labelHeight = 22;\n      const [legendBoxWidth, legendBoxHeight] = this.getLegendBoxDimension(margin, labelHeight, columnWidth, legendInfos, maxHeight);\n      // re-adjust pos y according to legend Box Height\n      pos.y += maxHeight - legendBoxHeight;\n      // write legend title\n      context.textBaseline = \"bottom\";\n      context.fillStyle = \"black\";\n      context.font = \"bold 25px Times\";\n      context.fillText(\"Legends\", pos.x + margin, pos.y - margin);\n      // create white canvas on legendbox\n      context.globalAlpha   = 1;\n      context.fillStyle = \"black\";\n      // context.zIndex = 2000000000000;\n      context.fillRect(pos.x, pos.y, legendBoxWidth, legendBoxHeight);\n      // configure text style\n      context.fillStyle =  \"rgba(255, 255, 255, 0.5)\";\n      context.fillStyle = \"black\";\n      context.font = \"18px Times\";\n\n      for (let legend of legendInfos) {\n\n        await this.addImageProcess(legend.legendPath).then(img => {\n          const itemHeight = legend.imgHeight + labelHeight + margin;\n          if (offsetY + itemHeight > maxHeight) {\n            offsetX += margin + columnWidth;\n            offsetY = margin;\n          }\n          const left = pos.x + offsetX;\n          const top = pos.y + offsetY;\n\n          context.fillText(legend.title, left, top + labelHeight);\n          context.drawImage(img, left, top + labelHeight, legend.imgWidth, legend.imgHeight);\n          // update to offsetY\n          offsetY += itemHeight;\n          console.log(img);\n          console.log(\"img\");\n        })\n      }\n\n      console.log(\"after img----\");\n\n      // legendInfos.forEach(async legend => {\n      //\n      //   const itemHeight = legend.imgHeight + labelHeight + margin;\n      //   if (offsetY + itemHeight > maxHeight) {\n      //     offsetX += margin + columnWidth;\n      //     offsetY = margin;\n      //   }\n      //   const left = pos.x + offsetX;\n      //   const top = pos.y + offsetY;\n      //\n      //   var img = document.createElement(\"img\");\n      //   // var img = new Image();\n      //   // img.onload = function () {\n      //   //   context.fillText(legend.title, left, top + labelHeight);\n      //   //   context.drawImage(img, left, top + labelHeight, legend.imgWidth, legend.imgHeight);\n      //   //   // update to offsetY\n      //   //   offsetY += itemHeight;\n      //   //   console.log(img);\n      //   // };\n      //\n      //   img.setAttribute('crossorigin', 'anonymous');\n      //   img.setAttribute(\"src\", legend.legendPath);\n      //   // img.src = legend.legendPath;\n      //\n      //\n      //   context.fillText(legend.title, left, top + labelHeight);\n      //   context.drawImage(img, left, top + labelHeight, legend.imgWidth, legend.imgHeight);\n      //   // update to offsetY\n      //   offsetY += itemHeight;\n      // });\n      context.lineWidth = 1;\n      context.closePath();\n      context.strokeRect(pos.x, pos.y, legendBoxWidth, legendBoxHeight);\n    },\n    getLegendBoxDimension(margin, labelHeight, columnWidth, legendInfos, maxBoxHeight) {\n      let bottomMostLegendItemY = 0;\n      const lastLegendItemPos = legendInfos.reduce((prevSize, legend) => {\n        const itemHeight = legend.imgHeight + labelHeight + margin;\n        if (prevSize.y + itemHeight > maxBoxHeight) {\n          prevSize.x += margin + columnWidth;\n          prevSize.y = margin;\n        }\n        prevSize.y += itemHeight;\n        if (bottomMostLegendItemY < prevSize.y) bottomMostLegendItemY = prevSize.y;\n        return prevSize;\n      }, {x: margin, y: margin});\n      const width = lastLegendItemPos.x + columnWidth + margin;\n      const height = bottomMostLegendItemY;\n      return [width, height];\n    },\n    drawPolygon(context, color, coords) {\n      context.lineWidth = 2;\n      context.fillStyle = color;\n      context.beginPath();\n      context.moveTo(...coords[0]);\n      for (let i = 1; i < coords.length; i++) {\n        context.lineTo(...coords[i]);\n      }\n      context.closePath();\n      context.fill();\n    },\n    drawScaleBar(context, rightBottomPos) {\n      const {width, text} = this.getScaleBarInfo();\n      const height = 30;\n      const margin = 8;\n      const rightOffset = 15;\n      const bottomOffset = 15;\n      const pos = {\n        x: rightBottomPos.x - (width + margin * 2) - rightOffset,\n        y: rightBottomPos.y - (height + margin * 2) - bottomOffset\n      };\n      // draw background\n      context.globalAlpha = 0.75;\n      context.fillStyle = \"grey\";\n      context.fillRect(pos.x, pos.y, width + margin * 2, height + margin * 2)\n      context.globalAlpha = 1;\n      context.lineWidth = 1.5;\n      context.closePath()\n      context.strokeStyle = \"white\";\n      // draw the scale line shape\n      const x = pos.x + margin;\n      const y = pos.y + margin;\n      context.beginPath()\n      context.moveTo(x, y);\n      context.lineTo(x, y + height)\n      context.lineTo(x + width, y + height)\n      context.lineTo(x + width, y);\n      context.stroke()\n      // write length text below the legend box\n      context.textBaseline = \"bottom\";\n      context.textAlign = \"center\"\n      context.fillStyle = \"white\";\n      context.font = \"15px Times\";\n      context.fillText(text, x + width / 2, y + height - margin);\n    },\n    createMapPDF(title, filename, mapCanvas, {margin, topMargin, mapFrameSize, pageDim, format}) {\n      const pdf = new jsPDF(\"landscape\", undefined, format);\n      pdf.setFont(\"Times\").setFontType(\"bold\").setFontSize(15);\n      pdf.text(title, parseInt(pageDim[0] / 2), 9, null, null, \"center\");\n      try {\n        pdf.addImage(mapCanvas.toDataURL(\"image/png\"), \"JPEG\", margin, topMargin, mapFrameSize[0], mapFrameSize[1]);\n        pdf.save(`${filename}.pdf`);\n      } catch (error) {\n        // showErrorToast(\"Error Occurred! Please try it again.\");\n        console.log(error);\n      }\n    },\n    getScaleBarInfo() {\n      const scaleLine = document.querySelector(\".ol-scale-line-inner\");\n\n      return {width: scaleLine.clientWidth, text: scaleLine.innerText};\n    },\n\n    proxifyWMSLayers() {\n      this.TimeSeriesLayerCollection.forEach((layerobj) => {\n        let properties = layerobj.getProperties();\n        if (properties.changeWMSProxy) {\n          let layer = layerobj.getLayer();\n          if (properties.ThreddsDataServerVersion) {\n            layer.AllLayersList.forEach((timeDimensionLayer) => {\n              const source = timeDimensionLayer.getSource();\n              const currUrl = source.getUrls()[0];\n              source.setProperties({'crossOrigin': 'Anonymous'})\n              currUrl.includes(this.PROXY_PREFIX) || source.setUrls([this.PROXY_PREFIX + currUrl]);\n            });\n          }\n        }\n      });\n    },\n\n    deproxifyWMSLayers() {\n      console.log('--------deproxy');\n      this.TimeSeriesLayerCollection.forEach((layerobj) => {\n        let properties = layerobj.getProperties();\n        if (properties.changeWMSProxy) {\n          let layer = layerobj.getLayer();\n          if (properties.ThreddsDataServerVersion) {\n            layer.AllLayersList.forEach((timeDimensionLayer) => {\n              const source = timeDimensionLayer.getSource();\n              source.setUrls([source.getUrls()[0].replace(this.PROXY_PREFIX, \"\")]);\n            });\n          }\n        }\n      });\n    },\n  },\n  computed: {\n    ...\n        mapState([\"PrintMapComponentData\", \"TimeSeriesLayerCollection\", \"mapObject\"]),\n  },\n  mounted() {\n    console.log(\"---------------------------------mounted----------------------------------\");\n  },\n  beforeCreate() {\n    eventHub.$on(\"OpenDialogOfPrintAndProxyfy\", () => {\n      let target = document.querySelector('#map-control-printing');\n      this.mapObject.setTarget(target);\n      console.log('this looks ok');\n      this.mapObject.updateSize();\n      this.CheckSelectAll = false;\n      this.legendInfos = [];\n      this.LegendUIList = [];\n      this.proxifyWMSLayers();\n      this.TimeSeriesLayerCollection.filter((obj) => {\n        let Properties = obj.getProperties();\n        if (Properties.visible === true) {\n          let prop = obj.getProperties();\n          let objj = {\n            id: prop.id,\n            visible: false,\n            title: prop.title,\n            legendPath: prop.legendPath\n          }\n          this.legendInfos.push(objj);\n        }\n        return true;\n      });\n\n    });\n  },\n  deactivated() {\n    console.log(\"---------------------------------deactivated----------------------------------\");\n  }\n}\n</script>\n\n\n<style scoped>\n\n#map-control-printing {\n  height: 700px;\n  width: 100%;\n  border: 1px solid grey;\n  border-radius: 4px;\n}\n\n.muted-text {\n  font-size: 80%;\n  font-weight: 400;\n  text-align: center;\n}\n\n.printing-control {\n  padding-right: 20px;\n}\n\n</style>","<template>\n  <div class=\"layer-legend-item\">\n    <el-checkbox v-model=\"itemVisible.visible\" :label=\"item.title\"></el-checkbox>\n    <br>\n    <img class=\"legend-image\"\n         :src=\"item.legendPath\">\n  </div>\n\n</template>\n<script>\n\n\nexport default {\n  name: \"mapLagend\",\n  data() {\n    return {\n      checked1: true,\n    };\n  },\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n  },\n  methods: {\n    calculateHeightWidth() {\n      //    height calculation\n      const img = new Image();\n      img.src = this.item.legendPath;\n      let that = this.item\n      img.onload = function () {\n        that.imgWidth = this.width;\n        that.imgHeight = this.height;\n      }\n    }\n  },\n  computed: {\n    itemVisible() {\n      return this.item;\n    }\n\n  },\n  mounted() {\n    this.calculateHeightWidth();\n  },\n  beforeCreate() {\n\n  },\n\n}\n</script>\n\n\n<style scoped>\n.layer-legend-item {\n  border: 0.5px solid rgb(173, 173, 173);\n  box-shadow: 0 0 2px rgba(34, 34, 34, 0.397);\n  border-radius: 2px;\n  margin: 2px 8px;\n  padding: 2px 6px;\n  min-width: 240px;\n}\n\n</style>","import { render } from \"./mapLagend.vue?vue&type=template&id=2c1654b0&scoped=true\"\nimport script from \"./mapLagend.vue?vue&type=script&lang=js\"\nexport * from \"./mapLagend.vue?vue&type=script&lang=js\"\n\nimport \"./mapLagend.vue?vue&type=style&index=0&id=2c1654b0&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2c1654b0\"]])\n\nexport default __exports__","import { render } from \"./PrintMap.vue?vue&type=template&id=25bed18e&scoped=true\"\nimport script from \"./PrintMap.vue?vue&type=script&lang=js\"\nexport * from \"./PrintMap.vue?vue&type=script&lang=js\"\n\nimport \"./PrintMap.vue?vue&type=style&index=0&id=25bed18e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-25bed18e\"]])\n\nexport default __exports__","import { render } from \"./mapComponentRecent.vue?vue&type=template&id=716e5eaf\"\nimport script from \"./mapComponentRecent.vue?vue&type=script&lang=js\"\nexport * from \"./mapComponentRecent.vue?vue&type=script&lang=js\"\n\nimport \"./mapComponentRecent.vue?vue&type=style&index=0&id=716e5eaf&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TabBodyRecent.vue?vue&type=template&id=c96ee428&scoped=true\"\nimport script from \"./TabBodyRecent.vue?vue&type=script&lang=js\"\nexport * from \"./TabBodyRecent.vue?vue&type=script&lang=js\"\n\nimport \"./TabBodyRecent.vue?vue&type=style&index=0&id=c96ee428&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c96ee428\"]])\n\nexport default __exports__","<template>\n  <el-row class=\"airquality\">\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapControlsArchive></mapControlsArchive>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-10 padding-top-5 padding-right-5\">\n            <chartComponentArchive  :IndexValue=\"1\"></chartComponentArchive>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"12\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapComponentArchive></mapComponentArchive>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentArchive  :IndexValue=\"2\"></chartComponentArchive>\n        </el-col>\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentArchive  :IndexValue=\"3\"></chartComponentArchive>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-10\">\n                    <LayerSwitcherControl></LayerSwitcherControl>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-10\">\n          <chartComponentArchive  :IndexValue=\"4\"></chartComponentArchive>\n        </el-col>\n      </el-row>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport LayerSwitcherControl from '../common/LayerSwitcherControl';\n\n// import about from \"./about\";\nimport chartComponentArchive from \"./chartComponentArchive\";\nimport mapControlsArchive from \"./mapControlsArchive\";\nimport mapComponentArchive from \"./mapComponentArchive\";\n\n// import {mapActions} from \"vuex\";\n\nexport default {\n  name: \"emissionTabBody\",\n  components: {\n    LayerSwitcherControl,\n    chartComponentArchive,\n    mapControlsArchive,\n    mapComponentArchive,\n  },\n  methods: {\n    // ...mapActions([\"getCascaderOptions\"]),\n  },\n  async mounted() {\n    // let data = await this.getCascaderOptions();\n    // console.log(data);\n  }\n}\n</script>\n\n<style scoped>\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n.full-height {\n  height: 100%;\n}\n.second-row div{\n  /*height: calc(100% - 12.5px);*/\n}\n</style>\n","<template>\n  <div class=\"card-box full-height full-width about-div\" ref=\"outerViz\">\n    <div v-if=\"visualizationIn =='chart'\" class=\"chart-div\" :id=\"'chart'+IndexValue\" ref=\"ChartDiv\">\n      <div class=\"flex-center-vertically\">\n        <!--        Please select a layer and draw a feature to view the chart-->\n        <el-skeleton :rows=\"5\" animated/>\n      </div>\n    </div>\n\n    <div v-if=\"visualizationIn =='2Dimage'\" class=\"position-relative  full-width full-height\" ref=\"Image2D\">\n      <div class=\"download-map-Image\" @click=\"downloadImage()\">\n        <i class=\"fas fa-download\"></i>\n      </div>\n      <div class=\"vertically-center\">\n        <img class=\"generated-image\" :width=\"imageInfo.width\" :src=\"imageInfo.url\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport eventHub from \"../../utils/utils\"\n\nimport Highcharts from 'highcharts';\n// Alternatively, this is how to load Highstock. Highmaps is similar.\n// import Highcharts from 'highcharts/highstock';\n\n// Load the exporting module.\nimport Exporting from 'highcharts/modules/exporting';\nimport ExportData from 'highcharts/modules/export-data';\nimport NOdata from 'highcharts/modules/no-data-to-display'\nimport MoreHighcharts from 'highcharts/highcharts-more';\n\n// Initialize exporting module.\nExporting(Highcharts);\nNOdata(Highcharts);\nMoreHighcharts(Highcharts);\nExportData(Highcharts);\n\n// window.Highcharts = Highcharts;\nimport {AirPollutionWatchApp} from \"../../utils/dataArchive\";\nimport {mapActions, mapState, mapGetters} from 'vuex';\n\n\nexport default {\n  name: \"chartComponent\",\n  props: {\n    IndexValue: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      visualizationIn: 'chart',\n      imageInfo: {\n        url: '',\n        downloadFileName: '',\n        width: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"PostGetStationData\", \"PostGet2DImage\", \"TimeSeriesRasterQuery\"]),\n    async renderVisualization() {\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n\n          let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"parameter_by_pollutant_value_stationData_val\" + this.IndexValue]);\n          } else {\n            console.log(\"\");\n            // let Extent = [];\n            // this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].featureExtent.forEach(function (ext1) {\n            //   Extent.push(parseFloat(ext1.toFixed(6)))\n            // });\n            // console.log(Extent);\n            // let layer = await this.getBindedLayer(kk.layerId);\n            // layer.setVisibleDivBind(true);\n            // // let NewMapObj = myApp.CreateMapObject(WorkingIndex);\n            // let layerPropertiesObject = await this.getLayer(kk.layerId).getCurrentLayer().getProperties();\n            // let layerSourceParam = layerPropertiesObject.source.getParams();\n            // // let layerUrl = layerPropertiesObject.source.getUrls()[0].split('wms')[1];\n            // let plotProp = layerPropertiesObject.plotInfo();\n            // plotProp.wmsList = layerPropertiesObject.wmsList;\n            // plotProp.LAYER = layerSourceParam.LAYERS;\n            // plotProp.TIME = layerSourceParam.TIME;\n            // plotProp.COLORSCALERANGE = layerSourceParam.COLORSCALERANGE;\n            // plotProp.BBOX = Extent;\n            // let date = new Date(layerSourceParam.TIME);\n            // let dateTimeFormat = new Intl.DateTimeFormat('en', {year: 'numeric', month: 'short', day: '2-digit'});\n            // let [{value: month}, , {value: day}, , {value: year}] = dateTimeFormat.formatToParts(date)\n            // let completeDateLabel = `${day} ${month} ${year}`;\n            // plotProp.labelName = completeDateLabel + layerPropertiesObject.plotInfo().LabelTitleTime;\n            // this.visualizationIn = '2Dimage';\n            // let w = this.$refs.outerViz.clientWidth;\n            // let h = this.$refs.outerViz.clientHeight;\n            // let width = w / 96;\n            // let height = h / 96;\n            // plotProp.width = width.toFixed(3);\n            // plotProp.height = height.toFixed(3);\n            // plotProp.rid = 0;\n            // let ParseJson = await this.PostGet2DImage(plotProp);\n            // this.imageInfo.url = ParseJson.image;\n            // this.imageInfo.downloadFileName = plotProp.title + '.png';\n            // this.imageInfo.width = w;\n          }\n        } else {\n          //by location\n          let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][2]);\n          }\n        }\n      } else if (this.mapControlVariable.data_period == \"Archive\") {\n\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n          let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"parameter_by_pollutant_value_stationData_val\" + this.IndexValue]);\n          } else {\n            this.TimeSeriesPlot(kk, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].wktValue, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].geometryType,this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].default_level_value);\n          }\n        } else {\n          //by location\n          let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][2]);\n          } else {\n            if (this.mapControlVariable.location_by_wktValue) {\n              this.TimeSeriesPlot(kk, this.mapControlVariable.location_by_wktValue, this.mapControlVariable.location_by_geometryType,this.mapControlVariable.location_by_default_level_value);\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select a location on map for time series visualization of ' + kk.label,\n                type: 'warning'\n              });\n            }\n          }\n        }\n      } else {\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n          let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          this.TimeSeriesPlot(kk, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].wktValue, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].geometryType,this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].default_level_value);\n        } else {\n          //by location\n          let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n          this.TimeSeriesPlot(kk, this.mapControlVariable.location_by_wktValue, this.mapControlVariable.location_by_geometryType,this.mapControlVariable.location_by_default_level_value);\n        }\n      }\n\n      // else if (this.mapControlVariable.data_period == \"Archive\") {\n      //\n      // } else if (this.mapControlVariable.data_period == \"Forecast\") {\n      //\n      // }\n\n    },\n    getCascaderInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    async ObservationDatavisualization(kk, stationId) {\n      let layer = this.getBindedLayer(kk.layerId);\n      layer.setVisibleDivBind(true);\n      let param = {\n        stId: stationId,\n        ModelClass: kk.ModelClass,\n        ModelClassDataList: kk.ModelClassDataList,\n        typeName: kk.typeName,\n        StartDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate),\n        EndDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate)\n      };\n      let parsedData = await this.PostGetStationData(param);\n      this.visualizationIn = 'chart'\n      var stationObject = kk.childrenData.filter((stdata) => {\n        return stdata.value == stationId\n      })[0]\n\n      let stationName = stationObject.folder_name;\n\n      let title;\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate));\n      } else {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate), this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate));\n      }\n      // debugger;\n      let XaxisLabel = kk.chart.XaxisLabel();\n      let plotType = kk.chart.plotType;\n      let highchartsObj = null;\n      if (plotType === 'point') {\n        highchartsObj = this.AirPollutionWatchApp.datetimePointChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      } else {\n        highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      }\n      Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n\n    },\n    downloadImage() {\n      this.AirPollutionWatchApp.forceDownload(this.imageInfo.url, this.imageInfo.downloadFileName);\n    },\n    async TimeSeriesPlot(kk, WKT, WKTType,default_level_value) {\n\n      let layerBind = this.getBindedLayer(kk.layerId);\n      let layer = layerBind.getLayer();\n\n      let SourceParam = null;\n      let SourceURL = null;\n      let layerProperties = null;\n\n      if (layer.getProperties().ThreddsDataServerVersion) {\n        layerProperties = layer.getProperties();\n        SourceParam = layer.getCurrentLayer().getProperties().source.getParams();\n        SourceURL = [];\n        layerProperties.source.url.forEach(function (val) {\n          SourceURL.push(val.split('/wms/')[1]);\n        });\n\n      } else {\n        layerProperties = layer.getProperties();\n        SourceParam = layer.source.getParams();\n        SourceURL = layer.source.getUrls()[0].split('wms')[1];\n      }\n      let param = {\n        DATADIR: SourceURL,\n        LAYER: SourceParam.LAYERS,\n        wkt: WKT,\n        type: WKTType\n      };\n\n      let parsedData = await this.TimeSeriesRasterQuery(param);\n      if (parsedData.status === 200) {\n        let title =  layerProperties.chartDetail.Product + \" (\"+layerProperties.chartDetail.Source+\")\";\n        let subTitle;\n        if (default_level_value) {\n          subTitle = default_level_value;\n        } else {\n          subTitle = parsedData.geom;\n        }\n        let YaxisLabel = layerProperties.chartDetail.unit;\n        let SeriesName = layerProperties.chartDetail.SeriesName;\n        let highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, subTitle, parsedData.SeriesData, SeriesName, YaxisLabel, parsedData.XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1])\n        Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n      }\n    }\n  },\n  computed: {\n    ...mapState([\"mapControlVariable\", \"TimeSeriesLayerCollection\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n  },\n  created() {\n    eventHub.$on(\"getVisualization\", () => {\n      this.renderVisualization();\n    });\n  },\n  async mounted() {\n\n    // Generate the chart\n//     Highcharts.chart('chart', {\n//       credits: {\n//         enabled: false\n//       },\n//       title: {\n//         align: \"center\",\n//         text: \"Select Indices to Display Chart\",\n//       },\n//       series: [{\n//         data: [],\n//       }],\n//       chart: {\n//         backgroundColor: 'rgba(255,255,255,0)',\n//         style: {\n//           \"fontFamily\": \"Lato,\\\"Lucida Grande\\\", \\\"Lucida Sans Unicode\\\", Verdana, Arial, Helvetica, sans-serif\",\n//           \"fontSize\": \"12px\"\n//         },\n//\n//         animation: true,\n//         zoomType: 'x',\n// //        borderColor: '#000000',\n// //        borderWidth: 2,\n//         type: 'area',\n//       },\n//       noData: {\n//         style: {\n//           fontWeight: 'bold',\n//           fontSize: '15px',\n//           color: '#303030'\n//         }\n//       },\n//     });\n    eventHub.$on('UpdateChart', (HcObject) => {\n      this.updateChart(HcObject);\n    });\n  },\n};\n</script>\n\n<style scoped>\n\n.chart-option .el-row {\n  margin-left: 5px !important;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-right: 8px !important;\n}\n\n.chart-option {\n  border-bottom: solid 1px #e2e2e2;\n}\n\n.chart-div {\n  height: 100%;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n.center-content-parent {\n  position: relative;\n}\n\n.center-content-child {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  margin: -70px 0 0 -170px;\n}\n\n.flex-center-vertically {\n  padding: 20px;\n  justify-content: center;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  height: 100%;\n}\n\n.plotSelection {\n  display: block;\n}\n\n.sync-chart .el-button {\n  width: 100%;\n}\n\n.position-relative {\n  position: relative !important;\n}\n\n.download-map-Image {\n  z-index: 1000;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  color: #afacac;\n  cursor: pointer;\n}\n\n.vertically-center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</style>\n","import Style from \"ol/style/Style\";\nimport RegularShape from \"ol/style/RegularShape\";\nimport Fill from \"ol/style/Fill\";\nimport Stroke from \"ol/style/Stroke\";\nimport Text from \"ol/style/Text\";\nimport {DefaultMaskWMS, DefaultPlotInfo, TethysAPIAppName} from \"../config\";\nimport {Action} from \"../store/actionType\";\nimport {getURLParameters} from './helpers';\n\nvar myApp = {};\n// First need to initilize\nvar filterCoodrdinate = {};\n\n\nmyApp.endDate = new Date();\nmyApp.endDate.setDate(myApp.endDate.getDate() - 1);\n\nmyApp.startDate = new Date();\nmyApp.startDate.setDate(myApp.endDate.getDate() - 7);\n\n// myApp.startDate = new Date();\n// myApp.startDate.setDate(myApp.endDate.getDate() - 1);\n\n\nlet archiveDate = getURLParameters()['date'];\nif (archiveDate) {\n    if (archiveDate.length == 8) {\n        let checkInt = parseInt(archiveDate);\n        if (checkInt) {\n            // Number with valid\n            let YYYY = parseInt(archiveDate.slice(0, 4));\n            let MM_index = parseInt(archiveDate.slice(4, 6)) - 1;\n            let DD = parseInt(archiveDate.slice(6, 8));\n            let dObject = new Date(YYYY, MM_index, DD);\n            myApp.endDate = dObject;\n            let bd = getURLParameters()['bd'];\n            let copiedDate = new Date(myApp.endDate);\n            if (bd) {\n                //    do something\n                let checkInt = parseInt(bd);\n                if (checkInt) {\n                    if (checkInt <= 20) {\n                        myApp.startDate.setDate(myApp.endDate.getDate() - checkInt);\n                    } else {\n                        myApp.startDate = copiedDate.setDate(copiedDate.getDate() - 7);\n                    }\n                } else {\n                    myApp.startDate = copiedDate.setDate(copiedDate.getDate() - 7);\n\n                }\n            } else {\n                // myApp.startDate.setDate(myApp.endDate.getDate() - 7);\n                myApp.startDate = copiedDate.setDate(copiedDate.getDate() - 7);\n            }\n\n        }\n    }\n}\n\n\n// myApp.startDateArchive = new Date();\n// myApp.startDateArchive.setDate(myApp.startDateArchive.getDate() - 1);\n// myApp.endDateArchive = new Date();\n\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\n\n\nmyApp.APICollection = {\n    layerData: {\n        Aeronet: '/apps/' + TethysAPIAppName + '/aeronetaodpm/',\n        USEmbassyAOD: '/apps/' + TethysAPIAppName + '/usembassypm/',\n        getGeoJSONofStations: '/apps/' + TethysAPIAppName + '/getGeoJSONofStations/',\n        getGeoJsonForOneSatation: '/apps/' + TethysAPIAppName + '/getGeoJsonForOneSatation/',\n        getAllStationsID: '/apps/' + TethysAPIAppName + '/getAllStationsID/',\n    },\n    api: {\n        commonAPI: '/apps/' + TethysAPIAppName + '/getData/',\n        RegionGeojson: '/apps/' + TethysAPIAppName + '/geojsonregion/',\n        AOIPolygon: '/apps/' + TethysAPIAppName + '/aoipolygon/',\n        GetMapImage: '/apps/' + TethysAPIAppName + '/getmapimage/',\n        GetImage: '/apps/' + TethysAPIAppName + '/downloadImage/',\n        SlicedFromCatalog: '/apps/' + TethysAPIAppName + '/slicedfromcatalog/'\n    }\n};\n\n\nmyApp.constants = {\n    archive: {\n        layerId: {\n            TerraModisTrueColor: 'Archive__TerraModisTrueColor',\n            VIIRS_SNPPTrueColor: 'Recent__VIIRS_SNPP-TrueColor1km',\n            GEOS_PM2p5: 'Archive__GEOS_PM2p5',\n            TerraModisAOD: 'Archive__TerraModisAOD',\n            PM_AeronetAOD: 'Archive__aeronet',\n            PM_usembassy: 'Archive__usembassy',\n            O3_usembassy: 'Archive__usembassy_O3',\n            O3_TROPOMI: 'Archive__TROPOMI_O3',\n            O3_GEOS: 'Archive__GEOS_O3',\n            SO2_TROPOMI: 'Archive__TROPOMI_SO2',\n            SO2_GEOS: 'Archive__GEOS_SO2',\n            NO2_TROPOMI: 'Archive__TROPOMI_NO2',\n            NO2_GEOS: 'Archive__GEOS_NO2',\n            CO_TROPOMI: 'Archive__TROPOMI_CO',\n            CO_TROPOMI_SERVIR: 'Archive__TROPOMI_CO_SERVIR',\n            CO_GEOS: 'Archive__GEOS_CO',\n            NO2_AST: 'Archive__AST_NO2',\n            SO2_AST: 'Archive__AST_SO2',\n            Nep_Gov_PM1: 'Nep_Gov_PM1',\n            Nep_Gov_PM10: 'Nep_Gov_PM10',\n            Nep_Gov_PM2p5: 'Nep_Gov_PM2p5',\n            Nep_Gov_tsp: 'Nep_Gov_tsp',\n        }\n    },\n};\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\nmyApp.AllBindedLayersList = [];\nmyApp.OnlyOnce = true;\n\nmyApp.getLayer = function (id) {\n    // console.log(id)\n    var layer;\n    for (let i = 0; i < myApp.AllBindedLayersList.length; i++) {\n        // console.log(myApp.AllBindedLayersList[i].getProperties().id);\n        if (id == myApp.AllBindedLayersList[i].getProperties().id) { ///popDensityLayer.getProperties().id\n            layer = myApp.AllBindedLayersList[i].getLayer();\n            break;\n        }\n    }\n    return layer;\n};\n\nmyApp.AeronetAODStyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let AeronetStyle = null;\n    AeronetStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#D5212E'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 3,\n            radius: 10,\n            rotation: 0,\n            angle: 0\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return AeronetStyle;\n};\nmyApp.USEmbassyPM25StyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let USEmbassyAODStyle = null;\n    USEmbassyAODStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#CBCB59'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 4,\n            radius: 10,\n            angle: Math.PI / 4\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return USEmbassyAODStyle;\n};\nmyApp.USEmbassyO3StyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let USEmbassyAODStyle = null;\n    USEmbassyAODStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#CBCB59'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 4,\n            radius: 10,\n            angle: Math.PI / 4\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return USEmbassyAODStyle;\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\nlet SLDRGB = `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"\n                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"\n                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:resc=\"http://www.resc.reading.ac.uk\">\n    <NamedLayer>\n     <se:Name>red</se:Name>\n        <UserStyle>\n            <se:Name>Thesholded colour scheme</se:Name>\n            <se:CoverageStyle>\n                <se:Rule>\n                    <resc:RasterRGBSymbolizer>\n                        <se:Opacity>1.0</se:Opacity>\n                        <se:ColorMap>\n                            <resc:RedBand>\n                                <resc:BandName>red</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:RedBand>\n                            <resc:GreenBand>\n                                <resc:BandName>green</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:GreenBand>\n                            <resc:BlueBand>\n                                <resc:BandName>blue</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>1</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                    <resc:Spacing>linear</resc:Spacing>\n                                </resc:Range>\n                            </resc:BlueBand>\n                        </se:ColorMap>\n                    </resc:RasterRGBSymbolizer>\n                </se:Rule>\n            </se:CoverageStyle>\n        </UserStyle>\n    </NamedLayer>\n</StyledLayerDescriptor>\n`;\n\nmyApp.TrueColorImage = {\n    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/TerraMODIS-TrueColor1km/catalog.xml',\n    useSLD: true,\n    isTimeDimensionLayer: true,\n    SLD: SLDRGB,\n    getStartDate: function () {\n        return myApp.formatDate(myApp.startDate)\n    },\n    getEndDate: function () {\n        return myApp.formatDate(myApp.endDate)\n    },\n    VisibleDivBind: true,\n    threddLayerProp: {\n        id: myApp.constants.archive.layerId.TerraModisTrueColor,\n        title: 'TerraModis-TrueColor',\n        visible: false,\n        opacity: 0.5,\n        legendPath: Action.Base + '/' + Action.trueColorLegendImage,\n        ThreddsDataServerVersion: 5,\n        serverType: 'TDS',\n        timeSeries: false,\n        alignTimeSlider: 'right',\n        timeSliderSize: 'small',\n        showlegend: false,\n        showControlPanel: true,\n        zIndex: 10,\n        filterCoodrdinate: filterCoodrdinate,\n        RGBComposite: true,\n        showAnimationButton: true,\n        animationPlot: {title_text: 'TERRA/MODIS Color Image', bbox: [60, 15, 100, 38], resolution: 400},\n        source: {\n            url: [],\n            params: {\n                'LAYERS': 'red',\n                'transparent': true\n            }\n        },\n        mask: DefaultMaskWMS,\n        CropOrMask: 'crop',\n        changeWMSProxy: true,\n    }\n};\n\n\n// myApp.TrueColorImage = {\n//     catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/VIIRS_SNPP-TrueColor1km/catalog.xml',\n//     useSLD: true,\n//     isTimeDimensionLayer: true,\n//     SLD: SLDRGB,\n//     getStartDate: function () {\n//         return myApp.formatDate(myApp.startDate)\n//     },\n//     getEndDate: function () {\n//         return myApp.formatDate(myApp.endDate)\n//     },\n//     VisibleDivBind: true,\n//     threddLayerProp: {\n//         id: myApp.constants.archive.layerId.VIIRS_SNPPTrueColor,\n//         title: 'VIIRS SNPP TrueColor',\n//         visible: false,\n//         opacity: 0.5,\n//         legendPath: Action.Base + '/' + Action.trueColorLegendImage,\n//         ThreddsDataServerVersion: 5,\n//         serverType: 'TDS',\n//         timeSeries: false,\n//         alignTimeSlider: 'right',\n//         timeSliderSize: 'small',\n//         showlegend: false,\n//         showControlPanel: true,\n//         zIndex: 10,\n//         filterCoodrdinate: filterCoodrdinate,\n//         RGBComposite: true,\n//         showAnimationButton: true,\n//         animationPlot: {title_text: 'VIIRS True Color Image', bbox: [60, 15, 100, 38], resolution: 400},\n//         source: {\n//             url: [],\n//             params: {\n//                 'LAYERS': 'red',\n//                 'transparent': true\n//             }\n//         },\n//         mask: DefaultMaskWMS,\n//         CropOrMask: 'crop',\n//         changeWMSProxy: true,\n//     }\n// };\n\nmyApp.DefaultSations = {\n    aeronetAOD: [2, 5, 3, 6],\n    pm2p5Embassy: [6, 7, 6, 7],\n    o3Embassy: [6, 7, 6, 7],\n    NepalStation: [57, 11, 15, 71]\n};\n\nmyApp.cascaderObj = [\n    {\n        label: 'PM',\n        value: 1,\n        children: [\n            {\n                label: 'Surface Observation-AOD (AERONET)',\n                value: 11,\n                layerId: myApp.constants.archive.layerId.PM_AeronetAOD,\n                stationData: true,\n                ModelClass: 'AeronetAod',\n                ModelClassDataList: 'AeronetDataList',\n                typeName: 'aod',\n                defaultStation: myApp.DefaultSations.aeronetAOD,\n                chart: {\n                    title: function (stationName, sd, ed) {\n                        return `${stationName} (${sd} - ${ed})`;\n                    },\n                    subTitle: 'AERONET level 1.5 data measured at 500nm',\n                    SeriesName: 'SeriesName',\n                    YaxisLabel: 'AOD',\n                    XaxisLabel: function () {\n                        return 'Time (UTC)';\n                    },\n                    plotType: 'point'\n                },\n                layerProperties: {\n                    initilize: false,\n                    id: myApp.constants.archive.layerId.PM_AeronetAOD,\n                    title: 'Surface Observation-AOD (AERONET)',\n                    visible: false,\n                    opacity: 1,\n                    zIndex: 5,\n                    layer: 'AirQuality:aeronet_aod',\n                },\n            },\n            {\n                label: 'Ground Observation-PM2.5 (AirNow)',\n                layerId: myApp.constants.archive.layerId.PM_usembassy,\n                value: 12,\n                stationData: true,\n                ModelClass: 'UsEmbassyPm',\n                ModelClassDataList: 'UsEmbassyDataList',\n                typeName: 'pm',\n                defaultStation: myApp.DefaultSations.pm2p5Embassy,\n                chart: {\n                    title: function (stationName, sd, ed) {\n                        return `${stationName} (${sd} - ${ed})`;\n                    },\n                    subTitle: 'source: AirNow',\n                    SeriesName: 'PM2.5',\n                    YaxisLabel: 'PM<sub>2.5</sub>(μg/m<sup>3</sup>)',\n                    XaxisLabel: function () {\n                        return 'Time (UTC)';\n                    }\n                },\n                layerProperties: {\n                    initilize: false,\n                    id: myApp.constants.archive.layerId.PM_usembassy,\n                    title: 'Ground Observation-PM2.5 (AirNow)',\n                    visible: false,\n                    opacity: 1,\n                    zIndex: 6,\n                    layer: 'AirQuality:us_embassy_pm2p5',\n\n                },\n            },\n            {\n                label: 'Reanalysis-PM2.5 (GEOS)',\n                layerId: myApp.constants.archive.layerId.GEOS_PM2p5,\n                value: 13,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/PM/GEOS-PM2p5/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.GEOS_PM2p5,\n                        title: 'GEOS PM2.5',\n                        visible: false,\n                        opacity: 0.5,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: \"GEOS Reanalysis PM$\\\\mathregular{_{2.5} (µg/m^{3})}$\",\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0865, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'PM2p5',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,100\",\n                                'transparent': true\n                            }\n                        },\n                        unit: 'µg/m<sup>3<sup>',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 11,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'GEOS $PM_{2.5}$(µg/$m^{3}$)',\n                                TimeZone: ' UTC'\n                            })\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: 'µg/m<sup>3</sup>', SeriesName: \"value\",\n                            Product: 'PM<sub>2.5</sub>',\n                            Source: 'GEOS',\n\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Satellite-AOD (Terra-MODIS)',\n                layerId: myApp.constants.archive.layerId.TerraModisAOD,\n                value: 14,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/PM/TerraModis-AOD/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.TerraModisAOD,\n                        title: 'TerraModis-AOD',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: 'Satellite-AOD (Terra-MODIS)',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0755, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'aod_550',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0.01,1',\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 12,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'TerraModis-AOD',\n                                TimeZone: ' UTC'\n                            })\n                        }, chartDetail: {\n                            title: 'TerraModis-AOD', unit: \"AOD\", SeriesName: \"value\",\n                            Product: 'AOD',\n                            Source: 'Terra MODIS'\n                        },\n                    }\n                }\n            },\n\n        ]\n    },\n    {\n        label: 'O3',\n        value: 2,\n        children: [\n            // {\n            //     label: 'Satellite-O3 (TROPOMI)',\n            //     layerId: myApp.constants.archive.layerId.O3_TROPOMI,\n            //     value: 21,\n            // },\n            {\n                label: 'Reanalysis-O3 (GEOS)',\n                layerId: myApp.constants.archive.layerId.O3_GEOS,\n                value: 22,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/O3/GEOS-O3/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.O3_GEOS,\n                        title: 'GEOS O3',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: \"GEOS Reanalysis O$\\\\mathregular{_{3} (ppb)}$\",\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0755, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'O3',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,80',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 14,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $O_{3}$(ppb)', TimeZone: ' UTC'})\n                        }, chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'O<sub>3</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            },\n            // {\n            //     label: 'Surface Observation-O3',\n            //     layerId: myApp.constants.archive.layerId.O3_usembassy,\n            //     value: 23,\n            //     stationData: true,\n            //     ModelClass: 'UsEmbassyPm',\n            //     ModelClassDataList: 'UsEmbassyDataList',\n            //     typeName: 'O3',\n            //     defaultStation: myApp.DefaultSations.o3Embassy,\n            //     chart: {\n            //         title: function (stationName, sd, ed) {\n            //             return `${stationName} (${sd} - ${ed})`\n            //         },\n            //         subTitle: 'source: AirNow',\n            //         SeriesName: 'O3',\n            //         YaxisLabel: 'O<sub>3</sub>(ppb)',\n            //         XaxisLabel: function () {\n            //             return 'Time (UTC)'\n            //         }\n            //     },\n            //     layerProperties: {\n            //         initilize: false,\n            //         id: myApp.constants.archive.layerId.O3_usembassy,\n            //         title: 'Surface Observation-O3',\n            //         visible: true,\n            //         opacity: 1,\n            //         zIndex: 7,\n            //         layer: 'AirQuality:us_embassy_o3',\n            //     },\n            // },\n        ]\n    },\n    {\n        label: 'SO2',\n        value: 3,\n        children: [\n            // {\n            //     label: 'Satellite-SO2 (TROPOMI-GEE)',\n            //     layerId: myApp.constants.archive.layerId.SO2_TROPOMI,\n            //     value: 31,\n            //     stationData: false,\n            //     layerProperties: {\n            //         initilize: false,\n            //         catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/TROPOMI-SO2/catalog.xml',\n            //         useSLD: false,\n            //         isTimeDimensionLayer: true,\n            //         getStartDate: function () {\n            //             return myApp.formatDate(myApp.startDate)\n            //         },\n            //         getEndDate: function () {\n            //             return myApp.formatDate(myApp.endDate)\n            //         },\n            //         VisibleDivBind: false,\n            //         threddLayerProp: {\n            //             id: myApp.constants.archive.layerId.SO2_TROPOMI,\n            //             title: 'TROPOMI SO2 (TROPOMI-GEE)',\n            //             visible: false,\n            //             opacity: 0.6,\n            //             ThreddsDataServerVersion: 5,\n            //             serverType: 'TDS',\n            //             timeSeries: false,\n            //             alignTimeSlider: 'right',\n            //             timeSliderSize: 'small',\n            //             showlegend: false,\n            //             showControlPanel: true,\n            //             source: {\n            //                 url: [],\n            //                 params: {\n            //                     'LAYERS': 'SO2',\n            //                     'STYLES': 'default-scalar/x-Rainbow',\n            //                     'COLORSCALERANGE': '0,1',\n            //                     'transparent': true\n            //                 }\n            //             },\n            //             unit: 'molecules / sq.cm',\n            //             mask: DefaultMaskWMS,\n            //             CropOrMask: 'crop',\n            //             changeWMSProxy: true,\n            //             filterCoodrdinate: filterCoodrdinate,\n            //             aoi: true,\n            //             zIndex: 15,\n            //             api: {\n            //                 createGIF: myApp.APICollection.api.CreateGIFImage,\n            //                 GetImage: myApp.APICollection.api.GetImage,\n            //                 TimeZone: ' UTC'\n            //             },\n            //             plotInfo: function () {\n            //                 return Object.assign(DefaultPlotInfo, {\n            //                     title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)',\n            //                     TimeZone: ' UTC'\n            //                 })\n            //             }, chartDetail: {\n            //                 title: 'TROPOMI',\n            //                 unit: \"10<sup>17</sup> molecules/cm<sup>2</sup>\",\n            //                 SeriesName: \"value\",\n            //                 Product: 'SO<sub>2</sub>',\n            //                 Source: 'TROPOMI-GEE'\n            //             },\n            //         }\n            //     }\n            // },\n            {\n                label: 'Reanalysis-SO2 (GEOS)',\n                layerId: myApp.constants.archive.layerId.SO2_GEOS,\n                value: 32,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/GEOS-SO2/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.SO2_GEOS,\n                        title: 'GEOS SO2',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text:\"GEOS Reanalysis SO$\\\\mathregular{_{2} (ppb)}$\",\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0755, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'SO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,10',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 16,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $SO_{2}$(ppb)', TimeZone: ' UTC'})\n                        }, chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'SO<sub>2</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Satellite-SO2 (TROPOMI-SERVIR AST)',\n                layerId: myApp.constants.archive.layerId.SO2_AST,\n                value: 33,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/AST-HKH-SO2/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.SO2_AST,\n                        title: 'TROPOMI SO2 (SERVIR AST)',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: 'TROPOMI SO2',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0755, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'SO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,10',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 16,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $SO_{2}$(ppb)', TimeZone: ' UTC'})\n                        },\n                        chartDetail: {\n                            title: 'AST TROPOMI',\n                            unit: \"molecules/cm<sup>2</sup>\",\n                            SeriesName: \"value\",\n                            Product: 'SO<sub>2</sub>',\n                            Source: 'TROPOMI-SERVIR AST'\n                        },\n                    }\n                }\n            },\n        ]\n    },\n    {\n        label: 'NO2',\n        value: 4,\n        children: [\n            // {\n            //     label: 'Satellite-NO2 (TROPOMI-GEE)',\n            //     layerId: myApp.constants.archive.layerId.NO2_TROPOMI,\n            //     value: 41,\n            //     stationData: false,\n            //     layerProperties: {\n            //         initilize: false,\n            //         catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/TROPOMI-NO2/catalog.xml',\n            //         useSLD: false,\n            //         isTimeDimensionLayer: true,\n            //         getStartDate: function () {\n            //             return myApp.formatDate(myApp.startDate)\n            //         },\n            //         getEndDate: function () {\n            //             return myApp.formatDate(myApp.endDate)\n            //         },\n            //         VisibleDivBind: false,\n            //         threddLayerProp: {\n            //             id: myApp.constants.archive.layerId.NO2_TROPOMI,\n            //             title: 'TROPOMI NO2 (GEE)',\n            //             visible: false,\n            //             opacity: 0.6,\n            //             ThreddsDataServerVersion: 5,\n            //             serverType: 'TDS',\n            //             timeSeries: false,\n            //             alignTimeSlider: 'right',\n            //             timeSliderSize: 'small',\n            //             showlegend: false,\n            //             showControlPanel: true,\n            //             source: {\n            //                 url: [],\n            //                 params: {\n            //                     'LAYERS': 'NO2',\n            //                     'STYLES': 'default-scalar/x-Rainbow',\n            //                     'COLORSCALERANGE': '0,10',\n            //                     'transparent': true\n            //                 }\n            //             },\n            //             unit: 'molecules / sq.cm',\n            //             mask: DefaultMaskWMS,\n            //             CropOrMask: 'crop',\n            //             changeWMSProxy: true,\n            //             filterCoodrdinate: filterCoodrdinate,\n            //             aoi: true,\n            //             zIndex: 17,\n            //             api: {\n            //                 createGIF: myApp.APICollection.api.CreateGIFImage,\n            //                 GetImage: myApp.APICollection.api.GetImage,\n            //                 TimeZone: ' UTC'\n            //             },\n            //             plotInfo: function () {\n            //                 return Object.assign(DefaultPlotInfo, {\n            //                     title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)',\n            //                     TimeZone: ' UTC'\n            //                 })\n            //             },\n            //             chartDetail: {\n            //                 title: 'TROPOMI',\n            //                 unit: \"10<sup>15</sup> molecules/cm<sup>2</sup>\",\n            //                 SeriesName: \"value\",\n            //                 Product: 'NO<sub>2</sub>',\n            //                 Source: 'TROPOMI-GEE'\n            //             },\n            //         }\n            //     }\n            // },\n            {\n                label: 'Reanalysis-NO2 (GEOS)',\n                layerId: myApp.constants.archive.layerId.NO2_GEOS,\n                value: 42,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/GEOS-NO2/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate);\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate);\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.NO2_GEOS,\n                        title: 'GEOS NO2 (GEE)',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text:  \"GEOS Reanalysis NO$\\\\mathregular{_{2} (ppb)}$\",\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0755, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'NO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,10',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 18,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $NO_{2}$(ppb)', TimeZone: ' UTC'})\n                        }, chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'NO<sub>2</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            }, {\n                label: 'Satellite-NO2 (TROPOMI-SERVIR AST)',\n                layerId: myApp.constants.archive.layerId.NO2_AST,\n                value: 43,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/AST-HKH-NO2/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate);\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate);\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.NO2_AST,\n                        title: 'TROPOMI NO2 (SERVIR AST)',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: 'TROPOMI NO2',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0755, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'NO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,10',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 18,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $NO_{2}$(ppb)', TimeZone: ' UTC'})\n                        },\n                        chartDetail: {\n                            title: 'AST TROPOMI ',\n                            unit: \"molecules/cm <sup>2</sup>\",\n                            SeriesName: \"value\",\n                            Product: 'NO<sub>2</sub>',\n                            Source: 'TROPOMI-SERVIR AST'\n                        },\n                    }\n                }\n            }\n        ],\n    },\n    {\n        label: 'CO',\n        value: 5,\n        children: [\n            // {\n            //     label: 'Satellite-CO (TROPOMI-GEE)',\n            //     layerId: myApp.constants.archive.layerId.CO_TROPOMI,\n            //     value: 51,\n            //     stationData: false,\n            //     layerProperties: {\n            //         initilize: false,\n            //         catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/TROPOMI-CO/catalog.xml',\n            //         useSLD: false,\n            //         isTimeDimensionLayer: true,\n            //         getStartDate: function () {\n            //             return myApp.formatDate(myApp.startDate);\n            //         },\n            //         getEndDate: function () {\n            //             return myApp.formatDate(myApp.endDate);\n            //         },\n            //         VisibleDivBind: false,\n            //         threddLayerProp: {\n            //             id: myApp.constants.archive.layerId.CO_TROPOMI,\n            //             title: 'TROPOMI CO (GEE)',\n            //             visible: false,\n            //             opacity: 0.6,\n            //             ThreddsDataServerVersion: 5,\n            //             serverType: 'TDS',\n            //             timeSeries: false,\n            //             alignTimeSlider: 'right',\n            //             timeSliderSize: 'small',\n            //             showlegend: false,\n            //             showControlPanel: true,\n            //             source: {\n            //                 url: [],\n            //                 params: {\n            //                     'LAYERS': 'CO',\n            //                     'STYLES': 'default-scalar/x-Rainbow',\n            //                     'COLORSCALERANGE': '1,4',\n            //                     'transparent': true\n            //                 }\n            //             },\n            //             unit: 'molecules / sq.cm',\n            //             mask: DefaultMaskWMS,\n            //             CropOrMask: 'crop',\n            //             changeWMSProxy: true,\n            //             filterCoodrdinate: filterCoodrdinate,\n            //             aoi: true,\n            //             zIndex: 19,\n            //             api: {\n            //                 createGIF: myApp.APICollection.api.CreateGIFImage,\n            //                 GetImage: myApp.APICollection.api.GetImage,\n            //                 TimeZone: ' UTC'\n            //             },\n            //             plotInfo: function () {\n            //                 return Object.assign(DefaultPlotInfo, {\n            //                     title: 'TROPOMI CO($10^{18}$ molecules/$cm^{2}$)',\n            //                     TimeZone: ' UTC'\n            //                 })\n            //             }, chartDetail: {\n            //                 title: 'TROPOMI-GEE',\n            //                 unit: \"10<sup>18</sup> molecules/cm<sup>2</sup>\",\n            //                 SeriesName: \"value\",\n            //                 Product: 'CO',\n            //                 Source: 'TROPOMI-GEE'\n            //             },\n            //         }\n            //     }\n            // },\n            {\n                label: 'Reanalysis-CO (GEOS)',\n                layerId: myApp.constants.archive.layerId.CO_GEOS,\n                value: 52,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/GEOS-CO/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate);\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate);\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.CO_GEOS,\n                        title: 'GEOS CO',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: \"GEOS Reanalysis CO (ppb)\",\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0975, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'CO',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,1000',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 20,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS CO(ppb)'})\n                        }, chartDetail: {\n                            title: 'GEOS',\n                            unit: \"ppb\",\n                            SeriesName: \"value\",\n                            Product: 'CO',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Satellite-CO (TROPOMI-SERVIR AST)',\n                layerId: myApp.constants.archive.layerId.CO_TROPOMI_SERVIR,\n                value: 53,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/AST-HKH-CO/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate);\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate);\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.CO_TROPOMI_SERVIR,\n                        title: 'TROPOMI CO (SERVIR AST)',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'vertical_column',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '1,5',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'molecules / sq.cm',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 19,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'TROPOMI CO($10^{18}$ molecules/$cm^{2}$)',\n                                TimeZone: ' UTC'\n                            })\n                        }, chartDetail: {\n                            title: 'TROPOMI-SERVIR AST',\n                            unit: \"10<sup>18</sup> molecules/cm<sup>2</sup>\",\n                            SeriesName: \"value\",\n                            Product: 'CO',\n                            Source: 'TROPOMI-SERVIR AST'\n                        },\n                    }\n                }\n            },\n        ]\n    }\n];\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\n\n\nmyApp.makeRequest = function (method, url) {\n    return new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(method, url);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                resolve(xhr.response);\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n};\n\n\nmyApp.getForecastWMSList = async function (url) {\n    let result = await myApp.makeRequest(\"GET\", url);\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(result, \"text/xml\");\n    let wmsList = [];\n    let interestedDate = myApp.formatDate(myApp.forecastDate).replace(/-/g, '');\n    let DimensionTag = xmlDoc.getElementsByTagName(\"catalogRef\");\n    let DateHavingCatalog = null;\n    for (let kk of DimensionTag) {\n        if (interestedDate == kk.getAttribute('xlink:title')) {\n            DateHavingCatalog = url.replace('catalog.xml', kk.getAttribute('xlink:href'));\n            break;\n        }\n    }\n    if (DateHavingCatalog) {\n        let result1 = await this.makeRequest(\"GET\", DateHavingCatalog);\n        let parser1 = new DOMParser();\n        let xmlDoc1 = parser1.parseFromString(result1, \"text/xml\");\n        let dataset = xmlDoc1.getElementsByTagName(\"dataset\");\n        for (let jj of dataset) {\n            let name = jj.getAttribute('name');\n            if (name.slice(-3) == '.nc') {\n                wmsList.push(DateHavingCatalog.replace('/catalog/', '/wms/').replace('catalog.xml', name));\n            }\n        }\n    }\n    return wmsList.sort()\n};\n\n\nmyApp.datetimePointChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n            chart: {\n                marginLeft: 65,\n                /* marginRight: 0, */\n                /* spacingLeft: 0, */\n                /* spacingRight: 0 */\n                backgroundColor: 'transparent',\n                plotBorderColor: '#afafaf',\n                plotBorderWidth: 1,\n            },\n            title: {\n                text: title,\n                fontSize: '10px',\n                useHTML: true\n            },\n            subtitle: {\n                text: subTitle,\n                fontSize: '8px'\n            },\n            series: [{\n                name: SeriesName,\n                data: SeriesData,\n                lineWidth: 0,\n                marker: {\n                    enabled: true,\n                    symbol: 'diamond',\n                    radius: 2\n                },\n            }],\n            xAxis: {\n                type: 'datetime',\n                title: {\n                    text: XaxisLabel,\n                    align: 'high',\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0\n            },\n            yAxis: {\n                title: {\n                    text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                    useHTML: true,\n                    rotation: 0,\n                    // align: 'high',\n                    offset: 0,\n                    x: -50\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0,\n                gridLineWidth: 0\n            },\n            legend: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    color: plotColor\n                }\n            },\n            lang: {\n                noData: DataPeriod + 'data not available for this station.'\n            },\n            exporting: {\n                buttons: {\n                    contextButton: {\n                        menuItems: [\"printChart\",\n                            \"separator\",\n                            \"downloadPNG\",\n                            \"downloadJPEG\",\n                            \"downloadPDF\",\n                            \"downloadSVG\",\n                            \"separator\",\n                            \"downloadCSV\",\n                            \"downloadXLS\",\n                            //\"viewData\",\n                            \"openInCloud\"]\n                    }\n                },\n                // chartOptions: {\n                //     title: {\n                //         text: title,\n                //         fontSize: '10px',\n                //         useHTML: true\n                //     }, yAxis: {\n                //         title: {\n                //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                //             useHTML: true,\n                //             rotation: 250\n                //         }\n                //     },\n                // },\n                allowHTML: true,\n                // fallbackToExportServer: false,\n                // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n            }\n        }\n    ;\n    return data\n};\n\n\nmyApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n        chart: {\n            marginLeft: 65,\n            /* marginRight: 0, */\n            /* spacingLeft: 0, */\n            /* spacingRight: 0 */\n            backgroundColor: 'transparent',\n            plotBorderColor: '#afafaf',\n            plotBorderWidth: 1,\n        },\n        title: {\n            text: title,\n            fontSize: '10px',\n            useHTML: true\n        },\n        subtitle: {\n            text: subTitle,\n            fontSize: '8px'\n        },\n        series: [{\n            name: SeriesName,\n            data: SeriesData,\n            // marker: {\n            //     enabled: true,\n            //     symbol: 'diamond',\n            //     radius: 3\n            // },\n        }],\n        xAxis: {\n            type: 'datetime',\n            title: {\n                text: XaxisLabel,\n                align: 'high',\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0\n        },\n        lang: {\n            noData: DataPeriod + 'data not available for this station.'\n        },\n        yAxis: {\n            title: {\n                text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                useHTML: true,\n                rotation: 0,\n                // align: 'high',\n                offset: 0,\n                x: -50\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0,\n            gridLineWidth: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                color: plotColor\n            }\n        },\n        exporting: {\n            buttons: {\n                contextButton: {\n                    menuItems: [\"printChart\",\n                        \"separator\",\n                        \"downloadPNG\",\n                        \"downloadJPEG\",\n                        \"downloadPDF\",\n                        \"downloadSVG\",\n                        \"separator\",\n                        \"downloadCSV\",\n                        \"downloadXLS\",\n                        //\"viewData\",\n                        \"openInCloud\"]\n                }\n            },\n            // chartOptions: {\n            //     title: {\n            //         text: title,\n            //         fontSize: '10px',\n            //         useHTML: true\n            //     }, yAxis: {\n            //         title: {\n            //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n            //             useHTML: true,\n            //             rotation: 250\n            //         }\n            //     },\n            // },\n            allowHTML: true,\n            // fallbackToExportServer: false,\n            // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n        }\n    };\n    return data\n};\n\n\nmyApp.forceDownload = function (url, fileName) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        var urlCreator = window.URL || window.webkitURL;\n        var imageUrl = urlCreator.createObjectURL(this.response);\n        var tag = document.createElement('a');\n        tag.href = imageUrl;\n        tag.download = fileName;\n        document.body.appendChild(tag);\n        tag.click();\n        document.body.removeChild(tag);\n    }\n    xhr.send();\n}\n\n// myApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor) {\n//     let data = {\n//             chart: {\n//                 marginLeft: 65,\n//                 /* marginRight: 0, */\n//                 /* spacingLeft: 0, */\n//                 /* spacingRight: 0 */\n//                 backgroundColor: 'transparent',\n//                 plotBorderColor: '#afafaf',\n//                 plotBorderWidth: 1,\n//             },\n//             title: {\n//                 text: title,\n//                 fontSize: '10px',\n//                 useHTML: true\n//             },\n//             subtitle: {\n//                 text: subTitle,\n//                 fontSize: '8px'\n//             },\n//             series: [{\n//                 name: SeriesName,\n//                 data: SeriesData,\n//                 // marker: {\n//                 //     enabled: true,\n//                 //     symbol: 'diamond',\n//                 //     radius: 3\n//                 // },\n//             }],\n//             xAxis: {\n//                 type: 'datetime',\n//                 title: {\n//                     text: XaxisLabel,\n//                     align: 'high',\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0\n//             },\n//             yAxis: {\n//                 title: {\n//                     text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                     useHTML: true,\n//                     rotation: 0,\n//                     // align: 'high',\n//                     offset: 0,\n//                     x: -50\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0,\n//                 gridLineWidth: 0\n//             },\n//             legend: {\n//                 enabled: false\n//             },\n//             credits: {\n//                 enabled: false\n//             },\n//             plotOptions: {\n//                 series: {\n//                     color: plotColor\n//                 }\n//             },\n//             exporting: {\n//                 buttons: {\n//                     contextButton: {\n//                         menuItems: [\"printChart\",\n//                             \"separator\",\n//                             \"downloadPNG\",\n//                             \"downloadJPEG\",\n//                             \"downloadPDF\",\n//                             \"downloadSVG\",\n//                             \"separator\",\n//                             \"downloadCSV\",\n//                             \"downloadXLS\",\n//                             //\"viewData\",\n//                             \"openInCloud\"]\n//                     }\n//                 },\n//                 // chartOptions: {\n//                 //     title: {\n//                 //         text: title,\n//                 //         fontSize: '10px',\n//                 //         useHTML: true\n//                 //     }, yAxis: {\n//                 //         title: {\n//                 //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                 //             useHTML: true,\n//                 //             rotation: 250\n//                 //         }\n//                 //     },\n//                 // },\n//                 allowHTML: true,\n//                 // fallbackToExportServer: false,\n//                 // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n//             }\n//         }\n//     ;\n//     console.log(JSON.stringify(data));\n//     return data\n// };\n\n\nexport var AirPollutionWatchApp = myApp;","import { render } from \"./chartComponentArchive.vue?vue&type=template&id=faee2a24&scoped=true\"\nimport script from \"./chartComponentArchive.vue?vue&type=script&lang=js\"\nexport * from \"./chartComponentArchive.vue?vue&type=script&lang=js\"\n\nimport \"./chartComponentArchive.vue?vue&type=style&index=0&id=faee2a24&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-faee2a24\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Map Controls\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n        <el-form\n            label-position=\"left\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n        >\n          <el-form-item label=\"Select By\" prop=\"select_by\">\n            <el-select v-model=\"mapControlVariable.select_by\" placeholder=\"Select By\" style=\"width: 100%\">\n\n              <el-option\n                  v-for=\"item in options.select_by\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                  :disabled=\"item.disabled\"\n              >\n              </el-option>\n\n            </el-select>\n          </el-form-item>\n\n        </el-form>\n\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n            v-if=\"mapControlVariable.select_by ==='Location'\"\n        >\n\n          <el-form-item v-show=\"mapControlVariable.data_period !=='Recent'\" label=\"Select Location\"\n                        prop=\"Select Location\">\n\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-model=\"mapControlVariable.location_by\" placeholder=\"Select Location\" style=\"width: 100%\">\n                <el-option\n                    v-for=\"item in options.location_by\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n\n              </el-select>\n            </el-col>\n            <el-col :span=\"2\" style=\"width: 100%\">\n              <div class=\"\" style=\"width: 100%;text-align: center;\">\n                -\n              </div>\n            </el-col>\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-show=\"mapControlVariable.location_by ==='default_locations'\"\n                         v-model=\"mapControlVariable.default_location\"\n                         placeholder=\"Select Location\" style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.default_location\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n              <div class=\"\" v-show=\"mapControlVariable.location_by ==='AOI'\">\n                <div class=\"feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===true\">Feature\n                  selected\n                </div>\n                <div class=\"no-feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===false\">No Feature\n                  selected\n                </div>\n              </div>\n            </el-col>\n\n          </el-form-item>\n\n          <el-form-item label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value1\"\n                  :options=\"cascaderData\"\n                  :props=\"props\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value2\"\n                  :options=\"cascaderData\"\n                  :props=\"props\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value3\"\n                  :options=\"cascaderData\"\n                  :props=\"props\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value4\"\n                  :options=\"cascaderData\"\n                  :props=\"props\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n\n        >\n          <el-form-item v-show=\"mapControlVariable.select_by ==='Parameter'\" label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n\n              <el-cascader\n                  v-model=\"mapControlVariable.parameter_by_pollutant_value\"\n                  :options=\"cascaderData\"\n                  :props=\"props\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n\n            </div>\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===false\"\n              label=\"Select Locations\" prop=\"Locations\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--              -->\n            <!--            </el-radio-group>-->\n\n            <el-radio-group v-model=\"mapControlVariable.radioValue\">\n              <el-radio :label=\"1\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='1'?false:true\"\n\n                                :IndexValue=\"1\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"2\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='2'?false:true\"\n                                :IndexValue=\"2\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"3\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='3'?false:true\"\n                                :IndexValue=\"3\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"4\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='4'?false:true\"\n                                :IndexValue=\"4\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n            </el-radio-group>\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===true\"\n              label=\"Select Stations\" prop=\"station\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--            </el-radio-group>-->\n\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val1\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val2\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val3\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val4\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n\n        <el-button class=\"compute-now\" type=\"primary\" size=\"mini\" style=\"width: 100%\" @click=\"computeData\">compute\n        </el-button>\n\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapActions, mapGetters, mapMutations, mapState} from \"vuex\";\nimport OLWKT from \"ol/format/WKT\";\nimport selectLocation from \"../common/selectLocation\";\nimport {threddDataSource, GeoServerHost} from \"../../config\"\nimport TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\nimport {AirPollutionWatchApp} from \"../../utils/dataArchive\";\nimport OlGeoJSON from \"ol/format/GeoJSON\";\nimport {getCenter as ol_extent_getCenter} from \"ol/extent\";\nimport eventHub from \"../../utils/utils\";\n\n// import {defaultParamter} from \"../utils/defaultParamter\"\n// import {ElLoading} from 'element-plus';\nimport rgbLegend from '../../assets/rgblegend.jpg';\nimport {Action} from \"../../store/actionType\";\nimport {Image as ImageLayer} from \"ol/layer\";\nimport ImageWMS from \"ol/source/ImageWMS\";\nimport Style from \"ol/style/Style\";\nimport {Icon} from \"ol/style\";\n\n\nexport default {\n  name: \"mapControlsArchive\",\n  data() {\n    return {\n      props: {\n        expandTrigger: 'hover',\n      },\n      maskCoordinate: null,\n      data__layer__initilize__Recent: false,\n      data__layer__initilize__Archive: false,\n      data__layer__initilize__Forecast: false,\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      options: {\n        data_period: [\n          {\n            value: 'Recent',\n            label: 'Recent',\n          },\n          {\n            value: 'Archive',\n            label: 'Archive',\n          },\n          {\n            value: 'Forecast',\n            label: 'Forecast',\n          }\n        ], select_by: [\n          {\n            value: 'Location',\n            label: 'Location',\n          },\n          {\n            value: 'Parameter',\n            label: 'Parameter',\n          }\n        ], location_by: [\n          {\n            value: 'default_locations',\n            label: 'Major Cities',\n          },\n          {\n            value: 'AOI',\n            label: 'Select on map',\n          }\n        ],\n        default_location: [],\n        ObservationStationOptions: []\n      },\n      PROXY_PREFIX: Action.Base + '/apps/airquality/WMSProxy/',\n    }\n  },\n  watch: {\n    SelectDefaultLocation(newVal, oldVal) {\n      if (newVal) {\n        // add it to vectorLayer\n        let selNewValObj = this.options.default_location.filter(function (x) {\n          return newVal == x.value\n        })[0];\n\n        let Feature = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        Feature.set(\"SelectBy\", \"Location\");\n        Feature.set(\"LocationBy\", \"default_location\");\n        this.WorkingVectorLayer.getSource().addFeature(Feature);\n\n        var view = this.mapObject.getView();\n        var resolution = view.getResolutionForExtent(Feature.getGeometry().getExtent(), this.mapObject.getSize());\n        var zoom = view.getZoomForResolution(resolution);\n        var center = ol_extent_getCenter(Feature.getGeometry().getExtent());\n        // redraw before zoom\n        setTimeout(function () {\n          view.animate({\n            center: center,\n            zoom: Math.min(zoom, 11)\n          });\n        }, 100);\n\n        var format = new OLWKT();\n        var wktfeaturegeom = format.writeGeometry(Feature.getGeometry(), {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        var geometryType = Feature.getGeometry().getType();\n\n        // let featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n\n        // let featureForExtent = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        // featureExtent = featureExtent.getGeometry().getExtent();\n\n        this.mapControlVariable.location_by_wktValue = wktfeaturegeom;\n        this.mapControlVariable.location_by_geometryType = geometryType;\n        this.mapControlVariable.location_by_default_level_value = selNewValObj.label;\n\n      } else {\n        this.mapControlVariable.location_by_wktValue = '';\n        this.mapControlVariable.location_by_geometryType = '';\n        this.mapControlVariable.location_by_default_level_value = '';\n      }\n\n      if (oldVal) {\n        // remove it from vector layer\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Location\" && f.get(\"LocationBy\") == \"default_location\" && f.get(\"id\") == oldVal) {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n      }\n    },\n    SelectLocationBy() {\n      this.mapControlVariable.default_location = '';\n    },\n    async SelectByOption() {\n\n      if (this.mapControlVariable.select_by == \"Location\") {\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"default_location\") {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n\n        // this.mapControlVariable.parameter_by_pollutant_value = '';\n\n        //remove the layers which are on select by parameter\n        this.SetLayerOfSelectByParameterLayer(false);\n\n        let kk = this.getStationInfoObject(11);\n        await this.AddLayerToLayerList(kk);\n\n        let jj = this.getStationInfoObject(12);\n        await this.AddLayerToLayerList(jj);\n\n        this.mapControlVariable.location_by = 'default_locations';\n        this.mapControlVariable.default_location = 1;\n\n        this.mapControlVariable.location_by_pollutant_value1 = [1, 11, 2];\n        this.mapControlVariable.location_by_pollutant_value2 = [1, 11, 5];\n        this.mapControlVariable.location_by_pollutant_value3 = [1, 12, 6];\n        this.mapControlVariable.location_by_pollutant_value4 = [1, 12, 7];\n\n      } else {\n\n        //clear Location\n        this.mapControlVariable.location_by_pollutant_value1 = [];\n        this.mapControlVariable.location_by_pollutant_value2 = [];\n        this.mapControlVariable.location_by_pollutant_value3 = [];\n        this.mapControlVariable.location_by_pollutant_value4 = [];\n\n        this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n\n        // no single default location on parameter\n        this.mapControlVariable.default_location = '';\n\n        this.SetLayerOfSelectByParameterLayer(true);\n      }\n\n      this.ObservationStationOption();\n\n    },\n    async SelectByParameterPollutant(newPollutant, oldPollutant) {\n\n      // set Layer off of old pollutant\n      if (oldPollutant) {\n        if (oldPollutant.length) {\n          let kk = this.getStationInfoObject(oldPollutant[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n\n      // Get layer Object\n      let kk = this.getStationInfoObject(newPollutant[1]);\n\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        await this.AddLayerToLayerList(kk);\n        console.log(\"------******-------\")\n        if (kk.hasData) {\n          let layer = this.getBindedLayer(kk.layerId);\n          layer.setVisibleDivBind(true);\n        }\n\n        //\n\n        // stations data\n        if (kk.stationData) {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = true;\n          this.options.ObservationStationOptions = kk.childrenData;\n\n          this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = kk.defaultStation[0];\n          this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = kk.defaultStation[1];\n          this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = kk.defaultStation[2];\n          this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = kk.defaultStation[3];\n\n        } else {\n          // Data other than station\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = false;\n          this.options.ObservationStationOptions = [];\n\n          // set here default location\n          this.mapControlVariable.parameter_by_location__1.location_by = 'default_locations';\n          this.mapControlVariable.parameter_by_location__2.location_by = 'default_locations';\n          this.mapControlVariable.parameter_by_location__3.location_by = 'default_locations';\n          this.mapControlVariable.parameter_by_location__4.location_by = 'default_locations';\n\n          this.mapControlVariable.parameter_by_location__1.default_location = 1;\n          this.mapControlVariable.parameter_by_location__2.default_location = 2;\n          this.mapControlVariable.parameter_by_location__3.default_location = 3;\n          this.mapControlVariable.parameter_by_location__4.default_location = 4;\n\n        }\n      }\n    },\n    location_by_pollutant_value1(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value2(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value3(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value4(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n  },\n  components: {selectLocation},\n  methods: {\n    ...mapActions([\"getCityData\", \"PostSlicedFromCatalog\", \"getGeoJsonForOneSatation\", \"getDefaultGroundObservation\", \"PostCreateGIFMapImage\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\", \"addLegend\", \"removeLegend\"]),\n    featureSelectorDeleteUpdate() {\n      var wktfeaturegeom, geometryType;\n      if (this.selectInteraction) {\n        if (this.SelectByOption == 'Location') {\n          if (this.selectInteraction.getFeatures().getLength()) {\n\n            var features = this.selectInteraction.getFeatures();\n            features.forEach(function (f) {\n              var format = new OLWKT();\n              wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n                dataProjection: 'EPSG:4326',\n                featureProjection: 'EPSG:3857'\n              });\n              geometryType = f.getGeometry().getType();\n            });\n            // let Param = {\n            //   geometryType: geometryType,\n            //   wkt: wktfeaturegeom,\n            // };\n            if (this.mapControlVariable.location_by == 'AOI') {\n              this.mapControlVariable.is_AOI_Feature_selected = true;\n              this.mapControlVariable.location_by_wktValue = wktfeaturegeom;\n              this.mapControlVariable.location_by_geometryType = geometryType;\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: \"To select this feature you need to select 'Select on map' from drop down menu\",\n                type: 'warning'\n              });\n              this.selectInteraction.getFeatures().clear();\n              this.mapControlVariable.is_AOI_Feature_selected = false;\n              this.mapControlVariable.location_by_wktValue = '';\n              this.mapControlVariable.location_by_geometryType = '';\n            }\n          } else {\n            if (this.mapControlVariable.location_by == 'AOI') {\n              this.mapControlVariable.is_AOI_Feature_selected = false;\n              this.mapControlVariable.location_by_wktValue = '';\n              this.mapControlVariable.location_by_geometryType = '';\n            }\n          }\n        }\n      }\n    },\n    CatalogSlicingParam(url, startDate, endDate) {\n      let param = {\n        url: url,\n        data_ext: '.nc',\n        startDate: startDate,\n        endDate: endDate,\n      }\n      return param\n    },\n\n    async addRasterLayerToMap(kk) {\n      let slicingParam, responseData, resPonseParsed, wmsList = [], isTrue;\n      let catalogURl = threddDataSource + kk.catalog;\n      slicingParam = this.CatalogSlicingParam(catalogURl, kk.getStartDate(), kk.getEndDate());\n      responseData = await this.PostSlicedFromCatalog(slicingParam);\n      resPonseParsed = responseData;\n      isTrue = resPonseParsed.data.length;\n      kk.hasData = isTrue\n\n      if (isTrue) {\n        resPonseParsed.data.forEach(function (fileName) {\n          let url = catalogURl.replace(\"/catalog/\", \"/wms/\").replace(\"catalog.xml\", fileName);\n          wmsList.push(url)\n        });\n        var Newlayer;\n        if (kk.isTimeDimensionLayer) {\n          if (kk.useSLD) {\n            let SLD = kk.SLD.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n            let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&SLD_BODY=';\n            let legendWMS = '';\n            if (!kk.legendPath) {\n              if (Array.isArray(wmsList)) {\n                legendWMS = wmsList[0] + LegendParameter + encodeURIComponent(SLD).toString();\n              } else {\n                legendWMS = wmsList + LegendParameter + encodeURIComponent(SLD).toString();\n              }\n            } else {\n              legendWMS = kk.legendPath\n            }\n            console.log(legendWMS);\n\n            let OLEXTLegendObject = {\n              id: kk.threddLayerProp.id,\n              title: kk.threddLayerProp.title,\n              typeGeom: 'Point',\n              style: new Style({\n                image: new Icon({\n                  src: kk.threddLayerProp.legendPath,\n                  crossOrigin: 'anonymous', // Enable print\n                })\n              }),\n              size: [60, 30]\n            };\n\n            let timedimensionTilePara = kk.threddLayerProp;\n            timedimensionTilePara.source.params.SLD_BODY = SLD;\n            timedimensionTilePara.source.url = wmsList;\n            timedimensionTilePara.legendPath = rgbLegend;\n            timedimensionTilePara.wmsList = wmsList;\n            timedimensionTilePara.changeWMSProxy = true;\n            // timedimensionTilePara.showAnimationButton = true;\n            // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n            timedimensionTilePara.OLEXTLegendObject = OLEXTLegendObject;\n\n            console.log(\"...--------><><><....\");\n            console.log(timedimensionTilePara);\n\n            timedimensionTilePara.animationDownloadFunction = async (obj) => {\n              let isProcessing = obj.getIsProcessing();\n\n\n              if (!isProcessing) {\n                console.log(\"test\");\n                console.log(isProcessing);\n                obj.setIsProcessing(true);\n                let fps = obj.fpsInput.value;\n                let propList = [];\n                let prop = obj.getProperties();\n                obj.AllDateAndTimeList.forEach((abcT) => {\n                  let currentFormat = obj.aTime.getAttribute(\"format\");\n                  let timeButtom_text = undefined;\n\n                  if (currentFormat === 'ISO') {\n                    timeButtom_text = abcT.dateisoFormatForLevel;\n                  } else {\n                    timeButtom_text = abcT.localDateTime;\n                  }\n                  propList.push({\n                    ...prop.animationPlot,\n                    wms_url: abcT.WMSURL.replace('https', 'http'),\n                    wms_layer: prop.source.params.LAYERS,\n                    wms_time: abcT.dateisoFormat,\n                    wms_style: prop.source.params.STYLES,\n                    wms_NUMCOLORBANDS: prop.source.NUMCOLORBANDS,\n                    ColorScale: prop.source.COLORSCALERANGE,\n                    bottom_text: timeButtom_text,\n                    RGB: prop.RGBComposite\n                  })\n                });\n\n                let collectProp = {layersDetail: propList, fps: fps}\n                let response = await this.PostCreateGIFMapImage(collectProp);\n                let DownLoadURL = Action.Base + '/' + Action.GetAnimationImage + \"?ImageName=\" + response.Image + \"&gif=1\";\n                this.AirPollutionWatchApp.forceDownload(DownLoadURL, prop.title + '.gif');\n                obj.setIsProcessing(false);\n\n              } else {\n\n                this.$notify({\n                  title: 'Warning',\n                  message: 'Please wait for few second animation is being gererated by the system',\n                  type: 'warning'\n                });\n\n              }\n            };\n            Newlayer = new TimeDimensionTile(timedimensionTilePara);\n\n            let AddRemoveLegendFunction = function () {\n              if (this.getProperties().visible) {\n                that.addLegend(this.getProperties().OLEXTLegendObject);\n              } else {\n                that.removeLegend(this.getProperties().OLEXTLegendObject);\n              }\n            };\n\n            let that = this;\n            Newlayer.on('change:visible', AddRemoveLegendFunction);\n\n            await Newlayer.init().then(() => {\n              this.mapObject.addThreddsLayer(Newlayer);\n              let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true, 'withOpacityChange');\n              l5.setVisibleDivBind(kk.VisibleDivBind);\n              let properties = Newlayer.getProperties()\n              if (properties.mask) {\n                console.log(properties)\n                if (properties.CropOrMask == 'crop') {\n                  Newlayer.setCrop(this.maskCoordinate);\n                } else {\n                  Newlayer.setMask(this.maskCoordinate);\n                }\n              }\n              this.appendTimeSeriesLayerCollection(l5);\n              // myApp.AllBindedLayersList.push(l5);\n            });\n          } else {\n            let timedimensionTilePara = kk.threddLayerProp;\n            let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&LAYERS=' + timedimensionTilePara.source.params.LAYERS + '&COLORSCALERANGE=' + timedimensionTilePara.source.params.COLORSCALERANGE + '&STYLES=' + timedimensionTilePara.source.params.STYLES;\n            let legendWMS = '';\n            if (!kk.legendPath) {\n              if (Array.isArray(wmsList)) {\n                legendWMS = wmsList[0] + LegendParameter;\n              } else {\n                legendWMS = wmsList + LegendParameter;\n              }\n            } else {\n              legendWMS = kk.legendPath\n            }\n            timedimensionTilePara.source.url = wmsList;\n            timedimensionTilePara.legendPath = legendWMS;\n            timedimensionTilePara.wmsList = wmsList;\n            timedimensionTilePara.changeWMSProxy = true;\n            // timedimensionTilePara.showAnimationButton = true;\n            // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n            let le = {\n              id: timedimensionTilePara.id,\n              title: timedimensionTilePara.title,\n              // typeGeom: 'MultiPolygon',\n              typeGeom: 'Point',\n              style: new Style({\n                image: new Icon({\n                  src: legendWMS,\n                  crossOrigin: 'anonymous', // Enable print\n                  // scale:[0.9,0.15]\n                })\n              }),\n              size: [60, 250]\n              // margin:3,\n              // className:'biglegend'\n            };\n\n            timedimensionTilePara.OLEXTLegendObject = le;\n\n            timedimensionTilePara.animationDownloadFunction = async (obj) => {\n              let isProcessing = obj.getIsProcessing();\n\n\n              if (!isProcessing) {\n                console.log(\"test\");\n                console.log(isProcessing);\n                obj.setIsProcessing(true);\n                let fps = obj.fpsInput.value;\n                let propList = [];\n                let prop = obj.getProperties();\n                console.log(prop);\n                obj.AllDateAndTimeList.forEach((abcT) => {\n                  let currentFormat = obj.aTime.getAttribute(\"format\");\n                  let timeButtom_text = undefined;\n\n                  if (currentFormat === 'ISO') {\n                    timeButtom_text = abcT.dateisoFormatForLevel;\n                  } else {\n                    timeButtom_text = abcT.localDateTime;\n                  }\n                  propList.push({\n                    ...prop.animationPlot,\n                    wms_url: abcT.WMSURL.replace('https', 'http'),\n                    wms_layer: prop.source.params.LAYERS,\n                    wms_time: abcT.dateisoFormat,\n                    wms_style: prop.source.params.STYLES,\n                    wms_NUMCOLORBANDS: prop.source.params.NUMCOLORBANDS,\n                    ColorScale: prop.source.params.COLORSCALERANGE,\n                    bottom_text: timeButtom_text,\n                    RGB: prop.RGBComposite\n                  })\n                });\n\n                let collectProp = {layersDetail: propList, fps: fps}\n                let response = await this.PostCreateGIFMapImage(collectProp);\n                let DownLoadURL = Action.Base + '/' + Action.GetAnimationImage + \"?ImageName=\" + response.Image + \"&gif=1\";\n                this.AirPollutionWatchApp.forceDownload(DownLoadURL, prop.title + '.gif');\n                obj.setIsProcessing(false);\n\n              } else {\n\n                this.$notify({\n                  title: 'Warning',\n                  message: 'Please wait for few second animation is being gererated by the system',\n                  type: 'warning'\n                });\n\n              }\n            };\n\n            Newlayer = new TimeDimensionTile(timedimensionTilePara);\n            let AddRemoveLegendFunction = function () {\n              if (this.getProperties().visible) {\n                that.addLegend(this.getProperties().OLEXTLegendObject);\n              } else {\n                that.removeLegend(this.getProperties().OLEXTLegendObject);\n              }\n            };\n\n            let that = this;\n            Newlayer.on('change:visible', AddRemoveLegendFunction);\n            await Newlayer.init().then(() => {\n              this.mapObject.addThreddsLayer(Newlayer);\n              // myApp.map.addThreddsLayer(val);\n              let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true);\n              l5.setVisibleDivBind(kk.VisibleDivBind);\n              let properties = Newlayer.getProperties()\n              if (properties.mask) {\n                if (properties.CropOrMask == 'crop') {\n                  Newlayer.setCrop(this.maskCoordinate);\n                } else {\n                  Newlayer.setMask(this.maskCoordinate);\n                }\n              }\n              this.appendTimeSeriesLayerCollection(l5);\n              // myApp.AllBindedLayersList.push(l5);\n            });\n\n          }\n        }\n      }\n\n    },\n\n    computeData() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n          let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            if (this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val4) {\n              eventHub.$emit('getVisualization');\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select station on all dropdown menu.',\n                type: 'warning'\n              });\n            }\n          } else {\n            if (this.mapControlVariable.parameter_by_location__1.wktValue && this.mapControlVariable.parameter_by_location__2.wktValue && this.mapControlVariable.parameter_by_location__3.wktValue && this.mapControlVariable.parameter_by_location__4.wktValue) {\n              eventHub.$emit('getVisualization');\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select locations on all dropdown menu.',\n                type: 'warning'\n              });\n            }\n          }\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please Select a pollutant',\n            type: 'warning'\n          });\n        }\n      } else {\n        if (this.location_by_pollutant_value1.length > 0 && this.location_by_pollutant_value2.length > 0 && this.location_by_pollutant_value3.length > 0 && this.location_by_pollutant_value4.length > 0) {\n          eventHub.$emit('getVisualization');\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please select pollutants on all dropdown menu.',\n            type: 'warning'\n          });\n        }\n      }\n    },\n    ObservationStationOption() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.children) {\n              delete obj2.children;\n            }\n          });\n        });\n      } else {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.childrenData) {\n              obj2.children = obj2.childrenData;\n            }\n          });\n        });\n      }\n    },\n    getStationInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    SetLayerOfSelectByParameterLayer(IsViz) {\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n        let layer = this.getBindedLayer(kk.layerId);\n        if (IsViz) {\n          layer.setVisibleDivBind(IsViz);\n        } else {\n          layer.setVisibleDivBind(IsViz);\n        }\n      }\n    },\n    setLayerVisible(layerId, IsViz) {\n      let layer = this.getBindedLayer(layerId);\n      if (IsViz) {\n        layer.setVisible(IsViz);\n      } else {\n        layer.setVisibleDivBind(IsViz);\n      }\n    },\n    async onChangePollutantsOnSelectByLocation(newVal, oldVal) {\n\n      if (newVal.length) {\n        let kk = this.getStationInfoObject(newVal[1]);\n        if (Object.keys(kk).length != 0) {\n          await this.AddLayerToLayerList(kk);\n          let layer = this.getBindedLayer(kk.layerId);\n          layer.setVisibleDivBind(true);\n        }\n      }\n      if (oldVal.length) {\n        let count = 0;\n        if (this.location_by_pollutant_value1.length) {\n          if (this.location_by_pollutant_value1[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value2.length) {\n          if (this.location_by_pollutant_value2[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value3.length) {\n          if (this.location_by_pollutant_value3[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value4.length) {\n          if (this.location_by_pollutant_value4[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (count === 0) {\n          let kk = this.getStationInfoObject(oldVal[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n      console.log(newVal);\n      console.log(oldVal);\n    },\n    async AddLayerToLayerList(kk) {\n\n      if (kk.layerProperties.initilize == false) {\n        kk.layerProperties.initilize = true;\n        if (kk.stationData == true) {\n          let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n\n          let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n          let lyr = kk.layerProperties.layer;\n          let le = {\n            id: kk.layerProperties.id,\n            title: kk.layerProperties.title,\n            typeGeom: 'Point',\n            style: new Style({\n              image: new Icon({\n                src: WMSURLWithRequestParameter + lyr,\n                crossOrigin: 'anonymous' // Enable print\n              })\n            }),\n            size: [60, 30]\n          };\n          let layerObj = new ImageLayer({\n            id: kk.layerProperties.id,\n            title: kk.layerProperties.title,\n            visible: kk.layerProperties.visible,\n            legendPath: WMSURLWithRequestParameter + lyr,\n            zIndex: kk.layerProperties.zIndex,\n            OLEXTLegendObject: le,\n            opacity: kk.layerProperties.opacity,\n            source: new ImageWMS({\n              url: GeoServerWMSURL,\n              crossOrigin: 'anonymous',\n              params: {'LAYERS': lyr},\n              serverType: 'geoserver',\n            }),\n          });\n          let AddRemoveLegendFunction = function () {\n            if (this.getProperties().visible) {\n              that.addLegend(this.getProperties().OLEXTLegendObject);\n            } else {\n              that.removeLegend(this.getProperties().OLEXTLegendObject);\n            }\n          };\n          let that = this;\n          layerObj.on('change:visible', AddRemoveLegendFunction);\n\n          this.mapObject.addLayer(layerObj);\n          let l5 = new LayerSwitcher(\".layerCollection\", layerObj, false, false);\n          this.appendTimeSeriesLayerCollection(l5);\n          l5.setVisibleDivBind(kk.layerProperties.visible);\n          let sd = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n          let ed = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.endDate);\n          let regionOrCountry = 0;\n          let Param = '?ModelClass=' + kk.ModelClass + \"&ModelClassDataList=\" + kk.ModelClassDataList + '&typeName=' + kk.typeName + '&StartDate=' + sd + '&EndDate=' + ed + '&rid=' + regionOrCountry\n          let dataResponse = await this.getGeoJsonForOneSatation(Param);\n          kk.childrenData = dataResponse.data;\n        } else {\n          console.log(\"before-----\");\n          await this.addRasterLayerToMap(kk.layerProperties);\n          console.log(\"after-----\");\n        }\n      }\n    },\n    InitilizeStationDataOnLoad() {\n      this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n        obj1.children.forEach((obj2) => {\n          if (obj2.stationData) {\n            this.AddLayerToLayerList(obj2);\n          }\n        });\n      });\n    },\n  },\n  computed: {\n    ...mapState([\"selectInteraction\", \"mapObject\", \"TimeSeriesLayerCollection\", \"WorkingVectorLayer\", \"mapControlVariable\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n    cascaderData() {\n      return this.AirPollutionWatchApp.cascaderObj;\n    },\n    SelectDefaultLocation() {\n      return this.mapControlVariable.default_location;\n    },\n    SelectLocationBy() {\n      return this.mapControlVariable.location_by;\n    },\n    SelectByOption() {\n      return this.mapControlVariable.select_by;\n    },\n    SelectDataPeriod() {\n      return this.mapControlVariable.data_period;\n    },\n    SelectByParameterPollutant() {\n      return this.mapControlVariable.parameter_by_pollutant_value;\n    },\n    location_by_pollutant_value1() {\n      return this.mapControlVariable.location_by_pollutant_value1;\n    },\n    location_by_pollutant_value2() {\n      return this.mapControlVariable.location_by_pollutant_value2;\n    },\n    location_by_pollutant_value3() {\n      return this.mapControlVariable.location_by_pollutant_value3;\n    },\n    location_by_pollutant_value4() {\n      return this.mapControlVariable.location_by_pollutant_value4;\n    },\n  },\n  async mounted() {\n\n    setTimeout(() => {\n      this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n    }, 500);\n    this.addRasterLayerToMap(this.AirPollutionWatchApp.TrueColorImage);\n\n    setTimeout(() => {\n      this.selectInteraction.on('select', () => {\n        this.featureSelectorDeleteUpdate();\n      });\n    }, 2000);\n    // this.addLayersToMap();\n    //\n    // console.log(\"all complete\");\n    //\n    // this.mapControlVariable.select_by = 'Parameter';\n    // this.mapControlVariable.parameter_by_pollutant_value = [1, 13];\n\n    setTimeout(() => {\n      this.computeData();\n      this.InitilizeStationDataOnLoad();\n    }, 3000);\n\n  },\n  async created() {\n    let sdt = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n    let edt = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.endDate);\n\n    let defalultSt = await this.getDefaultGroundObservation({\n      typeName: 'pm',\n      startDate: sdt,\n      endDate: edt,\n    });\n\n    this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n      obj1.children.forEach((obj2) => {\n        if (obj2.ModelClass == 'UsEmbassyPm') {\n          obj2.defaultStation = defalultSt.defaultStation\n        }\n      })\n    });\n\n\n    let defaultLocation = await this.getCityData();\n    this.options.default_location = defaultLocation.data;\n  },\n  deactivated() {\n\n  }\n\n}\n</script>\n\n<style scoped>\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.pollutant-cascader:not(:last-child) {\n  padding-bottom: 10px;\n}\n\n.body-container {\n  height: calc(100% - 50px);\n}\n\nbutton.el-button.el-button--primary.el-button--mini.compute-now, button.el-button.el-button--primary.el-button--mini.compute-now:focus, button.el-button.el-button--primary.el-button--mini.compute-now:hover {\n  background-color: #66b1ff;\n  border-color: #66b1ff;\n}\n\n</style>","import { render } from \"./mapControlsArchive.vue?vue&type=template&id=7e71a95d&scoped=true\"\nimport script from \"./mapControlsArchive.vue?vue&type=script&lang=js\"\nexport * from \"./mapControlsArchive.vue?vue&type=script&lang=js\"\n\nimport \"./mapControlsArchive.vue?vue&type=style&index=0&id=7e71a95d&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7e71a95d\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div id=\"map-container2\" ref=\"LayerSelectorDropdown\">\n    </div>\n    <!--    <div id=\"layerSwitcherDiv\" class=\"ol-unselectable ol-control\" @click=\"LayerSwitcherClick()\">-->\n    <!--      <button>-->\n    <!--        <img src=\"@/assets/layers.svg\" style=\"height: 20px;width: 20px;\">-->\n    <!--      </button>-->\n    <!--    </div>-->\n\n    <!--    <el-drawer-->\n    <!--        title=\"Layers\"-->\n    <!--        v-model=\"drawer\"-->\n    <!--        custom-class=\"drawerCustomCSS\"-->\n    <!--        :append-to-body=\"drawerAppendToBody\"-->\n    <!--        :modal=\"false\"-->\n    <!--        :modal-class=\"'drawerForLayersList'\"-->\n    <!--    >-->\n    <!--      <span>-->\n    <!--        <div class=\"layerCollection\"></div>-->\n    <!--          </span>-->\n    <!--    </el-drawer>-->\n\n    <PrintMap></PrintMap>\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\n// import Control from \"ol/control/Control\"\n// import OSM from \"ol/source/OSM\";\nimport XYZ from 'ol/source/XYZ';\n// import {Image as ImageLayer, Tile as TileLayer} from 'ol/layer';\nimport {Tile as TileLayer} from 'ol/layer';\n// import TileWMS from \"ol/source/TileWMS\";\n// import ImageWMS from 'ol/source/ImageWMS';\nimport View from \"ol/View\";\nimport {dataSelect} from \"../../utils/data\";\nimport eventHub from \"../../utils/utils\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import EDALSLD from 'ol-plus/sld/EDALSLD';\n// import {ThreddsServer} from '../config';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n// import {lineString, lineDistance, area as turfArea,polygon as turfPolygon, length as turfLength} from '@turf/turf';\nimport {getArea, getLength,} from 'ol/sphere';\nimport LineString from 'ol/geom/LineString';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n\n// import {MajorBasinExtent, BasinExtent, mbasin, dataSelect, WMSSLD, legendImage} from \"../utils/data\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import {ThreddsServer} from \"../utils/config\";\n\n\n// import 'ol-ext/control/Search.css';\nimport SearchNominatim from 'ol-ext/control/SearchNominatim';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nimport Text from \"ol/style/Text\";\nimport {Icon} from 'ol/style';\nimport {toSize} from 'ol/size';\nimport ImageIcon from '../../assets/markers_default.png';\nimport {getCenter as ol_extent_getCenter} from 'ol/extent';\nimport GeoJSON from \"ol/format/GeoJSON\";\n// import Legend from \"ol-ext/legend/Legend\";\nimport Legend from \"../../utils/customLegend\"\nimport LegendControl from \"ol-ext/control/Legend\";\nimport CanvasScaleLine from \"ol-ext/control/CanvasScaleLine\";\nimport PrintDialog from \"ol-ext/control/PrintDialog\";\nimport OLPolygon from 'ol/geom/Polygon';\nimport OlSelect from 'ol/interaction/Select';\nimport OlDraw from 'ol/interaction/Draw';\nimport OlExtTextButton from 'ol-ext/control/TextButton';\nimport Bar from 'ol-ext/control/Bar';\nimport OlExtButton from 'ol-ext/control/Button';\nimport OlExtToggle from 'ol-ext/control/Toggle';\n// import 'ol-ext/control/Bar.css'\nimport CircleStyle from \"ol/style/Circle\";\n// import ScaleLine from \"ol/control/ScaleLine\";\nimport CanvasTitle from \"ol-ext/control/CanvasTitle\";\nimport {defaults} from \"ol/control\";\nimport {saveAs} from 'file-saver';\nimport {jsPDF} from \"jspdf\";\nimport {mapMutations, mapState} from 'vuex';\nimport PrintMap from \"../common/PrintMap\";\n// import {GeoServerHost} from \"../config\";\n\nexport default {\n  name: \"mapComponentArchive\",\n  components: {PrintMap},\n  data() {\n    return {\n      // drawerAppendToBody: true,\n      mapObj: '',\n      HighLightedLayer: '',\n      view: '',\n      mapObject: '',\n      MajorBasin: '',\n      AllLayers: '',\n      selectedFilesOnAYear: [],\n      // drawer: true,\n    }\n  },\n  created() {\n    this.mapControlVariable.LegendObject = new Legend({\n      title: 'Legend',\n      margin: 3,\n      // this will be used for the text\n      size:[60,30]\n      // size:[200,50]\n      // items: legendItems\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSelectedLayerObj\", \"appendTimeSeriesLayerCollection\", \"setSelectInteraction\", \"setMapObject\", \"setWorkingVectorLayer\",\"addLegend\", \"removeLegend\"]),\n    mapInitilization() {\n      // let osm = new TileLayer({\n      //   source: new OSM({attributions: [],}),\n      //   // visible:false\n      // });\n\n      let esri_world_topomap = new TileLayer({\n        visible: true,\n        zIndex: 1,\n        source: new XYZ({\n          attributions: [],\n          url:\n              'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n              'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n          crossOrigin: \"Anonymous\"\n        }),\n      });\n\n      let view = new View({\n        center: [9388155.512006583, 3291367.8109067543],\n        zoom: 4,\n         extent: [6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793]\n      });\n      // let ScaleControl = new ScaleLine({\n      //   units: 'metric'\n      // });\n      //\n      var map = new Map({\n        layers: [],\n        // target: this.$refs['map-root'],\n        renderer: 'canvas',\n        target: 'map-container2',\n        controls: defaults({\n          attribution: false\n        }).extend([]),\n        view: view,\n      });\n      // map.addLayer(osm);\n      map.addLayer(esri_world_topomap);\n      this.mapObject = map;\n      window.mapObject = map;\n      this.view = view;\n\n      // this.mapObject.addControl(\n      //     new Control({\n      //       element: document.getElementById('layerSwitcherDiv')\n      //     })\n      // );\n      map.getView().fit([6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793], map.getView());\n      this.setMapObject(this.mapObject);\n    },\n    legendObjectCollection() {\n      let legendObjectEnabled = [];\n      this.TimeSeriesLayerCollection.forEach(function (layerObj) {\n        let Properties = layerObj.getProperties();\n        console.log(Properties.legendPath);\n        let lObj = {\n          title: Properties.title,\n          // typeGeom: 'Point',\n          style: new Style({\n            image: new Icon({\n              src: Properties.legendPath,\n              crossOrigin: 'anonymous' // Enable print\n            })\n          })\n        };\n        legendObjectEnabled.push(lObj)\n      });\n      return legendObjectEnabled;\n    },\n    addGeoCodingAndInteractionBar() {\n      var map = this.mapObject;\n\n// Set the control grid reference\n      var search = new SearchNominatim({\n        polygon: true,\n        reverse: false,\n        position: true,\t// Search, with priority to geo position,\n        // maxHistory: -1,\n        className: 'OSMBasedGeocodingEmissionPage',\n      });\n\n// search.set('copy', false)\n\n      var GeoCodingAndDrawLayer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 999\n      });\n\n      this.setWorkingVectorLayer(GeoCodingAndDrawLayer);\n\n      map.addLayer(GeoCodingAndDrawLayer);\n\n      map.addControl(search);\n\n\n// Select feature when click on the reference index\n      search.on('select', function (e) {\n        // console.log(e);\n        // GeoCodingAndDrawLayer.getSource().clear();\n        removePreviousSearchFeature();\n        // Check if we get a geojson to describe the search\n        if (e.search.geojson) {\n          var format = new GeoJSON();\n          var f = format.readFeature(e.search.geojson, {\n            dataProjection: \"EPSG:4326\",\n            featureProjection: map.getView().getProjection()\n          });\n          delete e.search.geojson;\n          f.setProperties(e.search);\n          GeoCodingAndDrawLayer.getSource().addFeature(f);\n          var view = map.getView();\n          var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n          var zoom = view.getZoomForResolution(resolution);\n          var center = ol_extent_getCenter(f.getGeometry().getExtent());\n          // redraw before zoom\n          setTimeout(function () {\n            view.animate({\n              center: center,\n              zoom: Math.min(zoom, 16)\n            });\n          }, 100);\n\n        } else {\n          map.getView().animate({\n            center: e.coordinate,\n            zoom: Math.max(map.getView().getZoom(), 16)\n          });\n        }\n        UpDateVectorLayerStyle();\n      });\n\n      // Main control bar\n      var mainbar = new Bar();\n      mainbar.setPosition('top-left');\n      map.addControl(mainbar);\n\n// Edit control bar\n      var editbar = new Bar({\n        toggleOne: true,\t// one control active at the same time\n        group: false\t\t\t// group controls together\n      });\n      mainbar.addControl(editbar);\n\n// Add selection tool:\n//  1- a toggle control with a select interaction\n//  2- an option bar to delete / get information on the selected feature\n      var sbar = new Bar();\n      sbar.addControl(new OlExtButton({\n        html: '<i class=\"fa fa-times\"></i>',\n        title: \"Delete\",\n        handleClick: function () {\n          var features = selectCtrl.getInteraction().getFeatures();\n          if (!features.getLength()) info(\"Select an object first...\");\n          else info(features.getLength() + \" object(s) deleted.\");\n\n          features.forEach(function (f) {\n            console.log(f);\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          });\n          selectCtrl.getInteraction().getFeatures().clear();\n          selectCtrl.getInteraction().dispatchEvent({type: 'select'});\n        }\n      }));\n\n\n      var selectCtrl = new OlExtToggle({\n        html: '<i class=\"fa fa-hand-pointer\"></i>',\n        title: \"Select\",\n        interaction: new OlSelect({\n          hitTolerance: 2,\n          style: new Style({\n            image: new CircleStyle({\n              radius: 5,\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              }),\n            }),\n            stroke: new Stroke({\n              color: [255, 0, 0, 1],\n              opacity: 1,\n              width: 2\n            }),\n            fill: new Fill({\n              color: '#e5e5ff50'\n            })\n            // Commented to only see the lines\n            //,fill: new ol.style.Stroke ({\n            //  color: [155, 155, 155, 0.4]\n            //})\n          }),\n          layers: [GeoCodingAndDrawLayer]\n        }),\n        bar: sbar,\n        autoActivate: true,\n        active: true\n      });\n      this.setSelectInteraction(selectCtrl.getInteraction());\n\n      editbar.addControl(selectCtrl);\n      this.setSelectedLayerObj(selectCtrl.getInteraction());\n// Add editing tools\n      var pedit = new OlExtToggle({\n        html: '<i class=\"fa fa-map-marker-alt\" ></i>',\n        title: 'Point',\n        interaction: new OlDraw({\n          type: 'Point',\n          source: GeoCodingAndDrawLayer.getSource()\n        })\n      });\n      editbar.addControl(pedit);\n      var fedit = new OlExtToggle({\n        html: '<i class=\"fa fa-draw-polygon\" ></i>',\n        title: 'Polygon',\n        interaction: new OlDraw({\n          type: 'Polygon',\n          source: GeoCodingAndDrawLayer.getSource(),\n          // Count inserted points\n          geometryFunction: function (coordinates, geometry) {\n            this.nbpts = coordinates[0].length;\n            if (geometry) geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            else geometry = new OLPolygon(coordinates);\n            return geometry;\n          }\n        }),\n        // Options bar ssociated with the control\n        bar: new Bar({\n          controls: [new OlExtTextButton({\n            html: 'undo',//'<i class=\"fa fa-mail-reply\"></i>',\n            title: \"undo last point\",\n            handleClick: function () {\n              if (fedit.getInteraction().nbpts > 1) fedit.getInteraction().removeLastPoint();\n            }\n          }),\n            new OlExtTextButton({\n              html: 'finish',\n              title: \"finish\",\n              handleClick: function () {\n                // Prevent null objects on finishDrawing\n                if (fedit.getInteraction().nbpts > 3) fedit.getInteraction().finishDrawing();\n              }\n            })\n          ]\n        })\n      });\n      editbar.addControl(fedit);\n\n\n      // fedit.getInteraction().on('drawend', function (e) {\n      //\n      //   console.log(e.feature);\n      //   console.log(e.feature);\n      //\n      //   // GeoCodingAndDrawLayer.getSource().removeFeature(e.feature);\n      //\n      //\n      // });\n\n      fedit.getInteraction().on('drawstart', function () {\n        GeoCodingAndDrawLayer.getSource().once('addfeature', handleAddFeature);\n      });\n\n      function handleAddFeature(evt) {\n        let coordi = evt.feature.getGeometry().getCoordinates();\n\n        const area = getArea(evt.feature.getGeometry());\n        // Sq.Km\n        let outputArea = Math.round((area / 1000000) * 100) / 100;\n        console.log(outputArea);\n\n        let li = new LineString(coordi);\n        const length = getLength(li);\n        // In Km\n        let outputLength = Math.round((length / 1000) * 100) / 100;\n        console.log(outputLength);\n        // GeoCodingAndDrawLayer.getSource().removeFeature(evt.feature);\n      }\n\n// Show info\n      function info(i) {\n        console.log(i);\n        // document.querySelector(\"#info\").innerHTML(i || \"\");\n      }\n\n      function UpDateVectorLayerStyle() {\n        GeoCodingAndDrawLayer.getSource().forEachFeature(function (feature) {\n          let StyleObj = null;\n          if (feature.getProperties().osm_id) {\n            StyleObj = [\n              new Style({\n                stroke: new Stroke({\n                  color: [0, 0, 0, 0],\n                  opacity: 1,\n                  width: 3\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff00'\n                })\n                // Commented to only see the lines\n                //,fill: new ol.style.Stroke ({\n                //  color: [155, 155, 155, 0.4]\n                //})\n              }),\n              // Dash white lines (second style, on the top)\n              new Style({\n                image: new Icon({\n                  anchor: [0.5, 46],\n                  anchorXUnits: 'fraction',\n                  anchorYUnits: 'pixels',\n                  src: ImageIcon,\n                  size: toSize([40, 45]),\n                  // offset:[20,20]\n                }),\n                stroke: new Stroke({\n                  color: [0, 0, 255, 1.0],\n                  opacity: 1,\n                  width: 3,\n                  lineDash: [4, 8, 4, 8]\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff40'\n                })\n              })\n            ];\n\n          } else {\n            StyleObj = new Style({\n              image: new CircleStyle({\n                radius: 5,\n                stroke: new Stroke({\n                  color: [255, 0, 0, 1],\n                  opacity: 1,\n                  width: 2\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff50'\n                }),\n              }),\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              })\n              // Commented to only see the lines\n              //,fill: new ol.style.Stroke ({\n              //  color: [155, 155, 155, 0.4]\n              //})\n            });\n\n          }\n          feature.setStyle(StyleObj);\n\n        });\n      }\n\n      function removePreviousSearchFeature() {\n        var features = GeoCodingAndDrawLayer.getSource().getFeatures();\n        features.forEach(function (f) {\n          if (f.getProperties().osm_id) {\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          }\n        });\n        // console.log(features);\n      }\n\n      console.log(\"second\");\n      eventHub.$emit('runFeatureInteractionCode');\n    },\n    addPrintMapFunctionality() {\n      // Add a custom push button with onToggle function\n      // let that = this;\n      var PrintButton = new OlExtButton({\n        html: '<i class=\"fa fa-print\"></i>',\n        className: \"PrintMap\",\n        title: \"Print map\",\n        handleClick: () => {\n\n          // that.PrintMapComponentData.PrintMapDialogVisible = true;\n          // setTimeout(() => {\n          //   eventHub.$emit('OpenDialogOfPrintAndProxyfy');\n          // }, 500);\n\n        }\n      });\n\n      this.mapObject.addControl(PrintButton);\n    },\n    olExtLegentItem(title, id, legend) {\n      return {\n        id: id,\n        title: title,\n        typeGeom: 'Point',\n        style: new Style({\n          image: new Icon({\n            src: legend,\n            crossOrigin: 'anonymous' // Enable print\n          })\n        })\n      };\n\n    },\n    LayerSwitcherClick() {\n      this.drawer = true;\n    },\n    handleClose(done, e) {\n      console.log(e);\n\n      // this.$confirm('You still have unsaved data, proceed?')\n      //     .then(()=> {\n      //       done();\n      //     })\n      //     .catch(()=> {\n      //     });\n    },\n    olextPrintFunction() {\n      // Add a title control\n      this.mapObject.addControl(new CanvasTitle({\n        title: 'my title',\n        visible: false,\n        style: new Style({text: new Text({font: '20px \"Lucida Grande\",Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif'})})\n      }));\n      // let legendItems=[];\n\n\n      // Add a legend to the print\n      var legendCtrl = new LegendControl({legend: this.mapControlVariable.LegendObject,collapsed:true});\n      this.mapObject.addControl(legendCtrl);\n\n      // Add a ScaleLine control\n      this.mapObject.addControl(new CanvasScaleLine());\n\n      // Print control\n      var printControl = new PrintDialog({ lang: 'en' });\n      printControl.setSize('A4');\n      printControl.setOrientation('landscape');\n      this.mapObject.addControl(printControl);\n\n\n      /* On print > save image file */\n      printControl.on(['print', 'error'], (e) => {\n        // let LegendImageArray = this.legendObjectCollection();\n        // LegendImageArray.forEach(function (ii) {\n        //   console.log(ii);\n        //   legendd.addItem(ii);\n        // });\n        // // legendItems = LegendImageArray;\n        // console.log(LegendImageArray);\n\n        // Print success\n        if (e.image) {\n          if (e.pdf) {\n            // Export pdf using the print info\n            var pdf = new jsPDF({\n              orientation: e.print.orientation,\n              unit: e.print.unit,\n              format: e.print.size\n            });\n            pdf.addImage(e.image, 'JPEG', e.print.position[0], e.print.position[0], e.print.imageWidth, e.print.imageHeight);\n            pdf.save(e.print.legend ? 'legend.pdf' : 'map.pdf');\n          } else {\n            // Save image as file\n            e.canvas.toBlob(function (blob) {\n              var name = (e.print.legend ? 'legend.' : 'map.') + e.imageType.replace('image/', '');\n              saveAs(blob, name);\n            }, e.imageType, e.quality);\n          }\n        } else {\n          console.warn('No canvas to export');\n        }\n      });\n\n    },\n  },\n  computed: {\n    ...mapState([\"TimeSeriesLayerCollection\", \"PrintMapComponentData\", \"mapControlVariable\"]),\n    getInventory() {\n      return dataSelect.Inventory;\n    },\n  },\n\n  beforeMount() {\n  },\n  mounted() {\n    this.mapInitilization();\n    // this.addGeoCoding();\n    this.addGeoCodingAndInteractionBar();\n    // this.addPrintMapFunctionality();\n    this.olextPrintFunction();\n    //\n    // let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n    // let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n    //\n    // let AddRemoveLegendFunction = function () {\n    //\n    //   if (this.getProperties().visible) {\n    //     that.addLegend(this.getProperties().OLEXTLegendObject);\n    //   } else {\n    //     that.removeLegend(this.getProperties().OLEXTLegendObject);\n    //   }\n    // };\n    //\n    //\n    // let le1 = this.olExtLegentItem('Country Outline', 'Country_Outline', WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry')\n    //\n    // // this.drawer = false;\n    // let countryBoundary = new ImageLayer({\n    //   id: 'Country_Outline',\n    //   title: 'Country Outline',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry',\n    //   zIndex: 6,\n    //   OLEXTLegendObject: le1,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_country_boundry'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le2 = this.olExtLegentItem('Province','Province', WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary')\n    //\n    // let provinceBoundary = new ImageLayer({\n    //   id: 'Province',\n    //   title: 'Province',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary',\n    //   zIndex: 5,\n    //   OLEXTLegendObject: le2,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_provincial_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le3 = this.olExtLegentItem('District','District', WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary')\n    //\n    // let DistrictBoundary = new ImageLayer({\n    //   id: 'District',\n    //   title: 'District',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary',\n    //   zIndex: 4,\n    //   OLEXTLegendObject: le3,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_district_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le4 = this.olExtLegentItem('Palika', 'Palika',WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary')\n    //\n    // let PalikaBoundary = new ImageLayer({\n    //   id: 'Palika',\n    //   title: 'Palika',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary',\n    //   zIndex: 3,\n    //   OLEXTLegendObject: le4,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_palika_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let that = this;\n    // countryBoundary.on('change:visible', AddRemoveLegendFunction);\n    // provinceBoundary.on('change:visible', AddRemoveLegendFunction);\n    // DistrictBoundary.on('change:visible', AddRemoveLegendFunction);\n    // PalikaBoundary.on('change:visible', AddRemoveLegendFunction);\n    //\n    // this.mapObject.addLayer(countryBoundary);\n    // this.mapObject.addLayer(provinceBoundary);\n    // this.mapObject.addLayer(DistrictBoundary);\n    // this.mapObject.addLayer(PalikaBoundary);\n    //\n    // let l1 = new LayerSwitcher(\".layerCollection\", countryBoundary, false, false);\n    // let l2 = new LayerSwitcher(\".layerCollection\", provinceBoundary, false, false);\n    // let l3 = new LayerSwitcher(\".layerCollection\", DistrictBoundary, false, false);\n    // let l4 = new LayerSwitcher(\".layerCollection\", PalikaBoundary, false, false);\n    //\n    // l1.setVisible(true);\n    // l2.setVisible(true);\n    // l3.setVisible(true);\n    // l4.setVisible(true);\n    //\n    // this.appendTimeSeriesLayerCollection(l1);\n    // this.appendTimeSeriesLayerCollection(l2);\n    // this.appendTimeSeriesLayerCollection(l3);\n    // this.appendTimeSeriesLayerCollection(l4);\n  },\n}\n</script>\n\n<style>\n#map-container2 {\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n}\n\n#map-container2 .ol-viewport {\n  border-radius: 5px;\n}\n\n#layerSwitcherDiv {\n  right: 0.5em;\n  top: 0.5em;\n  position: absolute;\n}\n\n#layerSwitcherDiv button {\n  line-height: unset;\n  border-radius: 1px;\n}\n\n\n.drawerForLayersList {\n  position: initial !important;\n}\n\n/* OSM Based Geocoding*/\n.ol-search ul li {\n  border-bottom: 1px solid lightgray;\n\n  padding: 10px 5px 10px 5px !important;\n  flex: 1;\n  max-width: 608px;\n  white-space: normal !important;\n  overflow: unset;\n  flex-grow: 1;\n  text-overflow: ellipsis;\n}\n\n.ol-search ul li:last-child {\n  border-bottom: none;\n  border-radius: 0px;\n}\n\n.ol-search ul {\n  list-style: none;\n  cursor: pointer;\n  padding: 0px 5px 0px 5px !important;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  clear: both;\n  cursor: pointer;\n  max-width: 618px;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #fff;\n  font-size: 13px;\n}\n\n.ol-search {\n  z-index: 999;\n}\n\n.ol-search {\n  top: 4.1em;\n  left: 0.5em;\n  /*width: 500px;*/\n}\n\n.ol-search input {\n  width: 600px;\n}\n\n\n.ol-control.ol-bar {\n  left: 3.2em;\n  top: 6em;\n}\n\n.ol-control.ol-bar.ol-top.ol-left, .ol-control.ol-bar.ol-top.ol-right {\n  top: 6.5em;\n  transform: none;\n}\n\n.PrintMap.ol-button.ol-unselectable.ol-control {\n  top: 12em;\n  left: 0.5em;\n}\n\n.LayerDiv {\n  margin-top: 10px;\n}\n\n.withOpacityChange {\n  margin-bottom: 18px;\n}\n\n.ol-scale-line {\n  right: 0;\n  left: auto;\n  bottom: 2em;\n}\n</style>","import Style from \"ol/style/Style\";\nimport RegularShape from \"ol/style/RegularShape\";\nimport Fill from \"ol/style/Fill\";\nimport Stroke from \"ol/style/Stroke\";\nimport Text from \"ol/style/Text\";\nimport {TethysAppName, DefaultMaskWMS, DefaultPlotInfo, TethysAPIAppName} from \"../config\";\n\n\nvar myApp = {};\n// First need to initilize\nvar filterCoodrdinate = {};\n\n\nmyApp.startDate = new Date();\nmyApp.startDate.setDate(myApp.startDate.getDate() - 1);\nmyApp.endDate = new Date();\n\nmyApp.startDateArchive = new Date();\nmyApp.startDateArchive.setDate(myApp.startDateArchive.getDate() - 1);\nmyApp.endDateArchive = new Date();\n\nmyApp.forecastDate = new Date();\nmyApp.forecastDate.setDate(myApp.forecastDate.getDate() - 1);\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\n\n\nmyApp.APICollection = {\n    layerData: {\n        Aeronet: '/apps/' + TethysAPIAppName + '/aeronetaodpm/',\n        USEmbassyAOD: '/apps/' + TethysAPIAppName + '/usembassypm/',\n        getGeoJSONofStations: '/apps/' + TethysAPIAppName + '/getGeoJSONofStations/',\n        getGeoJsonForOneSatation: '/apps/' + TethysAPIAppName + '/getGeoJsonForOneSatation/',\n        getAllStationsID: '/apps/' + TethysAPIAppName + '/getAllStationsID/',\n    },\n    api: {\n        commonAPI: '/apps/' + TethysAPIAppName + '/getData/',\n        RegionGeojson: '/apps/' + TethysAPIAppName + '/geojsonregion/',\n        AOIPolygon: '/apps/' + TethysAPIAppName + '/aoipolygon/',\n        GetMapImage: '/apps/' + TethysAPIAppName + '/getmapimage/',\n        GetImage: '/apps/' + TethysAPIAppName + '/downloadImage/',\n        SlicedFromCatalog: '/apps/' + TethysAPIAppName + '/slicedfromcatalog/'\n    }\n};\n\n\nmyApp.constants = {\n    recent: {\n        layerId: {\n            TerraModisTrueColor: 'Recent__TerraModisTrueColor',\n            PM_AeronetAOD: 'Recent__aeronet',\n            PM_usembassy: 'Recent__usembassy',\n            GEOS_PM2p5: 'Recent__GEOS_PM2p5',\n            TerraModisAOD: 'Recent__TerraModisAOD',\n            O3_GEOS: 'Recent__GEOS_O3',\n            O3_usembassy: 'Recent__usembassy_O3',\n            SO2_GEOS: 'Recent__GEOS_SO2',\n            NO2_GEOS: 'Recent__GEOS_NO2',\n            CO_GEOS: 'Recent__GEOS_CO',\n        }\n    },\n    archive: {\n        layerId: {\n            TerraModisTrueColor: 'Archive__TerraModisTrueColor',\n            GEOS_PM2p5: 'Archive__GEOS_PM2p5',\n            TerraModisAOD: 'Archive__TerraModisAOD',\n            PM_AeronetAOD: 'Archive__aeronet',\n            PM_usembassy: 'Archive__usembassy',\n            O3_usembassy: 'Archive__usembassy_O3',\n            O3_TROPOMI: 'Archive__TROPOMI_O3',\n            O3_GEOS: 'Archive__GEOS_O3',\n            SO2_TROPOMI: 'Archive__TROPOMI_SO2',\n            SO2_GEOS: 'Archive__GEOS_SO2',\n            NO2_TROPOMI: 'Archive__TROPOMI_NO2',\n            NO2_GEOS: 'Archive__GEOS_NO2',\n            CO_TROPOMI: 'Archive__TROPOMI_CO',\n            CO_GEOS: 'Archive__GEOS_CO',\n        }\n    },\n    forecast: {\n        layerId: {\n            GEOS_PM2p5: 'Forecast__GEOS_PM2p5',\n            O3_GEOS: 'Forecast__GEOS_O3',\n            SO2_GEOS: 'Forecast__GEOS_SO2',\n            NO2_GEOS: 'Forecast__GEOS_NO2',\n            CO_GEOS: 'Forecast__GEOS_CO'\n        }\n    }\n};\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\nmyApp.AllBindedLayersList = [];\nmyApp.OnlyOnce = true;\n\nmyApp.getLayer = function (id) {\n    // console.log(id)\n    var layer;\n    for (let i = 0; i < myApp.AllBindedLayersList.length; i++) {\n        // console.log(myApp.AllBindedLayersList[i].getProperties().id);\n        if (id == myApp.AllBindedLayersList[i].getProperties().id) { ///popDensityLayer.getProperties().id\n            layer = myApp.AllBindedLayersList[i].getLayer();\n            break;\n        }\n    }\n    return layer;\n};\n\nmyApp.AeronetAODStyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let AeronetStyle = null;\n    AeronetStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#D5212E'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 3,\n            radius: 10,\n            rotation: 0,\n            angle: 0\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return AeronetStyle;\n};\nmyApp.USEmbassyPM25StyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let USEmbassyAODStyle = null;\n    USEmbassyAODStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#CBCB59'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 4,\n            radius: 10,\n            angle: Math.PI / 4\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return USEmbassyAODStyle;\n};\nmyApp.USEmbassyO3StyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let USEmbassyAODStyle = null;\n    USEmbassyAODStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#CBCB59'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 4,\n            radius: 10,\n            angle: Math.PI / 4\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return USEmbassyAODStyle;\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\n\nmyApp.LayerCollectionObjet = {\n    Recent: {\n        data: [\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/TerraMODIS-TrueColor1km/catalog.xml',\n                useSLD: true,\n                isTimeDimensionLayer: true,\n                SLD: `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"\n                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"\n                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:resc=\"http://www.resc.reading.ac.uk\">\n    <NamedLayer>\n     <se:Name>red</se:Name>\n        <UserStyle>\n            <se:Name>Thesholded colour scheme</se:Name>\n            <se:CoverageStyle>\n                <se:Rule>\n                    <resc:RasterRGBSymbolizer>\n                        <se:Opacity>1.0</se:Opacity>\n                        <se:ColorMap>\n                            <resc:RedBand>\n                                <resc:BandName>red</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:RedBand>\n                            <resc:GreenBand>\n                                <resc:BandName>green</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:GreenBand>\n                            <resc:BlueBand>\n                                <resc:BandName>blue</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>1</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                    <resc:Spacing>linear</resc:Spacing>\n                                </resc:Range>\n                            </resc:BlueBand>\n                        </se:ColorMap>\n                    </resc:RasterRGBSymbolizer>\n                </se:Rule>\n            </se:CoverageStyle>\n        </UserStyle>\n    </NamedLayer>\n</StyledLayerDescriptor>\n`,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.recent.layerId.TerraModisTrueColor,\n                    title: 'TerraModis-TrueColor (' + myApp.formatDate(myApp.startDate) + ')',\n                    visible: true,\n                    opacity: 0.5,\n                    legendPath: '/static/' + TethysAppName + '/images/rgbLegend.png',\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: false,\n                    zIndex: 10,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'red',\n                            'transparent': true\n                        }\n                    },\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                }\n            },\n        ]\n    },\n    Archive: {\n        data: [\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/TerraMODIS-TrueColor1km/catalog.xml',\n                useSLD: true,\n                isTimeDimensionLayer: true,\n                SLD: `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"\n                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"\n                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:resc=\"http://www.resc.reading.ac.uk\">\n    <NamedLayer>\n     <se:Name>red</se:Name>\n        <UserStyle>\n            <se:Name>Thesholded colour scheme</se:Name>\n            <se:CoverageStyle>\n                <se:Rule>\n                    <resc:RasterRGBSymbolizer>\n                        <se:Opacity>1.0</se:Opacity>\n                        <se:ColorMap>\n                            <resc:RedBand>\n                                <resc:BandName>red</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:RedBand>\n                            <resc:GreenBand>\n                                <resc:BandName>green</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:GreenBand>\n                            <resc:BlueBand>\n                                <resc:BandName>blue</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>1</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                    <resc:Spacing>linear</resc:Spacing>\n                                </resc:Range>\n                            </resc:BlueBand>\n                        </se:ColorMap>\n                    </resc:RasterRGBSymbolizer>\n                </se:Rule>\n            </se:CoverageStyle>\n        </UserStyle>\n    </NamedLayer>\n</StyledLayerDescriptor>\n`,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: true,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.TerraModisTrueColor,\n                    title: 'TerraModis-TrueColor',\n                    visible: true,\n                    opacity: 0.5,\n                    legendPath: '/static/' + TethysAppName + '/images/rgbLegend.png',\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    zIndex: 10,\n                    filterCoodrdinate: filterCoodrdinate,\n                    RGBComposite: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'red',\n                            'transparent': true\n                        }\n                    },\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/PM/GEOS-PM2p5/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.GEOS_PM2p5,\n                    title: 'GEOS PM2.5',\n                    visible: false,\n                    opacity: 0.5,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'PM2p5',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,100\",\n                            'transparent': true\n                        }\n                    },\n                    unit: 'µg/m<sup>3<sup>',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 11,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'GEOS $PM_{2.5}$(µg/$m^{3}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {title: 'GEOS', unit: 'PM<sub>2.5</sub>(µg/m<sup>3</sup>)', SeriesName: \"value\"},\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/PM/TerraModis-AOD/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.TerraModisAOD,\n                    title: 'TerraModis-AOD',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'aod_550',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0.01,1',\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 12,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TerraModis-AOD',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {title: 'TerraModis-AOD', unit: \"AOD\", SeriesName: \"value\"},\n                }\n            }\n\n\n            , {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/O3/TROPOMI-O3/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.O3_TROPOMI,\n                    title: 'TROPOMI O3',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'O3',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,1',\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 13,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI $O_{3}$($10^{19}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"O<sub>3</sub> (10<sup>19</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/O3/GEOS-O3/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.O3_GEOS,\n                    title: 'GEOS O3',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'O3',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,80',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 14,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $O_{3}$(ppb)', TimeZone: ' UTC'})\n                    }, chartDetail: {title: 'GEOS', unit: \" O<sub>3</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            },\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/TROPOMI-SO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.SO2_TROPOMI,\n                    title: 'TROPOMI SO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'SO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,1',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'molecules / sq.cm',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 15,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"SO<sub>2</sub> (10<sup>17</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/GEOS-SO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.SO2_GEOS,\n                    title: 'GEOS SO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'SO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,10',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 16,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $SO_{2}$(ppb)', TimeZone: ' UTC'})\n                    }, chartDetail: {title: 'GEOS', unit: \"SO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            },\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/TROPOMI-NO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.NO2_TROPOMI,\n                    title: 'TROPOMI NO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'NO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,10',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'molecules / sq.cm',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 17,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    },\n                    chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"NO<sub>2</sub> (10<sup>15</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/GEOS-NO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate);\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate);\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.NO2_GEOS,\n                    title: 'GEOS NO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'NO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,10',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 18,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $NO_{2}$(ppb)', TimeZone: ' UTC'})\n                    }, chartDetail: {title: 'GEOS', unit: \"NO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            },\n\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/TROPOMI-CO/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate);\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate);\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.CO_TROPOMI,\n                    title: 'TROPOMI CO',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'CO',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '1,4',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'molecules / sq.cm',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 19,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI CO($10^{18}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"CO (10<sup>18</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/GEOS-CO/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate);\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate);\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.CO_GEOS,\n                    title: 'GEOS CO',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'CO',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,500',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 20,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS CO(ppb)'})\n                    }, chartDetail: {title: 'GEOS', unit: \"CO (ppb)\", SeriesName: \"value\"},\n                }\n            },]\n    },\n    Forecast: {\n        data: [\n            {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/PM/GEOS-PM2p5/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.GEOS_PM2p5,\n                    title: 'GEOS PM2.5',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'PM2p5',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,100\",\n                            'transparent': true\n                        }\n                    },\n                    unit: 'µg/m<sup>3<sup>',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 20,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $PM_{2.5}$(µg/$m^{3}$)', TimeZone: ' UTC'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: 'PM<sub>2.5</sub>(µg/m<sup>3</sup>)', SeriesName: \"value\"},\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/CO/GEOS-CO/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.CO_GEOS,\n                    title: 'GEOS CO',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'CO',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,500\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 21,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS CO(ppb)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \"CO (ppb)\", SeriesName: \"value\"},\n\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/NO2/GEOS-NO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.NO2_GEOS,\n                    title: 'GEOS NO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'NO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,10\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 22,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \"NO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/O3/GEOS-O3/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.O3_GEOS,\n                    title: 'GEOS O3',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'O3',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,80\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 23,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $O_{3}$(ppb)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \" O<sub>3</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/SO2/GEOS-SO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.SO2_GEOS,\n                    title: 'GEOS SO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'SO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,10\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 24,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \"SO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            }\n        ]\n    }\n};\n\nmyApp.DefaultSations = {\n    aeronetAOD: [9, 14, 9, 14],\n    pm2p5Embassy: [6, 7, 6, 7],\n    o3Embassy: [6, 7, 6, 7]\n}\n\nmyApp.cascaderObject = {\n    Recent: {\n        data: [\n            {\n                label: 'PM',\n                value: 1,\n                children: [\n                    {\n                        label: 'Surface Observation-AOD (AERONET)',\n                        value: 11,\n                        layerId: myApp.constants.recent.layerId.PM_AeronetAOD,\n                        otherval: \"test\",\n                        stationData: true,\n                        styleFunction: myApp.AeronetAODStyleFun,\n                        NotificationWhenAdded: \"Please Select AERONET AOD Station on map\",\n                        ModelClass: 'AeronetAod',\n                        ModelClassDataList: 'AeronetDataList',\n                        typeName: 'aod',\n                        defaultStation: myApp.DefaultSations.aeronetAOD,\n                        chart: {\n                            title: function (stationName, sd) {\n                                return 'AERONET AOD at ' + stationName + ' (' + sd + ')';\n                            },\n                            subTitle: 'AERONET level 1.5 data measured at 500nm',\n                            SeriesName: 'SeriesName',\n                            YaxisLabel: 'AOD (500nm)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            },\n                            plotType: 'point'\n                        }\n                    },\n                    {\n                        label: 'Ground Observation-PM2.5',\n                        layerId: myApp.constants.recent.layerId.PM_usembassy,\n                        value: 12,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyPM25StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy 2.5 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'pm',\n                        defaultStation: myApp.DefaultSations.pm2p5Embassy,\n                        chart: {\n                            title: function (stationName, sd) {\n                                return stationName + ' (' + sd + ')'\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'PM2.5',\n                            YaxisLabel: 'PM<sub>2.5</sub>(μg/m<sup>3</sup>)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                ]\n            }, {\n                label: 'O3',\n                value: 2,\n                children: [\n                    {\n                        label: 'Surface Observation-O3',\n                        layerId: myApp.constants.recent.layerId.O3_usembassy,\n                        value: 23,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyO3StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy O3 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'O3',\n                        defaultStation: myApp.DefaultSations.o3Embassy,\n                        chart: {\n                            title: function (stationName, sd) {\n                                return stationName + ' (' + sd + ')'\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'O3',\n                            YaxisLabel: 'O<sub>3</sub>(ppb)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                ]\n            }]\n    },\n    Archive: {\n        data: [\n            {\n                label: 'PM',\n                value: 1,\n                children: [\n                    {\n                        label: 'Surface Observation-AOD (AERONET)',\n                        value: 11,\n                        layerId: myApp.constants.archive.layerId.PM_AeronetAOD,\n                        stationData: true,\n                        styleFunction: myApp.AeronetAODStyleFun,\n                        NotificationWhenAdded: \"Please Select AERONET AOD Station on map\",\n                        ModelClass: 'AeronetAod',\n                        ModelClassDataList: 'AeronetDataList',\n                        typeName: 'aod',\n                        defaultStation: myApp.DefaultSations.aeronetAOD,\n                        chart: {\n                            title: function (stationName, sd, ed) {\n                                return `${stationName} (${sd} - ${ed})`\n                            },\n                            subTitle: 'AERONET level 1.5 data measured at 500nm',\n                            SeriesName: 'SeriesName',\n                            YaxisLabel: 'AOD',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            },\n                            plotType: 'point'\n                        }\n                    },\n                    {\n                        label: 'Ground Observation-PM2.5',\n                        layerId: myApp.constants.archive.layerId.PM_usembassy,\n                        value: 12,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyPM25StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy 2.5 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'pm',\n                        defaultStation: myApp.DefaultSations.pm2p5Embassy,\n                        chart: {\n                            title: function (stationName, sd, ed) {\n                                return `${stationName} (${sd} - ${ed})`\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'PM2.5',\n                            YaxisLabel: 'PM<sub>2.5</sub>(μg/m<sup>3</sup>)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                    {\n                        label: 'Model-PM2.5 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.GEOS_PM2p5,\n                        value: 13,\n                    },\n                    {\n                        label: 'Satellite-AOD (Terra-MODIS)',\n                        layerId: myApp.constants.archive.layerId.TerraModisAOD,\n                        value: 14,\n                    }\n                ]\n            }, {\n                label: 'O3',\n                value: 2,\n                children: [\n                    // {\n                    //     label: 'Satellite-O3 (TROPOMI)',\n                    //     layerId: myApp.constants.archive.layerId.O3_TROPOMI,\n                    //     value: 21,\n                    // },\n                    {\n                        label: 'Model-O3 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.O3_GEOS,\n                        value: 22,\n                    }, {\n                        label: 'Surface Observation-O3',\n                        layerId: myApp.constants.archive.layerId.O3_usembassy,\n                        value: 23,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyO3StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy O3 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'O3',\n                        defaultStation: myApp.DefaultSations.o3Embassy,\n                        chart: {\n                            title: function (stationName, sd, ed) {\n                                return `${stationName} (${sd} - ${ed})`\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'O3',\n                            YaxisLabel: 'O<sub>3</sub>(ppb)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                ]\n            },\n            {\n                label: 'SO2',\n                value: 3,\n                children: [\n                    {\n                        label: 'Satellite-SO2 (TROPOMI)',\n                        layerId: myApp.constants.archive.layerId.SO2_TROPOMI,\n                        value: 31,\n                    },\n                    {\n                        label: 'Model-SO2 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.SO2_GEOS,\n                        value: 32,\n                    }\n                ]\n            },\n            {\n                label: 'NO2',\n                value: 4,\n                children: [\n                    {\n                        label: 'Satellite-NO2 (TROPOMI)',\n                        layerId: myApp.constants.archive.layerId.NO2_TROPOMI,\n                        value: 41,\n                    },\n                    {\n                        label: 'Model-NO2 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.NO2_GEOS,\n                        value: 42,\n                    }\n                ]\n            },\n            {\n                label: 'CO',\n                value: 5,\n                children: [\n                    {\n                        label: 'Satellite-CO (TROPOMI)',\n                        layerId: myApp.constants.archive.layerId.CO_TROPOMI,\n                        value: 51,\n                    },\n                    {\n                        label: 'Model-CO (GEOS)',\n                        layerId: myApp.constants.archive.layerId.CO_GEOS,\n                        value: 52,\n                    }\n                ]\n            }]\n    },\n    Forecast: {\n        data: [\n            {\n                label: 'PM',\n                value: 1,\n                children: [\n                    {\n                        label: 'Model-PM2.5 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.GEOS_PM2p5,\n                        value: 13,\n                    }\n                ]\n            }, {\n                label: 'O3',\n                value: 2,\n                children: [\n                    {\n                        label: 'Model-O3 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.O3_GEOS,\n                        value: 22,\n                    }\n                ]\n            },\n            {\n                label: 'SO2',\n                value: 3,\n                children: [\n                    {\n                        label: 'Model-SO2 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.SO2_GEOS,\n                        value: 32,\n                    }\n                ]\n            },\n            {\n                label: 'NO2',\n                value: 4,\n                children: [\n                    {\n                        label: 'Model-NO2 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.NO2_GEOS,\n                        value: 42,\n                    }\n                ]\n            },\n            {\n                label: 'CO',\n                value: 5,\n                children: [\n                    {\n                        label: 'Model-CO (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.CO_GEOS,\n                        value: 52,\n                    }\n                ]\n            }]\n    }\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\n\nmyApp.makeRequest = function (method, url) {\n    return new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(method, url);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                resolve(xhr.response);\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n};\n\n\nmyApp.getForecastWMSList = async function (url) {\n    let result = await myApp.makeRequest(\"GET\", url);\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(result, \"text/xml\");\n    let wmsList = [];\n    let interestedDate = myApp.formatDate(myApp.forecastDate).replace(/-/g, '');\n    let DimensionTag = xmlDoc.getElementsByTagName(\"catalogRef\");\n    let DateHavingCatalog = null;\n    for (let kk of DimensionTag) {\n        if (interestedDate == kk.getAttribute('xlink:title')) {\n            DateHavingCatalog = url.replace('catalog.xml', kk.getAttribute('xlink:href'));\n            break;\n        }\n    }\n    if (DateHavingCatalog) {\n        let result1 = await this.makeRequest(\"GET\", DateHavingCatalog);\n        let parser1 = new DOMParser();\n        let xmlDoc1 = parser1.parseFromString(result1, \"text/xml\");\n        let dataset = xmlDoc1.getElementsByTagName(\"dataset\");\n        for (let jj of dataset) {\n            let name = jj.getAttribute('name');\n            if (name.slice(-3) == '.nc') {\n                wmsList.push(DateHavingCatalog.replace('/catalog/', '/wms/').replace('catalog.xml', name));\n            }\n        }\n    }\n    return wmsList.sort()\n};\n\nmyApp.datetimePointChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n            chart: {\n                marginLeft: 65,\n                /* marginRight: 0, */\n                /* spacingLeft: 0, */\n                /* spacingRight: 0 */\n                backgroundColor: 'transparent',\n                plotBorderColor: '#afafaf',\n                plotBorderWidth: 1,\n            },\n            title: {\n                text: title,\n                fontSize: '10px',\n                useHTML: true\n            },\n            subtitle: {\n                text: subTitle,\n                fontSize: '8px'\n            },\n            series: [{\n                name: SeriesName,\n                data: SeriesData,\n                lineWidth: 0,\n                marker: {\n                    enabled: true,\n                    symbol: 'diamond',\n                    radius: 2\n                },\n            }],\n            xAxis: {\n                type: 'datetime',\n                title: {\n                    text: XaxisLabel,\n                    align: 'high',\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0\n            },\n            yAxis: {\n                title: {\n                    text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                    useHTML: true,\n                    rotation: 0,\n                    // align: 'high',\n                    offset: 0,\n                    x: -50\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0,\n                gridLineWidth: 0\n            },\n            legend: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    color: plotColor\n                }\n            },\n            lang: {\n                noData: DataPeriod + 'data not available for this station.'\n            },\n            exporting: {\n                buttons: {\n                    contextButton: {\n                        menuItems: [\"printChart\",\n                            \"separator\",\n                            \"downloadPNG\",\n                            \"downloadJPEG\",\n                            \"downloadPDF\",\n                            \"downloadSVG\",\n                            \"separator\",\n                            \"downloadCSV\",\n                            \"downloadXLS\",\n                            //\"viewData\",\n                            \"openInCloud\"]\n                    }\n                },\n                // chartOptions: {\n                //     title: {\n                //         text: title,\n                //         fontSize: '10px',\n                //         useHTML: true\n                //     }, yAxis: {\n                //         title: {\n                //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                //             useHTML: true,\n                //             rotation: 250\n                //         }\n                //     },\n                // },\n                allowHTML: true,\n                // fallbackToExportServer: false,\n                // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n            }\n        }\n    ;\n    return data\n};\n\nmyApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n        chart: {\n            marginLeft: 65,\n            /* marginRight: 0, */\n            /* spacingLeft: 0, */\n            /* spacingRight: 0 */\n            backgroundColor: 'transparent',\n            plotBorderColor: '#afafaf',\n            plotBorderWidth: 1,\n        },\n        title: {\n            text: title,\n            fontSize: '10px',\n            useHTML: true\n        },\n        subtitle: {\n            text: subTitle,\n            fontSize: '8px'\n        },\n        series: [{\n            name: SeriesName,\n            data: SeriesData,\n            // marker: {\n            //     enabled: true,\n            //     symbol: 'diamond',\n            //     radius: 3\n            // },\n        }],\n        xAxis: {\n            type: 'datetime',\n            title: {\n                text: XaxisLabel,\n                align: 'high',\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0\n        },\n        lang: {\n            noData: DataPeriod + 'data not available for this station.'\n        },\n        yAxis: {\n            title: {\n                text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                useHTML: true,\n                rotation: 0,\n                // align: 'high',\n                offset: 0,\n                x: -50\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0,\n            gridLineWidth: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                color: plotColor\n            }\n        },\n        exporting: {\n            buttons: {\n                contextButton: {\n                    menuItems: [\"printChart\",\n                        \"separator\",\n                        \"downloadPNG\",\n                        \"downloadJPEG\",\n                        \"downloadPDF\",\n                        \"downloadSVG\",\n                        \"separator\",\n                        \"downloadCSV\",\n                        \"downloadXLS\",\n                        //\"viewData\",\n                        \"openInCloud\"]\n                }\n            },\n            // chartOptions: {\n            //     title: {\n            //         text: title,\n            //         fontSize: '10px',\n            //         useHTML: true\n            //     }, yAxis: {\n            //         title: {\n            //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n            //             useHTML: true,\n            //             rotation: 250\n            //         }\n            //     },\n            // },\n            allowHTML: true,\n            // fallbackToExportServer: false,\n            // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n        }\n    };\n    return data\n};\n\nmyApp.forceDownload = function (url, fileName) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        var urlCreator = window.URL || window.webkitURL;\n        var imageUrl = urlCreator.createObjectURL(this.response);\n        var tag = document.createElement('a');\n        tag.href = imageUrl;\n        tag.download = fileName;\n        document.body.appendChild(tag);\n        tag.click();\n        document.body.removeChild(tag);\n    }\n    xhr.send();\n}\n\n// myApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor) {\n//     let data = {\n//             chart: {\n//                 marginLeft: 65,\n//                 /* marginRight: 0, */\n//                 /* spacingLeft: 0, */\n//                 /* spacingRight: 0 */\n//                 backgroundColor: 'transparent',\n//                 plotBorderColor: '#afafaf',\n//                 plotBorderWidth: 1,\n//             },\n//             title: {\n//                 text: title,\n//                 fontSize: '10px',\n//                 useHTML: true\n//             },\n//             subtitle: {\n//                 text: subTitle,\n//                 fontSize: '8px'\n//             },\n//             series: [{\n//                 name: SeriesName,\n//                 data: SeriesData,\n//                 // marker: {\n//                 //     enabled: true,\n//                 //     symbol: 'diamond',\n//                 //     radius: 3\n//                 // },\n//             }],\n//             xAxis: {\n//                 type: 'datetime',\n//                 title: {\n//                     text: XaxisLabel,\n//                     align: 'high',\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0\n//             },\n//             yAxis: {\n//                 title: {\n//                     text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                     useHTML: true,\n//                     rotation: 0,\n//                     // align: 'high',\n//                     offset: 0,\n//                     x: -50\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0,\n//                 gridLineWidth: 0\n//             },\n//             legend: {\n//                 enabled: false\n//             },\n//             credits: {\n//                 enabled: false\n//             },\n//             plotOptions: {\n//                 series: {\n//                     color: plotColor\n//                 }\n//             },\n//             exporting: {\n//                 buttons: {\n//                     contextButton: {\n//                         menuItems: [\"printChart\",\n//                             \"separator\",\n//                             \"downloadPNG\",\n//                             \"downloadJPEG\",\n//                             \"downloadPDF\",\n//                             \"downloadSVG\",\n//                             \"separator\",\n//                             \"downloadCSV\",\n//                             \"downloadXLS\",\n//                             //\"viewData\",\n//                             \"openInCloud\"]\n//                     }\n//                 },\n//                 // chartOptions: {\n//                 //     title: {\n//                 //         text: title,\n//                 //         fontSize: '10px',\n//                 //         useHTML: true\n//                 //     }, yAxis: {\n//                 //         title: {\n//                 //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                 //             useHTML: true,\n//                 //             rotation: 250\n//                 //         }\n//                 //     },\n//                 // },\n//                 allowHTML: true,\n//                 // fallbackToExportServer: false,\n//                 // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n//             }\n//         }\n//     ;\n//     console.log(JSON.stringify(data));\n//     return data\n// };\n\nexport var AirPollutionWatchApp = myApp;","import { render } from \"./mapComponentArchive.vue?vue&type=template&id=2df3e78e\"\nimport script from \"./mapComponentArchive.vue?vue&type=script&lang=js\"\nexport * from \"./mapComponentArchive.vue?vue&type=script&lang=js\"\n\nimport \"./mapComponentArchive.vue?vue&type=style&index=0&id=2df3e78e&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TabBodyArchive.vue?vue&type=template&id=c564b526&scoped=true\"\nimport script from \"./TabBodyArchive.vue?vue&type=script&lang=js\"\nexport * from \"./TabBodyArchive.vue?vue&type=script&lang=js\"\n\nimport \"./TabBodyArchive.vue?vue&type=style&index=0&id=c564b526&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c564b526\"]])\n\nexport default __exports__","<template>\n  <div class=\"full-height\">\n    <el-row class=\"first-row\">\n      <el-col :span=\"6\" class=\"full-height full-width padding-left-10 padding-bottom-5 padding-top-10 padding-right-5\">\n        <mapControlsForecast></mapControlsForecast>\n      </el-col>\n      <el-col :span=\"12\" class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-5\">\n        <mapComponentForecast></mapComponentForecast>\n      </el-col>\n      <el-col :span=\"6\" class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-10\">\n        <LayerSwitcherControl></LayerSwitcherControl>\n      </el-col>\n    </el-row>\n    <el-row class=\"second-row padding-left-5 padding-right-5\">\n      <el-col :span=\"6\"\n              class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n        <chartComponentForecast :IndexValue=\"1\"></chartComponentForecast>\n      </el-col>\n      <el-col :span=\"6\"\n              class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n        <chartComponentForecast :IndexValue=\"2\"></chartComponentForecast>\n      </el-col>\n      <el-col :span=\"6\"\n              class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n        <chartComponentForecast :IndexValue=\"3\"></chartComponentForecast>\n      </el-col>\n      <el-col :span=\"6\"\n              class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n        <chartComponentForecast :IndexValue=\"4\"></chartComponentForecast>\n      </el-col>\n\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport LayerSwitcherControl from '../common/LayerSwitcherControl';\n\n// import about from \"./about\";\nimport chartComponentForecast from \"./chartComponentForecast\";\nimport mapControlsForecast from \"./mapControlsForecast\";\nimport mapComponentForecast from \"./mapComponentForecast\";\n// import {mapActions} from \"vuex\";\n\nexport default {\n  name: \"emissionTabBody\",\n  components: {\n    LayerSwitcherControl,\n    chartComponentForecast,\n    mapControlsForecast,\n    mapComponentForecast,\n  },\n  methods: {\n    // ...mapActions([\"getCascaderOptions\"]),\n  },\n  async mounted() {\n    // let data = await this.getCascaderOptions();\n    // console.log(data);\n  }\n}\n</script>\n\n<style scoped>\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n.full-height {\n  height: 100%;\n}\n\n.second-row div {\n  /*height: calc(100% - 12.5px);*/\n}\n</style>\n","<template>\n  <div class=\"card-box full-height full-width about-div\" ref=\"outerViz\">\n    <div v-if=\"visualizationIn =='chart'\" class=\"chart-div\" :id=\"'chart'+IndexValue\" ref=\"ChartDiv\">\n      <div class=\"flex-center-vertically\">\n        <!--        Please select a layer and draw a feature to view the chart-->\n        <el-skeleton :rows=\"5\" animated/>\n      </div>\n    </div>\n\n    <div v-if=\"visualizationIn =='2Dimage'\" class=\"position-relative  full-width full-height\" ref=\"Image2D\">\n      <div class=\"download-map-Image\" @click=\"downloadImage()\">\n        <i class=\"fas fa-download\"></i>\n      </div>\n      <div class=\"vertically-center\">\n        <img class=\"generated-image\" :width=\"imageInfo.width\" :src=\"imageInfo.url\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport eventHub from \"../../utils/utils\";\n\nimport Highcharts from 'highcharts';\n\n// Alternatively, this is how to load Highstock. Highmaps is similar.\n// import Highcharts from 'highcharts/highstock';\n\n\n// Load the exporting module.\nimport Exporting from 'highcharts/modules/exporting';\nimport ExportData from 'highcharts/modules/export-data';\nimport NOdata from 'highcharts/modules/no-data-to-display'\nimport MoreHighcharts from 'highcharts/highcharts-more';\n\n// Initialize exporting module.\nExporting(Highcharts);\nNOdata(Highcharts);\nMoreHighcharts(Highcharts);\nExportData(Highcharts);\n\n// window.Highcharts = Highcharts;\nimport {AirPollutionWatchApp} from \"../../utils/dataForecast\";\nimport {mapActions, mapState, mapGetters} from 'vuex';\n\n\nexport default {\n  name: \"chartComponent\",\n  props: {\n    IndexValue: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      visualizationIn: 'chart',\n      imageInfo: {\n        url: '',\n        downloadFileName: '',\n        width: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"PostGetStationData\", \"PostGet2DImage\", \"TimeSeriesRasterQuery\"]),\n    async renderVisualization(isNoData) {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n        this.TimeSeriesPlot(kk, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].wktValue, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].geometryType, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].default_level_value, isNoData);\n      } else {\n        //by location\n        let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n        this.TimeSeriesPlot(kk, this.mapControlVariable.location_by_wktValue, this.mapControlVariable.location_by_geometryType, this.mapControlVariable.location_by_default_level_value, isNoData);\n      }\n    },\n    getCascaderInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    async ObservationDatavisualization(kk, stationId) {\n      let layer = this.getBindedLayer(kk.layerId);\n      layer.setVisibleDivBind(true);\n      let param = {\n        stId: stationId,\n        ModelClass: kk.ModelClass,\n        ModelClassDataList: kk.ModelClassDataList,\n        typeName: kk.typeName,\n        StartDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate),\n        EndDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate)\n      };\n      let parsedData = await this.PostGetStationData(param);\n      this.visualizationIn = 'chart'\n      var stationObject = kk.childrenData.filter((stdata) => {\n        return stdata.value == stationId\n      })[0]\n\n      let stationName = stationObject.folder_name;\n\n      let title;\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate));\n      } else {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate), this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate));\n      }\n      // debugger;\n      let XaxisLabel = kk.chart.XaxisLabel();\n      let plotType = kk.chart.plotType;\n      let highchartsObj = null;\n      if (plotType === 'point') {\n        highchartsObj = this.AirPollutionWatchApp.datetimePointChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel + ' (UTC)', this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      } else {\n        highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel + ' (UTC)', this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      }\n      Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n\n    },\n    downloadImage() {\n      this.AirPollutionWatchApp.forceDownload(this.imageInfo.url, this.imageInfo.downloadFileName);\n    },\n    async TimeSeriesPlot(kk, WKT, WKTType, default_level_value, isNoData) {\n      if (!isNoData) {\n        let layerBind = this.getBindedLayer(kk.layerId);\n        let layer = layerBind.getLayer();\n\n        let SourceParam = null;\n        let SourceURL = null;\n        let layerProperties = null;\n\n        if (layer.getProperties().ThreddsDataServerVersion) {\n          layerProperties = layer.getProperties();\n          SourceParam = layer.getCurrentLayer().getProperties().source.getParams();\n          SourceURL = [];\n          layerProperties.source.url.forEach(function (val) {\n            SourceURL.push(val.split('/wms/')[1]);\n          });\n\n        } else {\n          layerProperties = layer.getProperties();\n          SourceParam = layer.source.getParams();\n          SourceURL = layer.source.getUrls()[0].split('wms')[1];\n        }\n        let param = {\n          DATADIR: SourceURL,\n          LAYER: SourceParam.LAYERS,\n          wkt: WKT,\n          type: WKTType\n        };\n\n        let parsedData = await this.TimeSeriesRasterQuery(param);\n        if (parsedData.status === 200) {\n          let title = layerProperties.chartDetail.Product + \" (\" + layerProperties.chartDetail.Source + \")\";\n          let subTitle;\n          if (default_level_value) {\n            subTitle = default_level_value;\n          } else {\n            subTitle = parsedData.geom;\n          }\n          let YaxisLabel = layerProperties.chartDetail.unit;\n          let SeriesName = layerProperties.chartDetail.SeriesName;\n          let highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, subTitle, parsedData.SeriesData, SeriesName, YaxisLabel, parsedData.XaxisLabel + ' (UTC)', this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1])\n          Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n        }\n      } else {\n        // debugger;\n        let layerProperties = kk.layerProperties.threddLayerProp\n        let title = layerProperties.chartDetail.Product + \" (\" + layerProperties.chartDetail.Source + \")\";\n        let subTitle = '';\n        if (default_level_value) {\n          subTitle = default_level_value;\n        }\n        // let YaxisLabel = layerProperties.chartDetail.unit;\n        let SeriesName = layerProperties.chartDetail.SeriesName;\n        let forecastDate = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.forecastDate)\n        let highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, subTitle, [], SeriesName, '', '', this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], forecastDate)\n        Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n        console.log(kk);\n      }\n    }\n  },\n  computed: {\n    ...mapState([\"mapControlVariable\", \"TimeSeriesLayerCollection\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n  },\n  created() {\n    eventHub.$on(\"getVisualization\", () => {\n      this.renderVisualization();\n    });\n    eventHub.$on(\"ShowNoDataForecast\", () => {\n      this.renderVisualization(true);\n    });\n  },\n  async mounted() {\n\n    // Generate the chart\n//     Highcharts.chart('chart', {\n//       credits: {\n//         enabled: false\n//       },\n//       title: {\n//         align: \"center\",\n//         text: \"Select Indices to Display Chart\",\n//       },\n//       series: [{\n//         data: [],\n//       }],\n//       chart: {\n//         backgroundColor: 'rgba(255,255,255,0)',\n//         style: {\n//           \"fontFamily\": \"Lato,\\\"Lucida Grande\\\", \\\"Lucida Sans Unicode\\\", Verdana, Arial, Helvetica, sans-serif\",\n//           \"fontSize\": \"12px\"\n//         },\n//\n//         animation: true,\n//         zoomType: 'x',\n// //        borderColor: '#000000',\n// //        borderWidth: 2,\n//         type: 'area',\n//       },\n//       noData: {\n//         style: {\n//           fontWeight: 'bold',\n//           fontSize: '15px',\n//           color: '#303030'\n//         }\n//       },\n//     });\n    eventHub.$on('UpdateChart', (HcObject) => {\n      this.updateChart(HcObject);\n    });\n  },\n};\n</script>\n\n<style scoped>\n\n.chart-option .el-row {\n  margin-left: 5px !important;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-right: 8px !important;\n}\n\n.chart-option {\n  border-bottom: solid 1px #e2e2e2;\n}\n\n.chart-div {\n  height: 100%;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n.center-content-parent {\n  position: relative;\n}\n\n.center-content-child {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  margin: -70px 0 0 -170px;\n}\n\n.flex-center-vertically {\n  padding: 20px;\n  justify-content: center;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  height: 100%;\n}\n\n.plotSelection {\n  display: block;\n}\n\n.sync-chart .el-button {\n  width: 100%;\n}\n\n.position-relative {\n  position: relative !important;\n}\n\n.download-map-Image {\n  z-index: 1000;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  color: #afacac;\n  cursor: pointer;\n}\n\n.vertically-center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</style>\n","import {DefaultMaskWMS, DefaultPlotInfo, TethysAPIAppName} from \"../config\";\nimport {getURLParameters} from './helpers';\n\nvar myApp = {};\n// First need to initilize\nvar filterCoodrdinate = {};\n\n\nmyApp.forecastDate = new Date();\nmyApp.forecastDate.setDate(myApp.forecastDate.getDate() - 1);\n\n\nlet forecasteDate = getURLParameters()['date'];\nif (forecasteDate) {\n    if (forecasteDate.length == 8) {\n        let checkInt = parseInt(forecasteDate);\n        if (checkInt) {\n            // Number with valid\n            let YYYY = parseInt(forecasteDate.slice(0, 4));\n            let MM_index = parseInt(forecasteDate.slice(4, 6)) - 1;\n            let DD = parseInt(forecasteDate.slice(6, 8));\n            let dObject = new Date(YYYY, MM_index, DD);\n            myApp.forecastDate = dObject;\n        }\n    }\n}\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\n\n\nmyApp.APICollection = {\n    layerData: {\n        Aeronet: '/apps/' + TethysAPIAppName + '/aeronetaodpm/',\n        USEmbassyAOD: '/apps/' + TethysAPIAppName + '/usembassypm/',\n        getGeoJSONofStations: '/apps/' + TethysAPIAppName + '/getGeoJSONofStations/',\n        getGeoJsonForOneSatation: '/apps/' + TethysAPIAppName + '/getGeoJsonForOneSatation/',\n        getAllStationsID: '/apps/' + TethysAPIAppName + '/getAllStationsID/',\n    },\n    api: {\n        commonAPI: '/apps/' + TethysAPIAppName + '/getData/',\n        RegionGeojson: '/apps/' + TethysAPIAppName + '/geojsonregion/',\n        AOIPolygon: '/apps/' + TethysAPIAppName + '/aoipolygon/',\n        GetMapImage: '/apps/' + TethysAPIAppName + '/getmapimage/',\n        GetImage: '/apps/' + TethysAPIAppName + '/downloadImage/',\n        SlicedFromCatalog: '/apps/' + TethysAPIAppName + '/slicedfromcatalog/'\n    }\n};\n\n\nmyApp.constants = {\n    forecast: {\n        layerId: {\n            GEOS_PM2p5: 'Forecast__GEOS_PM2p5',\n            O3_GEOS: 'Forecast__GEOS_O3',\n            SO2_GEOS: 'Forecast__GEOS_SO2',\n            NO2_GEOS: 'Forecast__GEOS_NO2',\n            CO_GEOS: 'Forecast__GEOS_CO',\n            WRF_Chem_PM: 'Forecast__WRF_Chem_PM',\n            WRF_Chem_O3: 'Forecast__WRF_Chem_O3',\n            WRF_Chem_SO2: 'Forecast__WRF_Chem_SO2',\n            WRF_Chem_NO2: 'Forecast__WRF_Chem_NO2',\n            WRF_Chem_CO: 'Forecast__WRF_Chem_CO',\n        }\n    }\n};\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\nmyApp.AllBindedLayersList = [];\nmyApp.OnlyOnce = true;\n\nmyApp.getLayer = function (id) {\n    // console.log(id)\n    var layer;\n    for (let i = 0; i < myApp.AllBindedLayersList.length; i++) {\n        // console.log(myApp.AllBindedLayersList[i].getProperties().id);\n        if (id == myApp.AllBindedLayersList[i].getProperties().id) { ///popDensityLayer.getProperties().id\n            layer = myApp.AllBindedLayersList[i].getLayer();\n            break;\n        }\n    }\n    return layer;\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n    return [year, month, day].join('-');\n};\n\nmyApp.formatForecastDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n    return [year, month, day].join('');\n};\n\n\nmyApp.DefaultSations = {\n    aeronetAOD: [9, 14, 9, 14],\n    pm2p5Embassy: [6, 7, 6, 7],\n    o3Embassy: [6, 7, 6, 7]\n}\n\nmyApp.cascaderObj = [\n    {\n        label: 'PM',\n        value: 1,\n        children: [\n            {\n                label: 'Model-PM2.5 (GEOS)',\n                layerId: myApp.constants.forecast.layerId.GEOS_PM2p5,\n                value: 13,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/PM/GEOS-PM2p5/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.GEOS_PM2p5,\n                        title: 'GEOS PM2.5',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: 'GEOS PM$\\\\mathregular{_{2.5} (µg/m^{3})}$',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0865, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'PM2p5',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,100\",\n                                'transparent': true\n                            }\n                        },\n                        unit: 'µg/m<sup>3<sup>',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 20,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'GEOS $PM_{2.5}$(µg/$m^{3}$)',\n                                TimeZone: ' UTC'\n                            })\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: 'µg/m<sup>3</sup>', SeriesName: \"value\",\n                            Product: 'PM<sub>2.5</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Model-PM2.5 (WRF-Chem)',\n                layerId: myApp.constants.forecast.layerId.WRF_Chem_PM,\n                value: 14,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/WRF_Chem/d1_HKH/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.WRF_Chem_PM,\n                        title: 'WRF-Chem PM2.5',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: 'WRF-Chem PM$\\\\mathregular{_{2.5} (µg/m^{3})}$',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0865, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'PM25_SFC',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,100\",\n                                'transparent': true\n                            }\n                        },\n                        unit: 'µg/m<sup>3<sup>',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 20,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'WRF-Chem $PM_{2.5}$(µg/$m^{3}$)',\n                                TimeZone: ' UTC'\n                            })\n                        },\n                        chartDetail: {\n                            title: 'WRF-Chem',\n                            unit: 'µg/m<sup>3</sup>',\n                            SeriesName: \"value\",\n                            Product: 'PM<sub>2.5</sub>',\n                            Source: 'WRF-Chem'\n                        },\n                    }\n                }\n            }\n        ]\n    }, {\n        label: 'O3',\n        value: 2,\n        children: [\n            {\n                label: 'Model-O3 (GEOS)',\n                layerId: myApp.constants.forecast.layerId.O3_GEOS,\n                value: 22,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/O3/GEOS-O3/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.O3_GEOS,\n                        title: 'GEOS O3',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: 'GEOS O$\\\\mathregular{_{3} (ppb)}$',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0755, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'O3',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,80\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 23,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $O_{3}$(ppb)'})\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'O<sub>3</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                },\n            }, {\n                label: 'Model-O3 (WRF-Chem)',\n                layerId: myApp.constants.forecast.layerId.WRF_Chem_O3,\n                value: 23,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/WRF_Chem/d1_HKH/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.WRF_Chem_O3,\n                        title: 'WRF-Chem O3',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text:  'WRF-Chem O$\\\\mathregular{_{3}}$ (Dobson Units)',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0865, 0.78]\n                        },\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'O3_TOTCOL',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"20,120\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 23,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS Dobson Units'})\n                        },\n                        chartDetail: {\n                            title: 'WRF-Chem', unit: \"Dobson Units\", SeriesName: \"value\",\n                            Product: 'O<sub>3</sub>',\n                            Source: 'WRF-Chem'\n                        },\n                    }\n                },\n            }\n        ]\n    },\n    {\n        label: 'SO2',\n        value: 3,\n        children: [\n            {\n                label: 'Model-SO2 (GEOS)',\n                layerId: myApp.constants.forecast.layerId.SO2_GEOS,\n                value: 32,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/SO2/GEOS-SO2/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.SO2_GEOS,\n                        title: 'GEOS SO2',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: 'GEOS SO$\\\\mathregular{_{2} (ppb)}$',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105,  0.0755, 0.78]\n                        },\n\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'SO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,10\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 24,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)'})\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'SO<sub>2</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Model-SO2 (WRF-Chem)',\n                layerId: myApp.constants.forecast.layerId.WRF_Chem_SO2,\n                value: 33,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/WRF_Chem/d1_HKH/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.WRF_Chem_SO2,\n                        title: 'WRF-Chem SO2',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: 'WRF-Chem SO$\\\\mathregular{_{2} (ppb)}$',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0865, 0.78]\n                        },\n\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'SO2_SFC',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,10\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 24,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)'})\n                        },\n                        chartDetail: {\n                            title: 'WRF-Chem', unit: \" ppb\", SeriesName: \"value\",\n                            Product: 'SO<sub>2</sub>',\n                            Source: 'WRF-Chem'\n                        },\n                    }\n                }\n            }\n        ]\n    },\n    {\n        label: 'NO2',\n        value: 4,\n        children: [\n            {\n                label: 'Model-NO2 (GEOS)',\n                layerId: myApp.constants.forecast.layerId.NO2_GEOS,\n                value: 42,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/NO2/GEOS-NO2/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.NO2_GEOS,\n                        title: 'GEOS NO2',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: 'GEOS NO$\\\\mathregular{_{2} (ppb)}$',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0755, 0.78]\n                        },\n\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'NO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,10\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 22,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)'})\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'NO<sub>2</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                },\n            },\n            {\n                label: 'Model-NO2 (WRF-Chem)',\n                layerId: myApp.constants.forecast.layerId.WRF_Chem_NO2,\n                value: 43,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/WRF_Chem/d1_HKH/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.WRF_Chem_NO2,\n                        title: 'WRF-Chem NO2',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: 'WRF-Chem NO$\\\\mathregular{_{2} (ppb)',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0865, 0.78]\n                        },\n\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'NO2_SFC',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,10\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 22,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)'})\n                        },\n                        chartDetail: {\n                            title: 'WRF-Chem', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'NO<sub>2</sub>',\n                            Source: 'WRF-Chem'\n                        },\n                    }\n                },\n            }\n        ]\n    },\n    {\n        label: 'CO',\n        value: 5,\n        children: [\n            {\n                label: 'Model-CO (GEOS)',\n                layerId: myApp.constants.forecast.layerId.CO_GEOS,\n                value: 52,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/CO/GEOS-CO/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.CO_GEOS,\n                        title: 'GEOS CO',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text:  'GEOS CO (ppb)$',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0755, 0.78]\n                        },\n\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'CO',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,1000\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 21,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS CO(ppb)'})\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'CO',\n                            Source: 'GEOS'\n                        },\n\n                    }\n                },\n            },\n            {\n                label: 'Model-CO (WRF-Chem)',\n                layerId: myApp.constants.forecast.layerId.WRF_Chem_CO,\n                value: 53,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/WRF_Chem/d1_HKH/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.WRF_Chem_CO,\n                        title: 'WRF-Chem CO',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n\n                        showAnimationButton: true,\n                        animationPlot: {\n                            title_text: 'WRF Chem CO (ppb)',\n                            bbox: [60, 15, 100, 38],\n                            resolution: 400,\n                            positionLegend: [0.85, 0.105, 0.0865, 0.78]\n                        },\n\n\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'CO_SFC',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,1000\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 21,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'WRF-Chem CO(ppb)'});\n                        },\n                        chartDetail: {\n                            title: 'WRF-Chem', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'CO',\n                            Source: 'WRF-Chem'\n                        },\n                    }\n                },\n            }\n        ]\n    }];\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\n\nmyApp.makeRequest = function (method, url) {\n    return new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(method, url);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                resolve(xhr.response);\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n};\n\n\nmyApp.getForecastWMSList = async function (url) {\n    let result = await myApp.makeRequest(\"GET\", url);\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(result, \"text/xml\");\n    let wmsList = [];\n    let interestedDate = myApp.formatDate(myApp.forecastDate).replace(/-/g, '');\n    let DimensionTag = xmlDoc.getElementsByTagName(\"catalogRef\");\n    let DateHavingCatalog = null;\n    for (let kk of DimensionTag) {\n        if (interestedDate == kk.getAttribute('xlink:title')) {\n            DateHavingCatalog = url.replace('catalog.xml', kk.getAttribute('xlink:href'));\n            break;\n        }\n    }\n\n\n    if (DateHavingCatalog) {\n        let result1 = await this.makeRequest(\"GET\", DateHavingCatalog);\n        let parser1 = new DOMParser();\n        let xmlDoc1 = parser1.parseFromString(result1, \"text/xml\");\n        let dataset = xmlDoc1.getElementsByTagName(\"dataset\");\n        for (let jj of dataset) {\n            let name = jj.getAttribute('name');\n            if (name.slice(-3) == '.nc') {\n                wmsList.push(DateHavingCatalog.replace('/catalog/', '/wms/').replace('catalog.xml', name));\n            }\n        }\n    }\n    return wmsList.sort()\n};\n\nmyApp.datetimePointChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n\n    let data = {\n        chart: {\n            marginLeft: 65,\n            /* marginRight: 0, */\n            /* spacingLeft: 0, */\n            /* spacingRight: 0 */\n            backgroundColor: 'transparent',\n            plotBorderColor: '#afafaf',\n            plotBorderWidth: 1,\n        },\n        title: {\n            text: title,\n            fontSize: '10px',\n            useHTML: true\n        },\n        subtitle: {\n            text: subTitle,\n            fontSize: '8px'\n        },\n        series: [{\n            name: SeriesName,\n            data: SeriesData,\n            lineWidth: 0,\n            marker: {\n                enabled: true,\n                symbol: 'diamond',\n                radius: 2\n            },\n        }],\n        xAxis: {\n            type: 'datetime',\n            title: {\n                text: XaxisLabel,\n                align: 'high',\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0\n        },\n        yAxis: {\n            title: {\n                text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                useHTML: true,\n                rotation: 0,\n                // align: 'high',\n                offset: 0,\n                x: -50\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0,\n            gridLineWidth: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                color: plotColor,\n                marker: {\n                    enabled: false,\n                    radius: 4\n                }\n            }\n        },\n        lang: {\n            noData: DataPeriod + 'data not available for this station.'\n        },\n        exporting: {\n            buttons: {\n                contextButton: {\n                    menuItems: [\"printChart\",\n                        \"separator\",\n                        \"downloadPNG\",\n                        \"downloadJPEG\",\n                        \"downloadPDF\",\n                        \"downloadSVG\",\n                        \"separator\",\n                        \"downloadCSV\",\n                        \"downloadXLS\",\n                        //\"viewData\",\n                        \"openInCloud\"]\n                }\n            },\n            // chartOptions: {\n            //     title: {\n            //         text: title,\n            //         fontSize: '10px',\n            //         useHTML: true\n            //     }, yAxis: {\n            //         title: {\n            //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n            //             useHTML: true,\n            //             rotation: 250\n            //         }\n            //     },\n            // },\n            allowHTML: true,\n            // fallbackToExportServer: false,\n            // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n        }\n    };\n\n    return data;\n};\n\nmyApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod, forecastDate) {\n    let data = {\n        chart: {\n            marginLeft: 65,\n            /* marginRight: 0, */\n            /* spacingLeft: 0, */\n            /* spacingRight: 0 */\n            backgroundColor: 'transparent',\n            plotBorderColor: '#afafaf',\n            plotBorderWidth: 1,\n        },\n        title: {\n            text: title,\n            fontSize: '10px',\n            useHTML: true\n        },\n        subtitle: {\n            text: subTitle,\n            fontSize: '8px'\n        },\n        series: [{\n            name: SeriesName,\n            data: SeriesData,\n            marker: {\n                enabled: false,\n                symbol: 'diamond',\n                radius: 3\n            },\n        }],\n        xAxis: {\n            type: 'datetime',\n            title: {\n                text: XaxisLabel,\n                align: 'high',\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0\n        },\n        lang: {\n            noData: 'data not available for ' + forecastDate\n        },\n        yAxis: {\n            title: {\n                text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                useHTML: true,\n                rotation: 0,\n                // align: 'high',\n                offset: 0,\n                x: -50\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0,\n            gridLineWidth: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                color: plotColor\n            }\n        },\n        exporting: {\n            buttons: {\n                contextButton: {\n                    menuItems: [\"printChart\",\n                        \"separator\",\n                        \"downloadPNG\",\n                        \"downloadJPEG\",\n                        \"downloadPDF\",\n                        \"downloadSVG\",\n                        \"separator\",\n                        \"downloadCSV\",\n                        \"downloadXLS\",\n                        //\"viewData\",\n                        \"openInCloud\"]\n                }\n            },\n            // chartOptions: {\n            //     title: {\n            //         text: title,\n            //         fontSize: '10px',\n            //         useHTML: true\n            //     }, yAxis: {\n            //         title: {\n            //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n            //             useHTML: true,\n            //             rotation: 250\n            //         }\n            //     },\n            // },\n            allowHTML: true,\n            // fallbackToExportServer: false,\n            // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n        }\n    };\n    return data\n};\n\nmyApp.forceDownload = function (url, fileName) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        var urlCreator = window.URL || window.webkitURL;\n        var imageUrl = urlCreator.createObjectURL(this.response);\n        var tag = document.createElement('a');\n        tag.href = imageUrl;\n        tag.download = fileName;\n        document.body.appendChild(tag);\n        tag.click();\n        document.body.removeChild(tag);\n    }\n    xhr.send();\n}\n\n// myApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor) {\n//     let data = {\n//             chart: {\n//                 marginLeft: 65,\n//                 /* marginRight: 0, */\n//                 /* spacingLeft: 0, */\n//                 /* spacingRight: 0 */\n//                 backgroundColor: 'transparent',\n//                 plotBorderColor: '#afafaf',\n//                 plotBorderWidth: 1,\n//             },\n//             title: {\n//                 text: title,\n//                 fontSize: '10px',\n//                 useHTML: true\n//             },\n//             subtitle: {\n//                 text: subTitle,\n//                 fontSize: '8px'\n//             },\n//             series: [{\n//                 name: SeriesName,\n//                 data: SeriesData,\n//                 // marker: {\n//                 //     enabled: true,\n//                 //     symbol: 'diamond',\n//                 //     radius: 3\n//                 // },\n//             }],\n//             xAxis: {\n//                 type: 'datetime',\n//                 title: {\n//                     text: XaxisLabel,\n//                     align: 'high',\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0\n//             },\n//             yAxis: {\n//                 title: {\n//                     text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                     useHTML: true,\n//                     rotation: 0,\n//                     // align: 'high',\n//                     offset: 0,\n//                     x: -50\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0,\n//                 gridLineWidth: 0\n//             },\n//             legend: {\n//                 enabled: false\n//             },\n//             credits: {\n//                 enabled: false\n//             },\n//             plotOptions: {\n//                 series: {\n//                     color: plotColor\n//                 }\n//             },\n//             exporting: {\n//                 buttons: {\n//                     contextButton: {\n//                         menuItems: [\"printChart\",\n//                             \"separator\",\n//                             \"downloadPNG\",\n//                             \"downloadJPEG\",\n//                             \"downloadPDF\",\n//                             \"downloadSVG\",\n//                             \"separator\",\n//                             \"downloadCSV\",\n//                             \"downloadXLS\",\n//                             //\"viewData\",\n//                             \"openInCloud\"]\n//                     }\n//                 },\n//                 // chartOptions: {\n//                 //     title: {\n//                 //         text: title,\n//                 //         fontSize: '10px',\n//                 //         useHTML: true\n//                 //     }, yAxis: {\n//                 //         title: {\n//                 //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                 //             useHTML: true,\n//                 //             rotation: 250\n//                 //         }\n//                 //     },\n//                 // },\n//                 allowHTML: true,\n//                 // fallbackToExportServer: false,\n//                 // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n//             }\n//         }\n//     ;\n//     console.log(JSON.stringify(data));\n//     return data\n// };\n\n\nexport var AirPollutionWatchApp = myApp;","import { render } from \"./chartComponentForecast.vue?vue&type=template&id=73a67096&scoped=true\"\nimport script from \"./chartComponentForecast.vue?vue&type=script&lang=js\"\nexport * from \"./chartComponentForecast.vue?vue&type=script&lang=js\"\n\nimport \"./chartComponentForecast.vue?vue&type=style&index=0&id=73a67096&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-73a67096\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Map Controls\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n        <el-form\n            label-position=\"left\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n        >\n\n          <!--          <el-form-item label=\"Data Period\" prop=\"data_period\">-->\n          <!--            <el-select v-model=\"mapControlVariable.data_period\" placeholder=\"Data Period\"-->\n          <!--                       style=\"width: 100%\">-->\n          <!--              <el-option-->\n          <!--                  v-for=\"item in options.data_period\"-->\n          <!--                  :key=\"item.value\"-->\n          <!--                  :label=\"item.label\"-->\n          <!--                  :value=\"item.value\"-->\n          <!--                  :disabled=\"item.disabled\"-->\n          <!--              >-->\n          <!--              </el-option>-->\n          <!--            </el-select>-->\n          <!--          </el-form-item>-->\n\n          <el-form-item label=\"Select By\" prop=\"select_by\">\n            <el-select v-model=\"mapControlVariable.select_by\" placeholder=\"Select By\" style=\"width: 100%\">\n\n              <el-option\n                  v-for=\"item in options.select_by\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                  :disabled=\"item.disabled\"\n              >\n              </el-option>\n\n            </el-select>\n          </el-form-item>\n\n        </el-form>\n\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n            v-if=\"mapControlVariable.select_by ==='Location'\"\n        >\n\n          <el-form-item v-show=\"mapControlVariable.data_period !=='Recent'\" label=\"Select Location\"\n                        prop=\"Select Location\">\n\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-model=\"mapControlVariable.location_by\" placeholder=\"Select Location\" style=\"width: 100%\">\n                <el-option\n                    v-for=\"item in options.location_by\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n            </el-col>\n            <el-col :span=\"2\" style=\"width: 100%\">\n              <div class=\"\" style=\"width: 100%;text-align: center;\">\n                -\n              </div>\n            </el-col>\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-show=\"mapControlVariable.location_by ==='default_locations'\"\n                         v-model=\"mapControlVariable.default_location\"\n                         placeholder=\"Select Location\" style=\"width: 100%\">\n                <el-option\n                    v-for=\"item in options.default_location\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n              <div class=\"\" v-show=\"mapControlVariable.location_by ==='AOI'\">\n                <div class=\"feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===true\">Feature\n                  selected\n                </div>\n                <div class=\"no-feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===false\">No Feature\n                  selected\n                </div>\n              </div>\n            </el-col>\n\n          </el-form-item>\n\n          <el-form-item label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value1\"\n                  :options=\"cascaderData\"\n                  :props=\"props\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value2\"\n                  :options=\"cascaderData\"\n                  :props=\"props\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value3\"\n                  :options=\"cascaderData\"\n                  :props=\"props\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value4\"\n                  :options=\"cascaderData\"\n                  :props=\"props\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n\n        >\n          <el-form-item v-show=\"mapControlVariable.select_by ==='Parameter'\" label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n\n              <el-cascader\n                  v-model=\"mapControlVariable.parameter_by_pollutant_value\"\n                  :options=\"cascaderData\"\n                  :props=\"props\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n\n            </div>\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===false\"\n              label=\"Select Locations\" prop=\"Locations\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--              -->\n            <!--            </el-radio-group>-->\n\n\n            <el-radio-group v-model=\"mapControlVariable.radioValue\">\n              <el-radio :label=\"1\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='1'?false:true\"\n\n                                :IndexValue=\"1\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"2\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='2'?false:true\"\n                                :IndexValue=\"2\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"3\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='3'?false:true\"\n                                :IndexValue=\"3\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"4\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='4'?false:true\"\n                                :IndexValue=\"4\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n            </el-radio-group>\n\n\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===true\"\n              label=\"Select Stations\" prop=\"station\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--              -->\n            <!--            </el-radio-group>-->\n\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val1\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val2\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val3\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val4\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n\n        <el-button class=\"compute-now\" type=\"primary\" size=\"mini\" style=\"width: 100%\" @click=\"computeData\">compute\n        </el-button>\n\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport {mapActions, mapGetters, mapMutations, mapState} from \"vuex\";\nimport OLWKT from \"ol/format/WKT\";\nimport selectLocation from \"../common/selectLocation\";\nimport {threddDataSource} from \"../../config\"\nimport TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\nimport {AirPollutionWatchApp} from \"../../utils/dataForecast\";\nimport OlVectorLayer from \"ol/layer/Vector\";\nimport OlVectorSource from \"ol/source/Vector\";\nimport OlGeoJSON from \"ol/format/GeoJSON\";\nimport {getCenter as ol_extent_getCenter} from \"ol/extent\";\nimport eventHub from \"../../utils/utils\";\n\n// import {ElLoading} from 'element-plus';\nimport rgbLegend from '../../assets/rgblegend.jpg';\nimport usembassyPm2p5 from '../../assets/usembassyPm2p5.jpg';\nimport AODAeroNet from '../../assets/AODAeroNet.jpg';\nimport {Action} from \"../../store/actionType\";\nimport {Image as ImageLayer} from \"ol/layer\";\nimport ImageWMS from \"ol/source/ImageWMS\";\nimport Style from \"ol/style/Style\";\nimport {Icon} from \"ol/style\";\n\nexport default {\n  name: \"mapControlsForecast\",\n  data() {\n    return {\n      props: {\n        expandTrigger: 'hover',\n      },\n      maskCoordinate: null,\n      data__layer__initilize__Recent: false,\n      data__layer__initilize__Archive: false,\n      data__layer__initilize__Forecast: false,\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      options: {\n        data_period: [\n          {\n            value: 'Recent',\n            label: 'Recent',\n          },\n          {\n            value: 'Archive',\n            label: 'Archive',\n          },\n          {\n            value: 'Forecast',\n            label: 'Forecast',\n          }\n        ], select_by: [\n          {\n            value: 'Location',\n            label: 'Location',\n          },\n          {\n            value: 'Parameter',\n            label: 'Parameter',\n          }\n        ], location_by: [\n          {\n            value: 'default_locations',\n            label: 'Major Cities',\n          },\n          {\n            value: 'AOI',\n            label: 'Select on map',\n          }\n        ],\n        default_location: [],\n        ObservationStationOptions: []\n      },\n      PROXY_PREFIX: Action.Base + '/apps/airquality/WMSProxy/',\n      OnlyOnceForInitialCompute: true\n    }\n  },\n  watch: {\n    async SelectDataPeriod() {\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        this.AirPollutionWatchApp.startDate = new Date();\n        this.AirPollutionWatchApp.startDate.setDate(this.AirPollutionWatchApp.startDate.getDate() - 1);\n        this.AirPollutionWatchApp.endDate = new Date();\n\n      } else if (this.mapControlVariable.data_period == \"Archive\") {\n\n        this.AirPollutionWatchApp.startDate = new Date();\n        this.AirPollutionWatchApp.startDate.setDate(this.AirPollutionWatchApp.startDate.getDate() - 8);\n        this.AirPollutionWatchApp.endDate = new Date();\n        this.AirPollutionWatchApp.endDate.setDate(this.AirPollutionWatchApp.endDate.getDate() - 1);\n\n      } else {\n        this.AirPollutionWatchApp.forecastDate = new Date();\n        this.AirPollutionWatchApp.forecastDate.setDate(this.AirPollutionWatchApp.forecastDate.getDate() - 1);\n\n      }\n      // await this.addLayersToMap();\n      console.log(\"-----------------kkkk-------------------------\");\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        //  set defaults\n        this.mapControlVariable.select_by = \"Parameter\";\n        let recentPollutant = [1, 12];\n        this.mapControlVariable.parameter_by_pollutant_value = recentPollutant;\n        let kk = this.getStationInfoObject(recentPollutant[1]);\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = kk.defaultStation[0];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = kk.defaultStation[1];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = kk.defaultStation[2];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = kk.defaultStation[3];\n        // this.setLayerVisible(kk.layerId, true);\n\n      } else if (this.mapControlVariable.data_period == \"Archive\") {\n        //  set defaults\n        this.mapControlVariable.select_by = \"Parameter\";\n        let recentPollutant = [1, 12]\n        this.mapControlVariable.parameter_by_pollutant_value = recentPollutant;\n        let kk = this.getStationInfoObject(recentPollutant[1]);\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = kk.defaultStation[0];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = kk.defaultStation[1];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = kk.defaultStation[2];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = kk.defaultStation[3];\n        // this.setLayerVisible(kk.layerId, true);\n      } else {\n        //  set defaults\n        this.mapControlVariable.select_by = \"Parameter\";\n        let recentPollutant = [1, 13];\n        this.mapControlVariable.parameter_by_pollutant_value = recentPollutant;\n        // let kk = this.getStationInfoObject(recentPollutant[1]);\n        // this.setLayerVisible(kk.layerId, true);\n\n      }\n\n\n    },\n    SelectDefaultLocation(newVal, oldVal) {\n      if (newVal) {\n        // add it to vectorLayer\n        let selNewValObj = this.options.default_location.filter(function (x) {\n          return newVal == x.value\n        })[0];\n\n        let Feature = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        Feature.set(\"SelectBy\", \"Location\");\n        Feature.set(\"LocationBy\", \"default_location\");\n        this.WorkingVectorLayer.getSource().addFeature(Feature);\n\n        var view = this.mapObject.getView();\n        var resolution = view.getResolutionForExtent(Feature.getGeometry().getExtent(), this.mapObject.getSize());\n        var zoom = view.getZoomForResolution(resolution);\n        var center = ol_extent_getCenter(Feature.getGeometry().getExtent());\n        // redraw before zoom\n        setTimeout(function () {\n          view.animate({\n            center: center,\n            zoom: Math.min(zoom, 11)\n          });\n        }, 100);\n\n        var format = new OLWKT();\n        var wktfeaturegeom = format.writeGeometry(Feature.getGeometry(), {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        var geometryType = Feature.getGeometry().getType();\n\n        // let featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n\n        // let featureForExtent = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        // featureExtent = featureExtent.getGeometry().getExtent();\n\n        this.mapControlVariable.location_by_wktValue = wktfeaturegeom;\n        this.mapControlVariable.location_by_geometryType = geometryType;\n        this.mapControlVariable.location_by_default_level_value = selNewValObj.label;\n\n      } else {\n        this.mapControlVariable.location_by_wktValue = '';\n        this.mapControlVariable.location_by_geometryType = '';\n        this.mapControlVariable.location_by_default_level_value = '';\n      }\n\n      if (oldVal) {\n        // remove it from vector layer\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Location\" && f.get(\"LocationBy\") == \"default_location\" && f.get(\"id\") == oldVal) {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n      }\n    },\n    SelectLocationBy() {\n      this.mapControlVariable.default_location = '';\n    },\n    SelectByOption() {\n\n      if (this.mapControlVariable.select_by == \"Location\") {\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"default_location\") {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n\n        // this.mapControlVariable.parameter_by_pollutant_value = '';\n        //remove the layers which are on select by parameter\n        this.SetLayerOfSelectByParameterLayer(false);\n\n        if (this.mapControlVariable.data_period == \"Recent\") {\n          this.mapControlVariable.location_by_pollutant_value1 = [1, 12, 6];\n          this.mapControlVariable.location_by_pollutant_value2 = [1, 12, 7];\n          this.mapControlVariable.location_by_pollutant_value3 = [1, 11, 9];\n          this.mapControlVariable.location_by_pollutant_value4 = [1, 11, 14];\n        } else if (this.mapControlVariable.data_period == \"Archive\") {\n\n\n          this.mapControlVariable.location_by = 'default_locations';\n          this.mapControlVariable.default_location = 1;\n          this.mapControlVariable.location_by_pollutant_value1 = [1, 12, 6];\n          this.mapControlVariable.location_by_pollutant_value2 = [1, 12, 7];\n          this.mapControlVariable.location_by_pollutant_value3 = [1, 11, 9];\n          this.mapControlVariable.location_by_pollutant_value4 = [1, 11, 14];\n        } else {\n          this.mapControlVariable.location_by = 'default_locations';\n          this.mapControlVariable.default_location = 1;\n          this.mapControlVariable.location_by_pollutant_value1 = [1, 13];\n          this.mapControlVariable.location_by_pollutant_value2 = [2, 22];\n          this.mapControlVariable.location_by_pollutant_value3 = [3, 32];\n          this.mapControlVariable.location_by_pollutant_value4 = [4, 42];\n        }\n      } else {\n\n        if (this.mapControlVariable.data_period == \"Recent\") {\n          this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n        } else if (this.mapControlVariable.data_period == \"Archive\") {\n          this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n        } else {\n          this.mapControlVariable.parameter_by_pollutant_value = [1, 13];\n        }\n\n        // no single default location on parameter\n        this.mapControlVariable.default_location = '';\n\n        this.SetLayerOfSelectByParameterLayer(true);\n      }\n\n      this.ObservationStationOption();\n\n    },\n    async SelectByParameterPollutant(newPollutant, oldPollutant) {\n\n      if (oldPollutant) {\n        if (oldPollutant.length) {\n          let kk = this.getStationInfoObject(oldPollutant[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            if (kk.layerProperties.initilize == true) {\n              layer.setVisibleDivBind(false);\n            }\n          }\n        }\n      }\n      let kk = this.getStationInfoObject(newPollutant[1]);\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        await this.AddLayerToLayerList(kk);\n        let layer = this.getBindedLayer(kk.layerId);\n        if (kk.layerProperties.initilize == true) {\n          console.log(\"newPollutant\");\n          console.log(newPollutant);\n          layer.setVisibleDivBind(true);\n        }\n        // else {\n        //   this.mapControlVariable.parameter_by_pollutant_value = [];\n        // }\n        if (layer == undefined) {\n          if (this.OnlyOnceForInitialCompute) {\n            this.OnlyOnceForInitialCompute = false;\n\n            setTimeout(() => {\n              eventHub.$emit('ShowNoDataForecast');\n            }, 1500);\n          }\n        }\n        if (kk.stationData) {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = true;\n          this.options.ObservationStationOptions = kk.childrenData;\n        } else {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = false;\n          this.options.ObservationStationOptions = [];\n        }\n      }\n\n      //  forecast\n      this.mapControlVariable.is_parameter_by_pollutant_value_stationData = false;\n      this.mapControlVariable.parameter_by_location__1.location_by = 'default_locations';\n      this.mapControlVariable.parameter_by_location__2.location_by = 'default_locations';\n      this.mapControlVariable.parameter_by_location__3.location_by = 'default_locations';\n      this.mapControlVariable.parameter_by_location__4.location_by = 'default_locations';\n\n      this.mapControlVariable.parameter_by_location__1.default_location = 1;\n      this.mapControlVariable.parameter_by_location__2.default_location = 2;\n      this.mapControlVariable.parameter_by_location__3.default_location = 3;\n      this.mapControlVariable.parameter_by_location__4.default_location = 4;\n\n      eventHub.$emit('SelectByParameterDefaultLocation');\n\n\n    },\n    location_by_pollutant_value1(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    }, location_by_pollutant_value2(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    }, location_by_pollutant_value3(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    }, location_by_pollutant_value4(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n  },\n  components: {selectLocation},\n  methods: {\n    ...mapActions([\"getCityData\", \"PostSlicedFromCatalog\", \"getGeoJsonForOneSatation\", \"SliceFromCatalogForecast\",\"PostCreateGIFMapImage\",]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\", \"addLegend\", \"removeLegend\"]),\n    changeDataPeriod() {\n\n    },\n\n    featureSelectorDeleteUpdate() {\n      var wktfeaturegeom, geometryType;\n      if (this.selectInteraction) {\n        if (this.SelectByOption == 'Location') {\n          if (this.selectInteraction.getFeatures().getLength()) {\n\n            var features = this.selectInteraction.getFeatures();\n            features.forEach(function (f) {\n              var format = new OLWKT();\n              wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n                dataProjection: 'EPSG:4326',\n                featureProjection: 'EPSG:3857'\n              });\n              geometryType = f.getGeometry().getType();\n            });\n\n            // let Param = {\n            //   geometryType: geometryType,\n            //   wkt: wktfeaturegeom,\n            // };\n            // console.log(Param);\n\n            if (this.mapControlVariable.location_by == 'AOI') {\n\n              this.mapControlVariable.is_AOI_Feature_selected = true;\n              this.mapControlVariable.location_by_wktValue = wktfeaturegeom;\n              this.mapControlVariable.location_by_geometryType = geometryType;\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: \"To select this feature you need to select 'Select on map' from drop down menu\",\n                type: 'warning'\n              });\n              this.selectInteraction.getFeatures().clear();\n              this.mapControlVariable.is_AOI_Feature_selected = false;\n              this.mapControlVariable.location_by_wktValue = '';\n              this.mapControlVariable.location_by_geometryType = '';\n            }\n\n          } else {\n            if (this.mapControlVariable.location_by == 'AOI') {\n              this.mapControlVariable.is_AOI_Feature_selected = false;\n              this.mapControlVariable.location_by_wktValue = '';\n              this.mapControlVariable.location_by_geometryType = '';\n            }\n          }\n        }\n      }\n    },\n    CatalogSlicingParam(url, startDate, endDate) {\n      let param = {\n        url: url,\n        data_ext: '.nc',\n        startDate: startDate,\n        endDate: endDate,\n      }\n      return param\n    },\n\n    async addRasterLayerToMap(kk) {\n      let slicingParam, responseData, resPonseParsed, wmsList = [], isTrue;\n      let catalogURl = threddDataSource + kk.catalog;\n      if (this.mapControlVariable.data_period != \"Forecast\") {\n        slicingParam = this.CatalogSlicingParam(catalogURl, kk.getStartDate(), kk.getEndDate());\n        responseData = await this.PostSlicedFromCatalog(slicingParam);\n        resPonseParsed = responseData;\n        isTrue = resPonseParsed.data.length;\n\n        if (isTrue) {\n          resPonseParsed.data.forEach(function (fileName) {\n            let url = catalogURl.replace(\"/catalog/\", \"/wms/\").replace(\"catalog.xml\", fileName);\n            wmsList.push(url)\n          });\n        }\n\n      } else {\n        let ForcastdateFormat = this.AirPollutionWatchApp.formatForecastDate(this.AirPollutionWatchApp.forecastDate);\n\n        let param = {\n          url: catalogURl,\n          data_ext: '.nc',\n          runDate: ForcastdateFormat\n        };\n\n        let responseData = await this.SliceFromCatalogForecast(param);\n\n        responseData.data.forEach((a) => {\n          wmsList.push(catalogURl.replace('catalog.xml', ForcastdateFormat).replace('/catalog/', '/wms/') + '/' + a);\n        });\n        // wmsList = await this.AirPollutionWatchApp.getForecastWMSList(catalogURl);\n        isTrue = wmsList.length;\n        console.log(isTrue);\n      }\n      if (isTrue) {\n        var Newlayer;\n        if (kk.isTimeDimensionLayer) {\n          if (kk.useSLD) {\n            let SLD = kk.SLD.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n            let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&SLD_BODY=';\n            let legendWMS = '';\n            if (!kk.legendPath) {\n              if (Array.isArray(wmsList)) {\n                legendWMS = wmsList[0] + LegendParameter + encodeURIComponent(SLD).toString();\n              } else {\n                legendWMS = wmsList + LegendParameter + encodeURIComponent(SLD).toString();\n              }\n            } else {\n              legendWMS = kk.legendPath\n            }\n            console.log(legendWMS);\n            let timedimensionTilePara = kk.threddLayerProp;\n            timedimensionTilePara.source.params.SLD_BODY = SLD;\n            timedimensionTilePara.source.url = wmsList;\n            timedimensionTilePara.legendPath = rgbLegend;\n            timedimensionTilePara.wmsList = wmsList;\n            timedimensionTilePara.changeWMSProxy = true;\n            // timedimensionTilePara.showAnimationButton = true;\n            // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n            let le = {\n              title: timedimensionTilePara.title,\n              // typeGeom: 'Point',\n              style: new Style({\n                image: new Icon({\n                  src: rgbLegend,\n                  crossOrigin: 'anonymous' // Enable print\n                })\n              }),\n              size: [60, 30]\n            };\n            timedimensionTilePara.OLEXTLegendObject = le;\n\n\n            Newlayer = new TimeDimensionTile(timedimensionTilePara);\n            await Newlayer.init().then(() => {\n              this.mapObject.addThreddsLayer(Newlayer);\n              let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true, 'withOpacityChange');\n              l5.setVisibleDivBind(kk.VisibleDivBind);\n              let properties = Newlayer.getProperties()\n              if (properties.mask) {\n                console.log(properties)\n                if (properties.CropOrMask == 'crop') {\n                  Newlayer.setCrop(this.maskCoordinate);\n                } else {\n                  Newlayer.setMask(this.maskCoordinate);\n                }\n              }\n              this.appendTimeSeriesLayerCollection(l5);\n              // myApp.AllBindedLayersList.push(l5);\n            });\n          } else {\n            let timedimensionTilePara = kk.threddLayerProp;\n            let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&LAYERS=' + timedimensionTilePara.source.params.LAYERS + '&COLORSCALERANGE=' + timedimensionTilePara.source.params.COLORSCALERANGE + '&STYLES=' + timedimensionTilePara.source.params.STYLES;\n            let legendWMS = '';\n            if (!kk.legendPath) {\n              if (Array.isArray(wmsList)) {\n                legendWMS = wmsList[0] + LegendParameter;\n              } else {\n                legendWMS = wmsList + LegendParameter;\n              }\n            } else {\n              legendWMS = kk.legendPath\n            }\n            timedimensionTilePara.source.url = wmsList;\n            timedimensionTilePara.legendPath = this.PROXY_PREFIX + legendWMS;\n            timedimensionTilePara.wmsList = wmsList;\n            timedimensionTilePara.changeWMSProxy = true;\n            // timedimensionTilePara.showAnimationButton = true;\n            // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n            let le = {\n              id: timedimensionTilePara.id,\n              title: timedimensionTilePara.title,\n              typeGeom: 'Point',\n              style: new Style({\n                image: new Icon({\n                  src: this.PROXY_PREFIX + legendWMS,\n                  crossOrigin: 'anonymous' // Enable print\n                })\n              }),\n              size: [60, 250]\n            };\n            timedimensionTilePara.OLEXTLegendObject = le;\n\n\n            timedimensionTilePara.animationDownloadFunction = async (obj) => {\n              let isProcessing = obj.getIsProcessing();\n\n\n              if (!isProcessing) {\n                console.log(\"test\");\n                console.log(isProcessing);\n                obj.setIsProcessing(true);\n                let fps = obj.fpsInput.value;\n                let propList = [];\n                let prop = obj.getProperties();\n                console.log(prop);\n                obj.AllDateAndTimeList.forEach((abcT) => {\n                  let currentFormat = obj.aTime.getAttribute(\"format\");\n                  let timeButtom_text = undefined;\n\n                  if (currentFormat === 'ISO') {\n                    timeButtom_text = abcT.dateisoFormatForLevel;\n                  } else {\n                    timeButtom_text = abcT.localDateTime;\n                  }\n                  propList.push({\n                    ...prop.animationPlot,\n                    wms_url: abcT.WMSURL.replace('https', 'http'),\n                    wms_layer: prop.source.params.LAYERS,\n                    wms_time: abcT.dateisoFormat,\n                    wms_style: prop.source.params.STYLES,\n                    wms_NUMCOLORBANDS: prop.source.params.NUMCOLORBANDS,\n                    ColorScale: prop.source.params.COLORSCALERANGE,\n                    bottom_text: timeButtom_text,\n                    RGB: prop.RGBComposite\n                  })\n                });\n\n                let collectProp = {layersDetail: propList, fps: fps}\n                let response = await this.PostCreateGIFMapImage(collectProp);\n                let DownLoadURL = Action.Base + '/' + Action.GetAnimationImage + \"?ImageName=\" + response.Image + \"&gif=1\";\n                this.AirPollutionWatchApp.forceDownload(DownLoadURL, prop.title + '.gif');\n                obj.setIsProcessing(false);\n\n              } else {\n\n                this.$notify({\n                  title: 'Warning',\n                  message: 'Please wait for few second animation is being gererated by the system',\n                  type: 'warning'\n                });\n\n              }\n            };\n\n\n            Newlayer = new TimeDimensionTile(timedimensionTilePara);\n            let AddRemoveLegendFunction = function () {\n              if (this.getProperties().visible) {\n                that.addLegend(this.getProperties().OLEXTLegendObject);\n              } else {\n                that.removeLegend(this.getProperties().OLEXTLegendObject);\n              }\n            };\n\n            let that = this;\n            Newlayer.on('change:visible', AddRemoveLegendFunction);\n            await Newlayer.init().then(() => {\n              this.mapObject.addThreddsLayer(Newlayer);\n              // myApp.map.addThreddsLayer(val);\n              let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true);\n              l5.setVisibleDivBind(kk.VisibleDivBind);\n              let properties = Newlayer.getProperties()\n              if (properties.mask) {\n                if (properties.CropOrMask == 'crop') {\n                  Newlayer.setCrop(this.maskCoordinate);\n                } else {\n                  Newlayer.setMask(this.maskCoordinate);\n                }\n              }\n              this.appendTimeSeriesLayerCollection(l5);\n              // myApp.AllBindedLayersList.push(l5);\n            });\n          }\n        }\n        kk.isDataThere = true;\n\n\n        if (this.OnlyOnceForInitialCompute) {\n          this.OnlyOnceForInitialCompute = false;\n          setTimeout(() => {\n            this.computeData();\n          }, 1500);\n        }\n      } else {\n        kk.initilize = false;\n        this.$notify({\n          title: 'Warning',\n          message: kk.threddLayerProp.title + ' data is not available.',\n          type: 'warning'\n        });\n      }\n    },\n\n    async addVectorLayerToMap(obj1, obj2, resolve) {\n      let sd = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n      let ed = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.endDate);\n      let regionOrCountry = 0;\n      let Param = '?ModelClass=' + obj2.ModelClass + \"&ModelClassDataList=\" + obj2.ModelClassDataList + '&typeName=' + obj2.typeName + '&StartDate=' + sd + '&EndDate=' + ed + '&rid=' + regionOrCountry\n      let GeoJSON = await this.getGeoJsonForOneSatation(Param);\n      let GeoJSONParse = GeoJSON;\n      obj2.childrenData = [];\n      GeoJSONParse.features.forEach(function (objFeature) {\n        let stationOnCascaderObject = {\n          label: objFeature.properties.name,\n          value: objFeature.properties.id, folder_name: objFeature.properties.folder_name\n        };\n        obj2.childrenData.push(stationOnCascaderObject);\n      });\n      if (GeoJSONParse.features.length) {\n        obj2.isDatathere = true;\n        let legendPathImage = obj2.value == 11 ? AODAeroNet : usembassyPm2p5;\n        var VectorLayer = new OlVectorLayer({\n          id: obj2.layerId,\n          title: obj2.label,\n          visible: false,\n          legendPath: legendPathImage,\n          selId: [],\n          source: new OlVectorSource({\n            features: (new OlGeoJSON()).readFeatures(GeoJSONParse),\n          }),\n          style: obj2.styleFunction,\n          zIndex: 22\n        });\n        this.mapObject.addLayer(VectorLayer);\n        let l3 = new LayerSwitcher(\".layerCollection\", VectorLayer, false);\n        l3.setVisibleDivBind(false);\n        this.appendTimeSeriesLayerCollection(l3);\n      } else {\n        obj2.isDatathere = false;\n      }\n      resolve();\n    },\n    ClearWMSWithNoDataAndVectorDatawithNodata() {\n      // for clearing wms with no data on data base\n      this.AirPollutionWatchApp.cascaderObj.forEach((value) => {\n        let id = value.threddLayerProp.id;\n        let isDatathere = value.isDataThere;\n        this.AirPollutionWatchApp.cascaderObj.reduce(function (total, currentValue) {\n          let dd = currentValue.children.filter(function (currentValue1) {\n            if (currentValue1.layerId === id) {\n              if (isDatathere === false) {\n                return false\n              } else {\n                return true\n              }\n            } else {\n              return true\n            }\n          });\n          currentValue.children = dd;\n        }, 0)\n        this.AirPollutionWatchApp.cascaderObj.reduce(function (total, currentValue, currentIndex, arr) {\n          if (!currentValue.children.length) {\n            arr.splice(currentIndex, 1);\n          }\n        }, 0);\n      });\n\n      // for clearing vector data with no data\n      this.AirPollutionWatchApp.cascaderObj.reduce(function (total, currentValue, currentIndex, arr) {\n        let dd = currentValue.children.filter(function (currentValue1) {\n          if (currentValue1.stationData === true && currentValue1.isDatathere === false) {\n            return false\n          } else {\n            return true\n          }\n        });\n        currentValue.children = dd;\n        if (!currentValue.children.length) {\n          arr.splice(currentIndex, 1);\n        }\n      }, 0);\n\n    },\n    enableTrueColorMap() {\n      this.TimeSeriesLayerCollection.forEach((val) => {\n        let id = val.getProperties().id;\n        if (id.split(\"__\")[0].toUpperCase() == this.mapControlVariable.data_period.toUpperCase()) {\n          if (id == this.mapControlVariable.data_period + \"__TerraModisTrueColor\") {\n            val.setVisibleDivBind(true);\n          } else {\n            val.setVisibleDivBind(false);\n          }\n        } else {\n          val.setVisibleDivBind(false);\n        }\n      });\n    },\n    // async addLayersToMap() {\n    //   var that = this;\n    //   let aa = \"data__layer__initilize__\" + that.mapControlVariable.data_period;\n    //\n    //   if (that[aa] == false) {\n    //     const loading = ElLoading.service({\n    //       lock: true,\n    //       text: 'Loading ' + that.mapControlVariable.data_period + \" data.....\",\n    //       background: 'rgba(0, 0, 0, 0.7)',\n    //     });\n    //     var PromiseListRasterData = [];\n    //     for (let kk of this.AirPollutionWatchApp.cascaderObj) {\n    //       let al1 = new Promise((resolve) => {\n    //         setTimeout(this.addRasterLayerToMap, 1, kk, resolve);\n    //       });\n    //       PromiseListRasterData.push(al1);\n    //     }\n    //     // var PromiseListVectorData = [];\n    //     for (let obj1 of this.AirPollutionWatchApp.cascaderObj) {\n    //       for (let obj2 of obj1.children) {\n    //         if (obj2.stationData == true) {\n    //           let al2 = new Promise((resolve) => {\n    //             setTimeout(this.addVectorLayerToMap, 1, obj1, obj2, resolve);\n    //           });\n    //           // PromiseListVectorData.push(al2);\n    //           PromiseListRasterData.push(al2);\n    //         }\n    //       }\n    //     }\n    //     console.log(\"------------------Before promise-----------------\");\n    //     await Promise.all(PromiseListRasterData).then(() => {\n    //       this.enableTrueColorMap();\n    //       this.ClearWMSWithNoDataAndVectorDatawithNodata();\n    //       that[aa] = true;\n    //       this.ObservationStationOption();\n    //       console.log(\"------------------Inside promise-----------------\");\n    //       loading.close();\n    //     });\n    //   } else {\n    //     this.enableTrueColorMap();\n    //   }\n    // },\n    //\n    computeData() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n          if (this.mapControlVariable.parameter_by_location__1.wktValue && this.mapControlVariable.parameter_by_location__2.wktValue && this.mapControlVariable.parameter_by_location__3.wktValue && this.mapControlVariable.parameter_by_location__4.wktValue) {\n            eventHub.$emit('getVisualization');\n          } else {\n            this.$notify({\n              title: 'Warning',\n              message: 'Please select locations on all dropdown menu.',\n              type: 'warning'\n            });\n          }\n\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please Select a pollutant',\n            type: 'warning'\n          });\n        }\n      } else {\n        if (this.location_by_pollutant_value1.length > 0 && this.location_by_pollutant_value2.length > 0 && this.location_by_pollutant_value3.length > 0 && this.location_by_pollutant_value4.length > 0 && this.mapControlVariable.location_by_wktValue) {\n          eventHub.$emit('getVisualization');\n        } else {\n\n\n          this.$notify({\n            title: 'Warning',\n            message: 'Please select pollutants on all dropdown menu.',\n            type: 'warning'\n          });\n        }\n      }\n    },\n    ObservationStationOption() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.children) {\n              delete obj2.children;\n            }\n          });\n        });\n      } else {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.childrenData) {\n              obj2.children = obj2.childrenData;\n            }\n          });\n        });\n      }\n    },\n    getStationInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    SetLayerOfSelectByParameterLayer(IsViz) {\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n        let layer = this.getBindedLayer(kk.layerId);\n        if (IsViz) {\n          layer.setVisibleDivBind(IsViz);\n        } else {\n          layer.setVisibleDivBind(IsViz);\n        }\n      }\n    },\n    setLayerVisible(layerId, IsViz) {\n      let layer = this.getBindedLayer(layerId);\n      if (IsViz) {\n        layer.setVisible(IsViz);\n      } else {\n        layer.setVisibleDivBind(IsViz);\n      }\n    },\n    async onChangePollutantsOnSelectByLocation(newVal, oldVal) {\n      if (newVal.length) {\n        let kk = this.getStationInfoObject(newVal[1]);\n        if (Object.keys(kk).length != 0) {\n          await this.AddLayerToLayerList(kk);\n          let layer = this.getBindedLayer(kk.layerId);\n          layer.setVisibleDivBind(true);\n        }\n      }\n      if (oldVal.length) {\n        let count = 0;\n        if (this.location_by_pollutant_value1.length) {\n          if (this.location_by_pollutant_value1[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value2.length) {\n          if (this.location_by_pollutant_value2[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value3.length) {\n          if (this.location_by_pollutant_value3[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value4.length) {\n          if (this.location_by_pollutant_value4[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (count === 0) {\n          let kk = this.getStationInfoObject(oldVal[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n      console.log(newVal)\n      console.log(oldVal)\n    },\n    async AddLayerToLayerList(kk) {\n      console.log(\"called\");\n\n      if (kk.layerProperties.initilize == false) {\n        console.log(\"ok not initilized\");\n\n        kk.layerProperties.initilize = true;\n        if (kk.stationData == true) {\n          let GeoServerWMSURL = 'http://localhost:8080/geoserver/AirQuality/wms';\n          let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n          let lyr = kk.layerProperties.layer;\n          let le = {\n            title: kk.layerProperties.title,\n            // typeGeom: 'Point',\n            style: new Style({\n              image: new Icon({\n                src: WMSURLWithRequestParameter + lyr,\n                crossOrigin: 'anonymous' // Enable print\n              })\n            }),\n            size: [60, 30]\n          };\n          let layerObj = new ImageLayer({\n            id: kk.layerProperties.id,\n            title: kk.layerProperties.title,\n            visible: kk.layerProperties.visible,\n            legendPath: WMSURLWithRequestParameter + lyr,\n            zIndex: kk.layerProperties.zIndex,\n            OLEXTLegendObject: le,\n            opacity: kk.layerProperties.opacity,\n            source: new ImageWMS({\n              url: GeoServerWMSURL,\n              crossOrigin: 'anonymous',\n              params: {'LAYERS': lyr},\n              serverType: 'geoserver',\n            }),\n          });\n          this.mapObject.addLayer(layerObj);\n          let l5 = new LayerSwitcher(\".layerCollection\", layerObj, false, false);\n          this.appendTimeSeriesLayerCollection(l5);\n          let sd = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n          let ed = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.endDate);\n          let regionOrCountry = 0;\n          let Param = '?ModelClass=' + kk.ModelClass + \"&ModelClassDataList=\" + kk.ModelClassDataList + '&typeName=' + kk.typeName + '&StartDate=' + sd + '&EndDate=' + ed + '&rid=' + regionOrCountry\n          let dataResponse = await this.getGeoJsonForOneSatation(Param);\n          kk.childrenData = dataResponse.data\n        } else {\n          console.log(\"before-----\");\n          await this.addRasterLayerToMap(kk.layerProperties);\n          // await this.addRasterLayerToMap(kk.layerProperties);\n          console.log(\"after-----\");\n        }\n      }\n    },\n  },\n  computed: {\n    ...mapState([\"selectInteraction\", \"mapObject\", \"TimeSeriesLayerCollection\", \"WorkingVectorLayer\", \"mapControlVariable\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n    cascaderData() {\n      return this.AirPollutionWatchApp.cascaderObj;\n    },\n    SelectDefaultLocation() {\n      return this.mapControlVariable.default_location;\n    },\n    SelectLocationBy() {\n      return this.mapControlVariable.location_by;\n    },\n    SelectByOption() {\n      return this.mapControlVariable.select_by;\n    },\n    SelectDataPeriod() {\n      return this.mapControlVariable.data_period;\n    },\n    SelectByParameterPollutant() {\n      return this.mapControlVariable.parameter_by_pollutant_value;\n    },\n    location_by_pollutant_value1() {\n      return this.mapControlVariable.location_by_pollutant_value1;\n    },\n    location_by_pollutant_value2() {\n      return this.mapControlVariable.location_by_pollutant_value2;\n    },\n    location_by_pollutant_value3() {\n      return this.mapControlVariable.location_by_pollutant_value3;\n    },\n    location_by_pollutant_value4() {\n      return this.mapControlVariable.location_by_pollutant_value4;\n    },\n  },\n  async mounted() {\n    setTimeout(() => {\n      this.mapControlVariable.parameter_by_pollutant_value = [1, 14];\n    }, 1500);\n\n    setTimeout(() => {\n      this.selectInteraction.on('select', () => {\n        this.featureSelectorDeleteUpdate();\n      });\n    }, 2000);\n\n    // setTimeout(() => {\n    //\n    //   this.computeData();\n    // }, 2500);\n\n  },\n  async created() {\n    let defaultLocation = await this.getCityData();\n    this.options.default_location = defaultLocation.data;\n  },\n  deactivated() {\n\n  }\n}\n</script>\n\n<style scoped>\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.pollutant-cascader:not(:last-child) {\n  padding-bottom: 10px;\n}\n\n.body-container {\n  height: calc(100% - 50px);\n}\n\nbutton.el-button.el-button--primary.el-button--mini.compute-now, button.el-button.el-button--primary.el-button--mini.compute-now:focus, button.el-button.el-button--primary.el-button--mini.compute-now:hover {\n  background-color: #66b1ff;\n  border-color: #66b1ff;\n}\n</style>","import { render } from \"./mapControlsForecast.vue?vue&type=template&id=93723b5a&scoped=true\"\nimport script from \"./mapControlsForecast.vue?vue&type=script&lang=js\"\nexport * from \"./mapControlsForecast.vue?vue&type=script&lang=js\"\n\nimport \"./mapControlsForecast.vue?vue&type=style&index=0&id=93723b5a&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-93723b5a\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div id=\"map-container2\" ref=\"LayerSelectorDropdown\">\n    </div>\n    <!--    <div id=\"layerSwitcherDiv\" class=\"ol-unselectable ol-control\" @click=\"LayerSwitcherClick()\">-->\n    <!--      <button>-->\n    <!--        <img src=\"@/assets/layers.svg\" style=\"height: 20px;width: 20px;\">-->\n    <!--      </button>-->\n    <!--    </div>-->\n\n    <!--    <el-drawer-->\n    <!--        title=\"Layers\"-->\n    <!--        v-model=\"drawer\"-->\n    <!--        custom-class=\"drawerCustomCSS\"-->\n    <!--        :append-to-body=\"drawerAppendToBody\"-->\n    <!--        :modal=\"false\"-->\n    <!--        :modal-class=\"'drawerForLayersList'\"-->\n    <!--    >-->\n    <!--      <span>-->\n    <!--        <div class=\"layerCollection\"></div>-->\n    <!--          </span>-->\n    <!--    </el-drawer>-->\n    <PrintMap></PrintMap>\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\n// import Control from \"ol/control/Control\"\n// import OSM from \"ol/source/OSM\";\nimport XYZ from 'ol/source/XYZ';\n// import {Image as ImageLayer, Tile as TileLayer} from 'ol/layer';\nimport {Tile as TileLayer} from 'ol/layer';\n// import TileWMS from \"ol/source/TileWMS\";\n// import ImageWMS from 'ol/source/ImageWMS';\nimport View from \"ol/View\";\nimport {dataSelect} from \"../../utils/data\";\nimport eventHub from \"../../utils/utils\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import EDALSLD from 'ol-plus/sld/EDALSLD';\n// import {ThreddsServer} from '../config';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n// import {lineString, lineDistance, area as turfArea,polygon as turfPolygon, length as turfLength} from '@turf/turf';\nimport {getArea, getLength,} from 'ol/sphere';\nimport LineString from 'ol/geom/LineString';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n\n// import {MajorBasinExtent, BasinExtent, mbasin, dataSelect, WMSSLD, legendImage} from \"../utils/data\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import {ThreddsServer} from \"../utils/config\";\n\n\n// import 'ol-ext/control/Search.css';\nimport SearchNominatim from 'ol-ext/control/SearchNominatim';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nimport Text from \"ol/style/Text\";\nimport {Icon} from 'ol/style';\nimport {toSize} from 'ol/size';\nimport ImageIcon from '../../assets/markers_default.png';\nimport {getCenter as ol_extent_getCenter} from 'ol/extent';\nimport GeoJSON from \"ol/format/GeoJSON\";\n// import Legend from \"ol-ext/legend/Legend\";\nimport Legend from \"../../utils/customLegend\"\nimport LegendControl from \"ol-ext/control/Legend\";\nimport CanvasScaleLine from \"ol-ext/control/CanvasScaleLine\";\nimport PrintDialog from \"ol-ext/control/PrintDialog\";\n\nimport OLPolygon from 'ol/geom/Polygon';\nimport OlSelect from 'ol/interaction/Select';\nimport OlDraw from 'ol/interaction/Draw';\nimport OlExtTextButton from 'ol-ext/control/TextButton';\nimport Bar from 'ol-ext/control/Bar';\nimport OlExtButton from 'ol-ext/control/Button';\nimport OlExtToggle from 'ol-ext/control/Toggle';\n// import 'ol-ext/control/Bar.css'\nimport CircleStyle from \"ol/style/Circle\";\n// import ScaleLine from \"ol/control/ScaleLine\";\nimport CanvasTitle from \"ol-ext/control/CanvasTitle\";\nimport {defaults} from \"ol/control\";\n\nimport {saveAs} from 'file-saver';\nimport {jsPDF} from \"jspdf\";\n\nimport {mapMutations, mapState} from 'vuex';\n\nimport PrintMap from \"../common/PrintMap\";\n\n// import {GeoServerHost} from \"../config\";\n\nexport default {\n  name: \"mapComponentEmission\",\n  components: {PrintMap},\n  data() {\n    return {\n      // drawerAppendToBody: true,\n      mapObj: '',\n      HighLightedLayer: '',\n      view: '',\n      mapObject: '',\n      MajorBasin: '',\n      AllLayers: '',\n      selectedFilesOnAYear: [],\n      // drawer: true,\n    }\n  },\n  created() {\n    this.mapControlVariable.LegendObject = new Legend({\n      title: 'Legend',\n      margin: 3,\n      // items: legendItems\n      size: [60, 30]\n    });\n\n  },\n  methods: {\n    ...mapMutations([\"setSelectedLayerObj\", \"appendTimeSeriesLayerCollection\", \"setSelectInteraction\", \"setMapObject\", \"setWorkingVectorLayer\", \"addLegend\", \"removeLegend\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\"]),\n    mapInitilization() {\n\n      // let osm = new TileLayer({\n      //   source: new OSM({attributions: [],}),\n      //   // visible:false\n      // });\n\n      let esri_world_topomap = new TileLayer({\n        visible: true,\n        zIndex: 1,\n        source: new XYZ({\n          attributions: [],\n          url:\n              'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n              'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n          crossOrigin: \"Anonymous\"\n        }),\n      });\n\n      let view = new View({\n        center: [9388155.512006583, 3291367.8109067543],\n        zoom: 4,\n        extent: [6503341.871251959, 2102433.1683110143, 11318987.116482425, 4525463.09170066]\n\n      });\n      // let ScaleControl = new ScaleLine({\n      //   units: 'metric'\n      // });\n      //\n\n      var map = new Map({\n        layers: [],\n        // target: this.$refs['map-root'],\n        renderer: 'canvas',\n        target: 'map-container2',\n        controls: defaults({\n          attribution: false\n        }).extend([]),\n        view: view,\n      });\n      // map.addLayer(osm);\n      map.addLayer(esri_world_topomap);\n      this.mapObject = map;\n      window.mapObject = map;\n      this.view = view;\n\n      // this.mapObject.addControl(\n      //     new Control({\n      //       element: document.getElementById('layerSwitcherDiv')\n      //     })\n      // );\n      map.getView().fit([6503341.871251959, 2102433.1683110143, 11318987.116482425, 4525463.09170066], map.getView());\n      this.setMapObject(this.mapObject);\n    },\n    legendObjectCollection() {\n      let legendObjectEnabled = [];\n      this.TimeSeriesLayerCollection.forEach(function (layerObj) {\n        let Properties = layerObj.getProperties();\n        console.log(Properties.legendPath);\n        let lObj = {\n          title: Properties.title,\n          // typeGeom: 'Point',\n          style: new Style({\n            image: new Icon({\n              src: Properties.legendPath,\n              crossOrigin: 'anonymous' // Enable print\n            })\n          })\n        };\n        legendObjectEnabled.push(lObj)\n      });\n      return legendObjectEnabled;\n    },\n    addGeoCodingAndInteractionBar() {\n      var map = this.mapObject;\n\n// Set the control grid reference\n      var search = new SearchNominatim({\n        polygon: true,\n        reverse: false,\n        position: true,\t// Search, with priority to geo position,\n        // maxHistory: -1,\n        className: 'OSMBasedGeocodingEmissionPage',\n      });\n\n// search.set('copy', false)\n\n      var GeoCodingAndDrawLayer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 999\n      });\n\n      this.setWorkingVectorLayer(GeoCodingAndDrawLayer);\n\n      map.addLayer(GeoCodingAndDrawLayer);\n\n      map.addControl(search);\n\n\n// Select feature when click on the reference index\n      search.on('select', function (e) {\n        // console.log(e);\n        // GeoCodingAndDrawLayer.getSource().clear();\n        removePreviousSearchFeature();\n        // Check if we get a geojson to describe the search\n        if (e.search.geojson) {\n          var format = new GeoJSON();\n          var f = format.readFeature(e.search.geojson, {\n            dataProjection: \"EPSG:4326\",\n            featureProjection: map.getView().getProjection()\n          });\n          delete e.search.geojson;\n          f.setProperties(e.search);\n          GeoCodingAndDrawLayer.getSource().addFeature(f);\n          var view = map.getView();\n          var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n          var zoom = view.getZoomForResolution(resolution);\n          var center = ol_extent_getCenter(f.getGeometry().getExtent());\n          // redraw before zoom\n          setTimeout(function () {\n            view.animate({\n              center: center,\n              zoom: Math.min(zoom, 16)\n            });\n          }, 100);\n        } else {\n          map.getView().animate({\n            center: e.coordinate,\n            zoom: Math.max(map.getView().getZoom(), 16)\n          });\n        }\n        UpDateVectorLayerStyle();\n      });\n\n      // Main control bar\n      var mainbar = new Bar();\n      mainbar.setPosition('top-left');\n\n      map.addControl(mainbar);\n\n// Edit control bar\n      var editbar = new Bar({\n        toggleOne: true,\t// one control active at the same time\n        group: false\t\t\t// group controls together\n      });\n      mainbar.addControl(editbar);\n\n// Add selection tool:\n//  1- a toggle control with a select interaction\n//  2- an option bar to delete / get information on the selected feature\n      var sbar = new Bar();\n      sbar.addControl(new OlExtButton({\n        html: '<i class=\"fa fa-times\"></i>',\n        title: \"Delete\",\n        handleClick: function () {\n          var features = selectCtrl.getInteraction().getFeatures();\n          if (!features.getLength()) info(\"Select an object first...\");\n          else info(features.getLength() + \" object(s) deleted.\");\n\n          features.forEach(function (f) {\n            console.log(f);\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          });\n          selectCtrl.getInteraction().getFeatures().clear();\n          selectCtrl.getInteraction().dispatchEvent({type: 'select'});\n        }\n      }));\n\n\n      var selectCtrl = new OlExtToggle({\n        html: '<i class=\"fa fa-hand-pointer\"></i>',\n        title: \"Select\",\n        interaction: new OlSelect({\n          hitTolerance: 2,\n          style: new Style({\n            image: new CircleStyle({\n              radius: 5,\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              }),\n            }),\n            stroke: new Stroke({\n              color: [255, 0, 0, 1],\n              opacity: 1,\n              width: 2\n            }),\n            fill: new Fill({\n              color: '#e5e5ff50'\n            })\n            // Commented to only see the lines\n            //,fill: new ol.style.Stroke ({\n            //  color: [155, 155, 155, 0.4]\n            //})\n          }),\n          layers: [GeoCodingAndDrawLayer]\n        }),\n        bar: sbar,\n        autoActivate: true,\n        active: true\n      });\n      this.setSelectInteraction(selectCtrl.getInteraction());\n\n      editbar.addControl(selectCtrl);\n      this.setSelectedLayerObj(selectCtrl.getInteraction());\n// Add editing tools\n      var pedit = new OlExtToggle({\n        html: '<i class=\"fa fa-map-marker-alt\" ></i>',\n        title: 'Point',\n        interaction: new OlDraw({\n          type: 'Point',\n          source: GeoCodingAndDrawLayer.getSource()\n        })\n      });\n      editbar.addControl(pedit);\n      var fedit = new OlExtToggle({\n        html: '<i class=\"fa fa-draw-polygon\" ></i>',\n        title: 'Polygon',\n        interaction: new OlDraw({\n          type: 'Polygon',\n          source: GeoCodingAndDrawLayer.getSource(),\n          // Count inserted points\n          geometryFunction: function (coordinates, geometry) {\n            this.nbpts = coordinates[0].length;\n            if (geometry) geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            else geometry = new OLPolygon(coordinates);\n            return geometry;\n          }\n        }),\n        // Options bar ssociated with the control\n        bar: new Bar({\n          controls: [new OlExtTextButton({\n            html: 'undo',//'<i class=\"fa fa-mail-reply\"></i>',\n            title: \"undo last point\",\n            handleClick: function () {\n              if (fedit.getInteraction().nbpts > 1) fedit.getInteraction().removeLastPoint();\n            }\n          }),\n            new OlExtTextButton({\n              html: 'finish',\n              title: \"finish\",\n              handleClick: function () {\n                // Prevent null objects on finishDrawing\n                if (fedit.getInteraction().nbpts > 3) fedit.getInteraction().finishDrawing();\n              }\n            })\n          ]\n        })\n      });\n      editbar.addControl(fedit);\n\n\n      // fedit.getInteraction().on('drawend', function (e) {\n      //\n      //   console.log(e.feature);\n      //   console.log(e.feature);\n      //\n      //   // GeoCodingAndDrawLayer.getSource().removeFeature(e.feature);\n      //\n      //\n      // });\n\n      fedit.getInteraction().on('drawstart', function () {\n        GeoCodingAndDrawLayer.getSource().once('addfeature', handleAddFeature);\n      });\n\n      function handleAddFeature(evt) {\n        let coordi = evt.feature.getGeometry().getCoordinates();\n\n        const area = getArea(evt.feature.getGeometry());\n        // Sq.Km\n        let outputArea = Math.round((area / 1000000) * 100) / 100;\n        console.log(outputArea);\n\n        let li = new LineString(coordi);\n        const length = getLength(li);\n        // In Km\n        let outputLength = Math.round((length / 1000) * 100) / 100;\n        console.log(outputLength);\n        // GeoCodingAndDrawLayer.getSource().removeFeature(evt.feature);\n      }\n\n      // Show info\n      function info(i) {\n        console.log(i);\n        // document.querySelector(\"#info\").innerHTML(i || \"\");\n      }\n\n      function UpDateVectorLayerStyle() {\n        GeoCodingAndDrawLayer.getSource().forEachFeature(function (feature) {\n          let StyleObj = null;\n          if (feature.getProperties().osm_id) {\n            StyleObj = [\n              new Style({\n                stroke: new Stroke({\n                  color: [0, 0, 0, 0],\n                  opacity: 1,\n                  width: 3\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff00'\n                })\n                // Commented to only see the lines\n                //,fill: new ol.style.Stroke ({\n                //  color: [155, 155, 155, 0.4]\n                //})\n              }),\n              // Dash white lines (second style, on the top)\n              new Style({\n                image: new Icon({\n                  anchor: [0.5, 46],\n                  anchorXUnits: 'fraction',\n                  anchorYUnits: 'pixels',\n                  src: ImageIcon,\n                  size: toSize([40, 45]),\n                  // offset:[20,20]\n                }),\n                stroke: new Stroke({\n                  color: [0, 0, 255, 1.0],\n                  opacity: 1,\n                  width: 3,\n                  lineDash: [4, 8, 4, 8]\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff40'\n                })\n              })\n            ];\n\n          } else {\n            StyleObj = new Style({\n              image: new CircleStyle({\n                radius: 5,\n                stroke: new Stroke({\n                  color: [255, 0, 0, 1],\n                  opacity: 1,\n                  width: 2\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff50'\n                }),\n              }),\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              })\n              // Commented to only see the lines\n              //,fill: new ol.style.Stroke ({\n              //  color: [155, 155, 155, 0.4]\n              //})\n            });\n\n          }\n          feature.setStyle(StyleObj);\n\n        });\n      }\n\n      function removePreviousSearchFeature() {\n        var features = GeoCodingAndDrawLayer.getSource().getFeatures();\n        features.forEach(function (f) {\n          if (f.getProperties().osm_id) {\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          }\n        });\n        // console.log(features);\n      }\n\n      console.log(\"second\");\n\n      eventHub.$emit('runFeatureInteractionCode');\n\n    },\n    addPrintMapFunctionality() {\n      // Add a custom push button with onToggle function\n      // let that = this;\n      var PrintButton = new OlExtButton({\n        html: '<i class=\"fas fa-print\"></i>',\n        className: \"PrintMap\",\n        title: \"Print map\",\n        handleClick: () => {\n\n          // that.PrintMapComponentData.PrintMapDialogVisible = true;\n          // setTimeout(() => {\n          //   eventHub.$emit('OpenDialogOfPrintAndProxyfy');\n          // }, 500);\n\n        }\n      });\n\n      this.mapObject.addControl(PrintButton);\n    },\n    olExtLegentItem(title, id, legend) {\n      return {\n        id: id,\n        title: title,\n        typeGeom: 'Point',\n        style: new Style({\n          image: new Icon({\n            src: legend,\n            crossOrigin: 'anonymous' // Enable print\n          })\n        })\n      };\n\n    },\n    LayerSwitcherClick() {\n      this.drawer = true;\n    },\n    handleClose(done, e) {\n      console.log(e);\n\n      // this.$confirm('You still have unsaved data, proceed?')\n      //     .then(()=> {\n      //       done();\n      //     })\n      //     .catch(()=> {\n      //     });\n    },\n    olextPrintFunction() {\n      // Add a title control\n      this.mapObject.addControl(new CanvasTitle({\n        title: 'my title',\n        visible: false,\n        style: new Style({text: new Text({font: '20px \"Lucida Grande\",Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif'})})\n      }));\n      // let legendItems=[];\n\n\n      // Add a legend to the print\n      var legendCtrl = new LegendControl({legend: this.mapControlVariable.LegendObject});\n      this.mapObject.addControl(legendCtrl);\n\n      // Add a ScaleLine control\n      this.mapObject.addControl(new CanvasScaleLine());\n\n      // Print control\n      var printControl = new PrintDialog({lang: 'en'});\n      printControl.setSize('A4');\n      printControl.setOrientation('landscape');\n      this.mapObject.addControl(printControl);\n\n\n      /* On print > save image file */\n      printControl.on(['print', 'error'], (e) => {\n        // let LegendImageArray = this.legendObjectCollection();\n        // LegendImageArray.forEach(function (ii) {\n        //   console.log(ii);\n        //   legendd.addItem(ii);\n        // });\n        // // legendItems = LegendImageArray;\n        // console.log(LegendImageArray);\n\n        // Print success\n        if (e.image) {\n          if (e.pdf) {\n            // Export pdf using the print info\n            var pdf = new jsPDF({\n              orientation: e.print.orientation,\n              unit: e.print.unit,\n              format: e.print.size\n            });\n            pdf.addImage(e.image, 'JPEG', e.print.position[0], e.print.position[0], e.print.imageWidth, e.print.imageHeight);\n            pdf.save(e.print.legend ? 'legend.pdf' : 'map.pdf');\n          } else {\n            // Save image as file\n            e.canvas.toBlob(function (blob) {\n              var name = (e.print.legend ? 'legend.' : 'map.') + e.imageType.replace('image/', '');\n              saveAs(blob, name);\n            }, e.imageType, e.quality);\n          }\n        } else {\n          console.warn('No canvas to export');\n        }\n      });\n\n    },\n  },\n  computed: {\n    ...mapState([\"TimeSeriesLayerCollection\", \"PrintMapComponentData\", \"mapControlVariable\"]),\n    getInventory() {\n      return dataSelect.Inventory;\n    },\n  },\n\n  beforeMount() {\n  },\n  mounted() {\n    this.mapInitilization();\n    // this.addGeoCoding();\n    this.addGeoCodingAndInteractionBar();\n    // this.addPrintMapFunctionality();\n    this.olextPrintFunction();\n    //\n    // let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n    // let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n    //\n    // let AddRemoveLegendFunction = function () {\n    //\n    //   if (this.getProperties().visible) {\n    //     that.addLegend(this.getProperties().OLEXTLegendObject);\n    //   } else {\n    //     that.removeLegend(this.getProperties().OLEXTLegendObject);\n    //   }\n    // };\n    //\n    // let le1 = this.olExtLegentItem('Country Outline', 'Country_Outline', WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry')\n    // // this.drawer = false;\n    // let countryBoundary = new ImageLayer({\n    //   id: 'Country_Outline',\n    //   title: 'Country Outline',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry',\n    //   zIndex: 6,\n    //   OLEXTLegendObject: le1,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_country_boundry'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le2 = this.olExtLegentItem('Province', 'Province', WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary')\n    //\n    // let provinceBoundary = new ImageLayer({\n    //   id: 'Province',\n    //   title: 'Province',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary',\n    //   zIndex: 5,\n    //   OLEXTLegendObject: le2,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_provincial_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le3 = this.olExtLegentItem('District', 'District', WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary')\n    //\n    // let DistrictBoundary = new ImageLayer({\n    //   id: 'District',\n    //   title: 'District',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary',\n    //   zIndex: 4,\n    //   OLEXTLegendObject: le3,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_district_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le4 = this.olExtLegentItem('Palika', 'Palika', WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary')\n    //\n    // let PalikaBoundary = new ImageLayer({\n    //   id: 'Palika',\n    //   title: 'Palika',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary',\n    //   zIndex: 3,\n    //   OLEXTLegendObject: le4,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_palika_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let that = this;\n    // countryBoundary.on('change:visible', AddRemoveLegendFunction);\n    // provinceBoundary.on('change:visible', AddRemoveLegendFunction);\n    // DistrictBoundary.on('change:visible', AddRemoveLegendFunction);\n    // PalikaBoundary.on('change:visible', AddRemoveLegendFunction);\n    //\n    // this.mapObject.addLayer(countryBoundary);\n    // this.mapObject.addLayer(provinceBoundary);\n    // this.mapObject.addLayer(DistrictBoundary);\n    // this.mapObject.addLayer(PalikaBoundary);\n    //\n    // let l1 = new LayerSwitcher(\".layerCollection\", countryBoundary, false, false);\n    // let l2 = new LayerSwitcher(\".layerCollection\", provinceBoundary, false, false);\n    // let l3 = new LayerSwitcher(\".layerCollection\", DistrictBoundary, false, false);\n    // let l4 = new LayerSwitcher(\".layerCollection\", PalikaBoundary, false, false);\n    //\n    // l1.setVisible(true);\n    // l2.setVisible(true);\n    // l3.setVisible(true);\n    // l4.setVisible(true);\n    //\n    // this.appendTimeSeriesLayerCollection(l1);\n    // this.appendTimeSeriesLayerCollection(l2);\n    // this.appendTimeSeriesLayerCollection(l3);\n    // this.appendTimeSeriesLayerCollection(l4);\n  },\n}\n</script>\n\n<style>\n#map-container2 {\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n}\n\n#map-container2 .ol-viewport {\n  border-radius: 5px;\n}\n\n#layerSwitcherDiv {\n  right: 0.5em;\n  top: 0.5em;\n  position: absolute;\n}\n\n#layerSwitcherDiv button {\n  line-height: unset;\n  border-radius: 1px;\n}\n\n\n.drawerForLayersList {\n  position: initial !important;\n}\n\n/* OSM Based Geocoding*/\n.ol-search ul li {\n  border-bottom: 1px solid lightgray;\n\n  padding: 10px 5px 10px 5px !important;\n  flex: 1;\n  max-width: 608px;\n  white-space: normal !important;\n  overflow: unset;\n  flex-grow: 1;\n  text-overflow: ellipsis;\n}\n\n.ol-search ul li:last-child {\n  border-bottom: none;\n  border-radius: 0px;\n}\n\n.ol-search ul {\n  list-style: none;\n  cursor: pointer;\n  padding: 0px 5px 0px 5px !important;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  clear: both;\n  cursor: pointer;\n  max-width: 618px;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #fff;\n  font-size: 13px;\n}\n\n.ol-search {\n  z-index: 999;\n}\n\n.ol-search {\n  top: 4.1em;\n  left: 0.5em;\n  /*width: 500px;*/\n}\n\n.ol-search input {\n  width: 600px;\n}\n\n\n.ol-control.ol-bar {\n  left: 3.2em;\n  top: 6em;\n}\n\n.ol-control.ol-bar.ol-top.ol-left, .ol-control.ol-bar.ol-top.ol-right {\n  top: 6.5em;\n  transform: none;\n}\n\n.PrintMap.ol-button.ol-unselectable.ol-control {\n  top: 12em;\n  left: 0.5em;\n}\n\n.LayerDiv {\n  margin-top: 10px;\n}\n\n.withOpacityChange {\n  margin-bottom: 18px;\n}\n\n.ol-scale-line {\n  right: 0;\n  left: auto;\n  bottom: 2em;\n}\n</style>","import { render } from \"./mapComponentForecast.vue?vue&type=template&id=9212c250\"\nimport script from \"./mapComponentForecast.vue?vue&type=script&lang=js\"\nexport * from \"./mapComponentForecast.vue?vue&type=script&lang=js\"\n\nimport \"./mapComponentForecast.vue?vue&type=style&index=0&id=9212c250&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TabBodyForecast.vue?vue&type=template&id=0ebaac7f&scoped=true\"\nimport script from \"./TabBodyForecast.vue?vue&type=script&lang=js\"\nexport * from \"./TabBodyForecast.vue?vue&type=script&lang=js\"\n\nimport \"./TabBodyForecast.vue?vue&type=style&index=0&id=0ebaac7f&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0ebaac7f\"]])\n\nexport default __exports__","<template>\n  <el-row class=\"full-height\">\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapControlsEmission></mapControlsEmission>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentEmission :IndexValue=\"1\"></chartComponentEmission>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"12\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapComponentEmission></mapComponentEmission>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentEmission :IndexValue=\"2\" ></chartComponentEmission>\n        </el-col>\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentEmission :IndexValue=\"3\" ></chartComponentEmission>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-10\">\n          <EmissionStatistics></EmissionStatistics>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-10\">\n          <chartComponentEmission :IndexValue=\"4\"></chartComponentEmission>\n        </el-col>\n      </el-row>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n\n// import about from \"./about\";\nimport chartComponentEmission from \"./chartComponentEmission\";\nimport mapControlsEmission from \"./mapControlsEmission\";\nimport mapComponentEmission from \"./mapComponentEmission\";\nimport EmissionStatistics from \"./EmissionStatistics\";\nimport {mapActions} from \"vuex\";\n\nexport default {\n  name: \"TabBodyEmission\",\n  components: {\n    // about,\n    chartComponentEmission,\n    mapControlsEmission,\n    mapComponentEmission,\n    EmissionStatistics,\n  },\n  methods: {\n    ...mapActions([\"getCascaderOptions\"]),\n  },\n  async mounted() {\n    let data = await this.getCascaderOptions();\n    console.log(data);\n  }\n}\n</script>\n\n<style scoped>\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n.full-height {\n  height: 100%;\n}\n</style>\n","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <!--    <div class=\"body-container full-height\" >-->\n    <!--    </div>-->\n    <div class=\"chart-option\">\n      <el-row :gutter=\"5\">\n        <el-col :span=\"10\">\n          <div class=\"grid-content bg-purple\">\n            <el-select v-model=\"PlotOptionValue\" placeholder=\"Select plot type\" size=\"mini\" class=\"plotSelection\"\n                       @change=\"ChangePlotOption()\">\n              <el-option\n                  v-for=\"item in PlotOptions\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </div>\n        </el-col>\n        <el-col :span=\"11\">\n          <div class=\"grid-content bg-purple\">\n            <el-cascader\n                v-if=\"PlotOptionValue ==='InventriesComparison'\"\n                v-model=\"CascaderValue\"\n                :options=\"CascaderInventriesComparison\"\n                :props=\"{ expandTrigger: 'hover' }\"\n                size=\"mini\"\n                class=\"full-width\"\n            ></el-cascader>\n            <el-cascader\n                v-if=\"PlotOptionValue ==='SectorContribution'\"\n                v-model=\"CascaderValue\"\n                :options=\"CascaderSectorContribution\"\n                :props=\"{ expandTrigger: 'hover' }\"\n                size=\"mini\"\n                class=\"full-width\"\n            ></el-cascader>\n            <el-cascader\n                v-if=\"PlotOptionValue ==='SectorShare'\"\n                v-model=\"CascaderValue\"\n                :options=\"CascaderSectorShare\"\n                :props=\"{ expandTrigger: 'hover' }\"\n                size=\"mini\"\n                class=\"full-width\"\n            ></el-cascader>\n            <el-cascader\n                v-if=\"PlotOptionValue ==='Timeseries'\"\n                v-model=\"CascaderValue\"\n                :options=\"CascaderTimeSeries\"\n                :props=\"{ expandTrigger: 'hover' }\"\n                size=\"mini\"\n                class=\"full-width\"\n            ></el-cascader>\n\n          </div>\n        </el-col>\n        <el-col :span=\"3\">\n          <div class=\"grid-content bg-purple sync-chart\">\n            <el-button size=\"mini\" @click=\"RefreshChart()\"><i class=\"fas fa-sync\"></i></el-button>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n    <div class=\"chart-div\" id=\"chart\" ref=\"ChartDiv\">\n      <!--      <div class=\"center-content-parent\">-->\n      <!--        <div class=\"center-content-child\">-->\n      <!--          Please select a layer and draw a feature to view the chart-->\n      <!--        </div>-->\n      <!--      </div>      -->\n      <!--      -->\n      <div class=\"flex-center-vertically\">\n        Please select a layer and draw a feature to view the chart\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport eventHub from \"../../utils/utils\"\n\nimport Highcharts from 'highcharts';\n// Alternatively, this is how to load Highstock. Highmaps is similar.\n// import Highcharts from 'highcharts/highstock';\n\n// Load the exporting module.\nimport Exporting from 'highcharts/modules/exporting';\nimport NOdata from 'highcharts/modules/no-data-to-display'\nimport MoreHighcharts from 'highcharts/highcharts-more';\n\n// Initialize exporting module.\nExporting(Highcharts);\nNOdata(Highcharts);\nMoreHighcharts(Highcharts);\n// window.Highcharts = Highcharts;\n\nimport {mapState, mapActions} from 'vuex';\n\nimport '@fortawesome/fontawesome-free/js/brands';\nimport '@fortawesome/fontawesome-free/js/solid';\nimport '@fortawesome/fontawesome-free/js/fontawesome';\n\nimport OLWKT from 'ol/format/WKT'\n\nexport default {\n  name: \"chartComponentEmission\",\n  props: {\n    IndexValue: {\n      type: Number,\n      required: true\n    },\n  },\n  data() {\n    return {\n      value1: '',\n      PlotOptions: [{\n        value: 'SectorShare',\n        label: 'Sector share (%)'\n      }, {\n        value: 'SectorContribution',\n        label: 'Sector contribution'\n      }, {\n        value: 'InventriesComparison',\n        label: 'Inventory comparison'\n      }, {\n        value: 'Timeseries',\n        label: 'Time series'\n      }],\n      PlotOptionValue: 'SectorShare',\n      CascaderValue: [],\n    }\n  },\n  methods: {\n    ...mapActions([\"PostChartDataProcess\"]),\n    updateChart(HcObject) {\n      Highcharts.chart('chart', HcObject);\n    },\n    ChangePlotOption() {\n      this.CascaderValue = [];\n    },\n    getHCObject(response, ArgParam) {\n      if (this.PlotOptionValue == 'SectorShare') {\n        let SectorShare = {\n          chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false,\n            type: 'pie'\n          },\n          credits: {\n            enabled: false\n          },\n          title: {\n            text: ArgParam.cascaderValue[0] + ' - ' + ArgParam.cascaderValue[1] + ' (' + ArgParam.cascaderValue[2] + ')'\n          },\n          tooltip: {\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n          },\n          accessibility: {\n            point: {\n              valueSuffix: '%'\n            }\n          },\n          plotOptions: {\n            pie: {\n              allowPointSelect: true,\n              cursor: 'pointer',\n              dataLabels: {\n                enabled: true,\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                connectorColor: 'silver'\n              },\n              showInLegend: true\n            }\n          },\n          series: [{\n            name: 'Sector',\n            colorByPoint: true,\n            data: response.data\n          }]\n        }\n        return SectorShare;\n      } else if (this.PlotOptionValue == 'SectorContribution') {\n        let SectorContribution = {\n          chart: {\n            type: 'column'\n          },\n          title: {\n            text: ArgParam.cascaderValue[0] + ' - ' + ArgParam.cascaderValue[1] + ' (' + ArgParam.cascaderValue[2] + ')'\n          },\n          subtitle: {\n            text: ''\n          },\n          accessibility: {\n            announceNewData: {\n              enabled: true\n            }\n          },\n          credits: {\n            enabled: false\n          },\n          xAxis: {\n            type: 'category'\n          },\n          yAxis: {\n            title: {\n              text: 'Emission (kt)'\n            }\n          },\n          legend: {\n            enabled: false\n          },\n          plotOptions: {\n            series: {\n              borderWidth: 0,\n              dataLabels: {\n                enabled: false,\n                format: '{point.y:.1f}%'\n              }\n            }\n          },\n          tooltip: {\n            headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n            pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}</b> kt<br/>'\n          },\n          series: [\n            {\n              name: \"Sector\",\n              colorByPoint: true,\n              data: response.data\n            }\n          ]\n        };\n        return SectorContribution;\n      } else if (this.PlotOptionValue == 'InventriesComparison') {\n        let InventriesComparison = {\n          chart: {\n            type: 'column'\n          },\n          title: {\n            text: ArgParam.cascaderValue[0] + ' - ' + ArgParam.cascaderValue[1] + ' (' + ArgParam.cascaderValue[2] + ')'\n          },\n          subtitle: {\n            text: ''\n          },\n          accessibility: {\n            announceNewData: {\n              enabled: true\n            }\n          },\n          credits: {\n            enabled: false\n          },\n          xAxis: {\n            type: 'category'\n          },\n          yAxis: {\n            title: {\n              text: 'Emission (kt)'\n            }\n          },\n          legend: {\n            enabled: false\n          },\n          plotOptions: {\n            series: {\n              borderWidth: 0,\n              dataLabels: {\n                enabled: false,\n                format: '{point.y:.1f}%'\n              }\n            }\n          },\n          tooltip: {\n            headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n            pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}</b> kt<br/>'\n          },\n          series: [\n            {\n              name: \"Sector\",\n              colorByPoint: true,\n              data: response.data\n            }\n          ]\n        };\n        return InventriesComparison;\n      } else if (this.PlotOptionValue == 'Timeseries') {\n        let TickPositioner__yyyy_func = function (data) {\n          let PositionList = [];\n          data.forEach(function (val) {\n            PositionList.push(val[0])\n          })\n          let TickPositionerFunction = function () {\n            return PositionList;\n          }\n          return TickPositionerFunction\n        };\n\n        let TickPositioner__yyyy = TickPositioner__yyyy_func(response.data);\n\n        let DateFormatter__dd_func = function () {\n          return Highcharts.dateFormat('%Y', this.value);\n        };\n\n        let Timeseries = {\n          chart: {\n            type: 'spline',\n            zoomType: 'x'\n          },\n          title: {\n            text: response.title\n          },\n          subtitle: {\n            text: ''\n          },\n          xAxis: {\n            type: 'datetime',\n            dateTimeLabelFormats: { // don't display the dummy year\n              month: '%e. %b',\n              year: '%b'\n            },\n            title: {\n              text: 'Date'\n            },\n            tickPositioner: TickPositioner__yyyy,\n            labels: {\n              formatter: DateFormatter__dd_func\n            }\n          },\n          yAxis: {\n            title: {\n              text: 'Emission (kt)'\n            },\n          },\n          legend: {\n            enabled: false\n          },\n          credits: {\n            enabled: false\n          },\n          plotOptions: {\n            series: {\n              label: {\n                enabled: false\n              },\n              marker: {\n                enabled: true\n              }\n            }\n          },\n          series: [{\n            name: \"Pollutant\",\n            data: response.data\n          }],\n        };\n        return Timeseries\n      }\n    },\n    async RefreshChart() {\n      // debugger;\n      if (this.selectInteractionObj) {\n\n        if (this.selectInteractionObj.getFeatures().getLength()) {\n          var wktfeaturegeom, geometryType;\n          var features = this.selectInteractionObj.getFeatures();\n\n          features.forEach(function (f) {\n            var format = new OLWKT();\n            wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            });\n            geometryType = f.getGeometry().getType();\n          });\n\n          if (this.CascaderValue.length) {\n            let Param = {\n              cascaderValue: this.CascaderValue,\n              geometryType: geometryType,\n              wkt: wktfeaturegeom,\n              plotType: this.PlotOptionValue\n            };\n            console.log(Param);\n            let response = await this.PostChartDataProcess(Param);\n            if (response.code == 200) {\n              let hcObject = this.getHCObject(response, Param);\n              this.HCObject = Highcharts.chart(this.$refs.ChartDiv, hcObject);\n            } else {\n              this.$notify({\n                title: 'Error',\n                message: 'Please select a valid polygon or point',\n                type: 'error'\n              });\n              if (this.HCObject) {\n                this.HCObject.destroy();\n              }\n            }\n          } else {\n            this.$notify({\n              title: 'Warning',\n              message: 'Please select plot parameters',\n              type: 'warning'\n            });\n          }\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please select a feature on map.',\n            type: 'warning'\n          });\n        }\n      }\n    }\n  },\n\n  computed: {\n    ...mapState([\"CascaderInventriesComparison\", \"CascaderSectorContribution\", \"CascaderSectorShare\", \"CascaderTimeSeries\", \"selectInteractionObj\"]),\n  },\n\n  async mounted() {\n    // Generate the chart\n//     Highcharts.chart('chart', {\n//       credits: {\n//         enabled: false\n//       },\n//       title: {\n//         align: \"center\",\n//         text: \"Select Indices to Display Chart\",\n//       },\n//       series: [{\n//         data: [],\n//       }],\n//       chart: {\n//         backgroundColor: 'rgba(255,255,255,0)',\n//         style: {\n//           \"fontFamily\": \"Lato,\\\"Lucida Grande\\\", \\\"Lucida Sans Unicode\\\", Verdana, Arial, Helvetica, sans-serif\",\n//           \"fontSize\": \"12px\"\n//         },\n//\n//         animation: true,\n//         zoomType: 'x',\n// //        borderColor: '#000000',\n// //        borderWidth: 2,\n//         type: 'area',\n//       },\n//       noData: {\n//         style: {\n//           fontWeight: 'bold',\n//           fontSize: '15px',\n//           color: '#303030'\n//         }\n//       },\n//     });\n    eventHub.$on('UpdateChart', (HcObject) => {\n      this.updateChart(HcObject);\n    });\n  },\n\n  beforeCreate() {\n    eventHub.$on('setDefaultVisualizationChart', (indexVal, pltOpt, casVal) => {\n      if (this.IndexValue == indexVal) {\n        this.PlotOptionValue = pltOpt;\n        setTimeout(() => {\n          this.CascaderValue = casVal;\n          this.RefreshChart();\n        }, 500);\n      }\n    });\n  },\n};\n</script>\n\n<style scoped>\n\n.chart-option .el-row {\n  margin-left: 5px !important;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-right: 8px !important;\n}\n\n.chart-option {\n  border-bottom: solid 1px #e2e2e2;\n}\n\n.chart-div {\n  height: calc(100% - 40px);\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n.center-content-parent {\n  position: relative;\n}\n\n.center-content-child {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  margin: -70px 0 0 -170px;\n}\n\n.flex-center-vertically {\n  padding: 20px;\n  justify-content: center;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  height: 100%;\n}\n\n.plotSelection {\n  display: block;\n}\n\n.sync-chart .el-button {\n  width: 100%;\n}\n</style>\n","import { render } from \"./chartComponentEmission.vue?vue&type=template&id=00b27c66&scoped=true\"\nimport script from \"./chartComponentEmission.vue?vue&type=script&lang=js\"\nexport * from \"./chartComponentEmission.vue?vue&type=script&lang=js\"\n\nimport \"./chartComponentEmission.vue?vue&type=style&index=0&id=00b27c66&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-00b27c66\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Map Controls\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n        <el-form ref=\"form\" :model=\"form\" label-width=\"auto\" :inline=\"getIsInlineFormorNot\" size=\"mini\"\n                 label-position=\"left\">\n          <!--        <el-form-item label=\"Region\">-->\n          <!--          <el-select v-model=\"form.region\" placeholder=\"Select region\" class=\"full-width\">-->\n          <!--            <el-option-->\n          <!--                v-for=\"item in data.region\"-->\n          <!--                :key=\"item.value\"-->\n          <!--                :label=\"item.label\"-->\n          <!--                :value=\"item.value\">-->\n          <!--            </el-option>-->\n          <!--          </el-select>-->\n          <!--        </el-form-item>-->\n\n          <el-form-item label=\"Inventory\" class=\"full-width\">\n            <el-select v-model=\"form.inventory\" placeholder=\"Select\" @change=\"updateMapLayer()\" class=\"full-width\">\n              <el-option\n                  v-for=\"item in data.Inventory\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"Pollutants\" class=\"full-width\">\n            <el-select v-model=\"form.pollutants\" placeholder=\"Select\" @change=\"updateMapLayer()\" class=\"full-width\">\n              <el-option\n                  v-for=\"item in data.pollutants\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"Sectors\" class=\"full-width\">\n            <el-select v-model=\"form.sectors\" placeholder=\"Select\" @change=\"updateMapLayer()\" class=\"full-width\">\n              <el-option\n                  v-for=\"item in data.sectors\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"year\" class=\"full-width\">\n            <el-select v-model=\"form.year\" placeholder=\"Select\" @change=\"updateMapLayer()\" class=\"full-width\">\n              <el-option\n                  v-for=\"item in data.year\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item class=\"submit-btn full-width\">\n            <!--          <el-button type=\"primary\" class=\"full-width\">Get Emission Plot</el-button>-->\n          </el-form-item>\n        </el-form>\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {dataSelect} from '../../utils/dataEmission'\nimport eventHub from \"../../utils/utils\";\nimport {mapActions, mapState} from 'vuex';\nimport GeoJSON from \"ol/format/GeoJSON\";\n// import {getCenter as ol_extent_getCenter} from \"ol/extent\";\n\nexport default {\n  name: \"mapControlsEmission\",\n  data() {\n    return {\n      form: {\n        region: '',\n        pollutants: '',\n        periodicity: '',\n        year: '',\n        sectors: '',\n        inventory: ''\n      },\n      isInlineForm: true,\n      data: dataSelect\n    }\n  }, methods: {\n    ...mapActions([\"GETCountryGeojson\"]),\n    async onSubmit() {\n\n    },\n\n    getInLineData() {\n      return this.isInlineForm\n    },\n\n    updateMapLayer() {\n      this.$store.state.pollutants = this.form.pollutants;\n      this.$store.state.sectors = this.form.sectors;\n      this.$store.state.year = this.form.year;\n      this.$store.state.inventory = this.form.inventory;\n      eventHub.$emit(\"InventoryChange\");\n    },\n    async setDefaultMap() {\n\n\n      this.form.pollutants = 'PM2p5';\n      this.form.sectors = 'Total';\n      this.form.year = '2015';\n      this.form.inventory = 'REAS';\n\n      // Javasctipt API Stack\n      setTimeout(() => {\n        this.updateMapLayer();\n      }, 0);\n      let geoJson = await this.GETCountryGeojson();\n      console.log(\"geoJson\");\n      console.log(geoJson);\n      // this.vectorLayerSource.\n      var format = new GeoJSON();\n      var f = format.readFeature(geoJson.features[0], {\n        dataProjection: \"EPSG:4326\",\n        featureProjection: this.mapObject.getView().getProjection()\n      });\n      this.vectorLayerSource.addFeature(f);\n      this.selectInteractionObj.getFeatures().push(f);\n      this.selectInteractionObj.dispatchEvent({type: 'select'});\n      // Zoom to map centre*****\n      // var view = this.mapObject.getView();\n      // var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), this.mapObject.getSize());\n      // var zoom = view.getZoomForResolution(resolution);\n      // var center = ol_extent_getCenter(f.getGeometry().getExtent());\n      // // redraw before zoom\n      // setTimeout(function () {\n      //   view.animate({\n      //     center: center,\n      //     zoom: Math.min(zoom, 16)\n      //   });\n      // }, 100);\n\n      // Zoom to map centre*****\n\n\n      eventHub.$emit('setDefaultVisualizationChart', 1, 'SectorShare', [\"REAS\", \"PM2p5\", \"2015\"]);\n      eventHub.$emit('setDefaultVisualizationChart', 2, 'SectorContribution', [\"REAS\", \"PM2p5\", \"2015\"]);\n      eventHub.$emit('setDefaultVisualizationChart', 3, 'Timeseries', [\"REAS\", \"PM2p5\", \"Total\"]);\n      eventHub.$emit('setDefaultVisualizationChart', 4, 'InventriesComparison', [\"PM2p5\", \"Total\", \"2015\"]);\n\n      setTimeout(() => {\n        eventHub.$emit('setDefaultEmissionStatistics');\n      }, 1000)\n    },\n  },\n  computed: {\n    ...mapState([\"vectorLayerSource\", \"mapObject\", \"selectInteractionObj\"]),\n    getIsInlineFormorNot() {\n      return this.getInLineData();\n    },\n  },\n  created() {\n    this.form.region = this.$store.state.region;\n    this.form.pollutants = this.$store.state.pollutants;\n    this.form.sectors = this.$store.state.sectors;\n    this.form.year = this.$store.state.year;\n  },\n\n  mounted() {\n    // Generate the chart\n    // eslint-disable-next-line no-undef\n\n    this.setDefaultMap();\n  },\n}\n</script>\n\n<style scoped>\n.body-container {\n  height: calc(100% - 50px);\n}\n</style>","let allYears = [];\nlet initialYear;\nfor (initialYear = 2000; initialYear <= new Date().getFullYear(); initialYear++) {\n    allYears.unshift({\n        value: initialYear,\n        label: initialYear\n    });\n}\n\n\nexport const dataSelect = {\n    region: [{value: \"HKH\", label: \"HKH\"},\n        {value: \"AFGHANISTAN\", label: \"AFGHANISTAN\"},\n        {value: \"BANGLADESH\", label: \"BANGLADESH\"},\n        {value: \"BHUTAN\", label: \"BHUTAN\"},\n        {value: \"CHINA\", label: \"CHINA\"},\n        {value: \"INDIA\", label: \"INDIA\"},\n        {value: \"MYANMAR\", label: \"MYANMAR\"},\n        {value: \"NEPAL\", label: \"NEPAL\"},\n        {value: \"PAKISTAN\", label: \"PAKISTAN\"}],\n    pollutants: [{value: \"BC\", label: \"BC\"},\n        {value: \"CO\", label: \"CO\",},\n        {value: \"NOx\", label: \"NOx\",},\n        {value: \"OC\", label: \"OC\",},\n        {value: \"PM10\", label: \"PM10\"},\n        {value: \"PM2p5\", label: \"PM25\",},\n        {value: \"SO2\", label: \"SO2\"},\n    ],\n    periodicity: [\n        {\n            value: \"dekad\",\n            label: \"Dekad (10 day)\"\n        },\n        {value: \"monthly\", label: \"Monthly\"},\n        {\n            value: \"quartly\",\n            label: \"Quartly\"\n        }\n    ],\n    periodicityOutlook: [{value: \"monthly\", label: \"Monthly Anomaly\"}],\n    year: [{value: '1990', label: \"1990\"}, {value: '1995', label: \"1995\"}, {\n        value: '2000',\n        label: \"2000\"\n    }, {value: '2005', label: \"2005\"}, {value: '2010', label: \"2010\"}, {value: '2015', label: \"2015\"}],\n    ensemble: [{value: \"mean\", label: \"Mean\"}, {value: \"ens0\", label: \"1\"}, {\n        value: \"ens1\",\n        label: \"2\"\n    }, {value: \"ens2\", label: \"3\"}, {value: \"ens3\", label: \"4\"}, {\n        value: \"ens4\",\n        label: \"5\"\n    }, {value: \"ens5\", label: \"6\"}, {value: \"ens6\", label: \"7\"}],\n    sectors: [{value: \"Total\", label: \"Total\"},\n        {value: \"Residential\", label: \"Residential\"},\n        {value: \"Industry\", label: \"Industry\"},\n        {value: \"Transport\", label: \"Transport\"},\n        {value: \"Energy\", label: \"Energy\"},],\n    Inventory: [{value: \"GAINS\", label: \"GAINS\"},\n        {value: \"REAS\", label: \"REAS\"},\n        {value: \"EDGAR\",label: \"EDGAR\"}\n    ],\n};\n\n\nexport var mbasin = [\"Amudarya\", \"Brahmaputra\", \"Eastern Asian\", \"Ganga\", \"Indus\", \"Irrawaddy\", \"Mekong\", \"Qinghai-Tibetan\", \"Salween\", \"Tarim\", \"Yangtze\", \"Yellow River\"];\n\nexport var WMSLAYERS = {\n    \"Tair_f_tavg\": \"Air Temperature\",\n    \"Rainf_f_tavg\": \"Rainfall flux\",\n    \"SoilMoist_inst\": \"Soil moisture content\",\n    \"Evap_tavg\": \"Total evapotranspiration\"\n};\nexport var WMSSLD = {\n    \"Tair_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>Tair_f_tavg</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-5</se:Threshold><se:Value>#9999FF</se:Value><se:Threshold>-4.5</se:Threshold><se:Value>#99A7FF</se:Value><se:Threshold>-4</se:Threshold><se:Value>#9CB6FF</se:Value><se:Threshold>-3.5</se:Threshold><se:Value>#9CC2FF</se:Value><se:Threshold>-3</se:Threshold><se:Value>#9CD1FF</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#9CDEFF</se:Value><se:Threshold>-2</se:Threshold><se:Value>#9CEDFF</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#99FCFF</se:Value><se:Threshold>-1</se:Threshold><se:Value>#A6FFF6</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#B5FFE6</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>1</se:Threshold><se:Value>#FFFFBE</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#FFEBAF</se:Value><se:Threshold>2</se:Threshold><se:Value>#FFD37F</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#E69800</se:Value><se:Threshold>3</se:Threshold><se:Value>#FF7F7F</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#E64C00</se:Value><se:Threshold>4</se:Threshold><se:Value>#A83800</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#732600</se:Value><se:Threshold>5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n    \"Rainf_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>Rainf_f_tavg</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#C2523C</se:Value><se:Threshold>-2</se:Threshold><se:Value>#FFAA01</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#FFD380</se:Value><se:Threshold>-1</se:Threshold><se:Value>#FEFF73</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E9FFBE</se:Value><se:Threshold>1</se:Threshold><se:Value>#7BED01</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#21DD00</se:Value><se:Threshold>2</se:Threshold><se:Value>#0ACC2E</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#17B568</se:Value><se:Threshold>3</se:Threshold><se:Value>#1E9B89</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#1A828F</se:Value><se:Threshold>4</se:Threshold><se:Value>#135784</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n    \"SoilMoist_inst\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>SoilMoist_inst</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#C2523C</se:Value><se:Threshold>-2</se:Threshold><se:Value>#FFAA01</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#FFD380</se:Value><se:Threshold>-1</se:Threshold><se:Value>#FEFF73</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E9FFBE</se:Value><se:Threshold>1</se:Threshold><se:Value>#7BED01</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#21DD00</se:Value><se:Threshold>2</se:Threshold><se:Value>#0ACC2E</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#17B568</se:Value><se:Threshold>3</se:Threshold><se:Value>#1E9B89</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#1A828F</se:Value><se:Threshold>4</se:Threshold><se:Value>#135784</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n    \"Evap_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>Evap_tavg</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#C2523C</se:Value><se:Threshold>-2</se:Threshold><se:Value>#FFAA01</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#FFD380</se:Value><se:Threshold>-1</se:Threshold><se:Value>#FEFF73</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E9FFBE</se:Value><se:Threshold>1</se:Threshold><se:Value>#7BED01</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#21DD00</se:Value><se:Threshold>2</se:Threshold><se:Value>#0ACC2E</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#17B568</se:Value><se:Threshold>3</se:Threshold><se:Value>#1E9B89</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#1A828F</se:Value><se:Threshold>4</se:Threshold><se:Value>#135784</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n};\nexport var WMSSLDCurrent = {\n    \"Tair_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>Tair_f_tavg</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#0c2c84</se:Value><se:Threshold>273</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>278</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>283</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>288</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>293</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>298</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>303</se:Threshold><se:Value>#b10026</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n    \"Rainf_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>Rainf_f_tavg</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#b10026</se:Value><se:Threshold>5</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>10</se:Threshold><se:Value>#feb24c</se:Value><se:Threshold>15</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>20</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>25</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>30</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>35</se:Threshold><se:Value>#0c2c84</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n    \"SoilMoist_inst\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>SoilMoist_inst</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#b10026</se:Value><se:Threshold>5</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>10</se:Threshold><se:Value>#feb24c</se:Value><se:Threshold>15</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>20</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>25</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>30</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>35</se:Threshold><se:Value>#0c2c84</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n    \"Evap_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>Evap_tavg</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#b10026</se:Value><se:Threshold>5</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>10</se:Threshold><se:Value>#feb24c</se:Value><se:Threshold>15</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>20</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>25</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>50</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>75</se:Threshold><se:Value>#0c2c84</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n};\n\nexport var legendImage = {\n    \"Tair_f_tavg\": \"FinalNewAirTemperature.jpg\",\n    \"Rainf_f_tavg\": \"final_rain.jpg\",\n    \"SoilMoist_inst\": \"soil.jpg\",\n    \"Evap_tavg\": \"evaporation.jpg\"\n};\n\n// var colorList = ['#ffffff', '#e6ffff', '#66ccff', '#00ff00', '#bfff00', '#ffff00', '#ffbf00', '#ff0000', '#b30000'];\n\n\n// let SLDParam = {\n//     title: 'Air Temperature',\n//     showLegendTitle: false,\n//     parameterName: 'Tair_f_tavg',\n//     propForSLD: [{\n//         classType: 'Below',\n//         label: [\"less than -5\", \"\"],\n//         color: '#00000000',\n//         value: -5\n//     }, {\n//         label: [\"-5 to -4.5\", \"\"], color: '#9999FF',\n//         range: [-5, -4.5]\n//     }, {\n//         label: [\"-4.5 to -4\", \"\"], color: '#99A7FF',\n//         range: [-4.5, -4]\n//     }, {\n//         label: [\"-4 to -3.5\", \"\"], color: '#9CB6FF',\n//         range: [-4, -3.5]\n//     }, {\n//         label: [\"1.5 to 2\", \"\"], color: '#FFEBAF',\n//         range: [1.5, 2]\n//     }, {\n//         label: [\"3 to 3.5\", \"\"], color: '#FF7F7F',\n//         range: [3, 3.5]\n//     }, {\n//         label: [\"3.5 to 4\", \"\"], color: '#E64C00',\n//         range: [3.5, 4]\n//     }, {\n//         label: [\"4 to 4.5\", \"\"], color: '#A83800',\n//         range: [4, 4.5]\n//     }, {\n//         classType: 'Above',\n//         label: [\"5 or more\", \"\"], color: '#00000000',\n//         value: 5\n//     }],\n// };\n\n\n// let layerPropertiesList = [{\n//     id: '',\n//     title: 'Air Temperature',\n//     showLegendTitle: false,\n//     parameterName: 'Tair_f_tavg',\n//     propForSLD: [{\n//         classType: 'Below',\n//         label: [\"less than -5\", \"\"],\n//         color: '#00000000',\n//         value: -5\n//     }, {\n//         label: [\"-5 to -4.5\", \"\"], color: '#9999FF',\n//         range: [-5, -4.5]\n//     }, {\n//         label: [\"-4.5 to -4\", \"\"], color: '#99A7FF',\n//         range: [-4.5, -4]\n//     }, {\n//         label: [\"-4 to -3.5\", \"\"], color: '#9CB6FF',\n//         range: [-4, -3.5]\n//     }, {\n//         label: [\"1.5 to 2\", \"\"], color: '#FFEBAF',\n//         range: [1.5, 2]\n//     }, {\n//         label: [\"3 to 3.5\", \"\"], color: '#FF7F7F',\n//         range: [3, 3.5]\n//     }, {\n//         label: [\"3.5 to 4\", \"\"], color: '#E64C00',\n//         range: [3.5, 4]\n//     }, {\n//         label: [\"4 to 4.5\", \"\"], color: '#A83800',\n//         range: [4, 4.5]\n//     }, {\n//         classType: 'Above',\n//         label: [\"5 or more\", \"\"], color: '#00000000',\n//         value: 5\n//     }],\n// }];\n\n\n\nlet layerList =[\n['REAS___BC___Total','REAS','BC','Total',5.90635967254638,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___BC___Residential','REAS','BC','Residential',3.36123776435852,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___BC___Transport','REAS','BC','Transport',4.53458881378173,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___BC___Industry','REAS','BC','Industry',4.90902614593505,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___BC___Energy','REAS','BC','Energy',0.42021644115448,['0.00000001', '0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1],[['less than 1e-08', ''], ['1e-08 to 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___CO___Total','REAS','CO','Total',2492.0791015625,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___CO___Residential','REAS','CO','Residential',305.503173828125,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___CO___Transport','REAS','CO','Transport',340.202941894531,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___CO___Industry','REAS','CO','Industry',2484.740234375,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___CO___Energy','REAS','CO','Energy',12.5061283111572,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___NOx___Total','REAS','NOx','Total',140.212326049804,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___NOx___Residential','REAS','NOx','Residential',22.4503192901611,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___NOx___Transport','REAS','NOx','Transport',44.1139068603515,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___NOx___Industry','REAS','NOx','Industry',114.093849182128,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___NOx___Energy','REAS','NOx','Energy',52.9525299072265,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___OC___Total','REAS','OC','Total',17.145128250122,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___OC___Residential','REAS','OC','Residential',12.6038732528686,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___OC___Transport','REAS','OC','Transport',1.6988251209259,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___OC___Industry','REAS','OC','Industry',8.57281112670898,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___OC___Energy','REAS','OC','Energy',0.172008112072944,['0.00000001', '0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1],[['less than 1e-08', ''], ['1e-08 to 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM10___Total','REAS','PM10','Total',182.490966796875,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM10___Residential','REAS','PM10','Residential',19.7488594055175,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM10___Transport','REAS','PM10','Transport',7.37015295028686,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM10___Industry','REAS','PM10','Industry',157.537033081054,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM10___Energy','REAS','PM10','Energy',13.6437997817993,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM2p5___Total','REAS','PM2p5','Total',106.149459838867,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM2p5___Residential','REAS','PM2p5','Residential',18.8245296478271,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM2p5___Transport','REAS','PM2p5','Transport',7.26222372055053,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM2p5___Industry','REAS','PM2p5','Industry',92.1728286743164,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM2p5___Energy','REAS','PM2p5','Energy',8.57247734069824,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___SO2___Total','REAS','SO2','Total',644.566772460937,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___SO2___Residential','REAS','SO2','Residential',53.7299194335937,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___SO2___Transport','REAS','SO2','Transport',9.21748828887939,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___SO2___Industry','REAS','SO2','Industry',198.901260375976,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___SO2___Energy','REAS','SO2','Energy',134.010818481445,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___BC___Total','GAINS','BC','Total',16.3189430236816,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___BC___Residential','GAINS','BC','Residential',9.50524234771728,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___BC___Transport','GAINS','BC','Transport',5.65739822387695,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___BC___Industry','GAINS','BC','Industry',2.57163405418395,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___BC___Energy','GAINS','BC','Energy',1.42664492130279,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___CO___Total','GAINS','CO','Total',856.674133300781,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___CO___Residential','GAINS','CO','Residential',344.522766113281,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___CO___Transport','GAINS','CO','Transport',362.705108642578,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___CO___Industry','GAINS','CO','Industry',650.939453125,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___CO___Energy','GAINS','CO','Energy',80.8608322143554,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___NOx___Total','GAINS','NOx','Total',255.737258911132,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___NOx___Residential','GAINS','NOx','Residential',9.66963100433349,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___NOx___Transport','GAINS','NOx','Transport',130.639373779296,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___NOx___Industry','GAINS','NOx','Industry',97.3676528930664,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___NOx___Energy','GAINS','NOx','Energy',120.853538513183,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___OC___Total','GAINS','OC','Total',25.4911918640136,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___OC___Residential','GAINS','OC','Residential',14.6601982116699,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___OC___Transport','GAINS','OC','Transport',12.4218959808349,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___OC___Industry','GAINS','OC','Industry',1.0705087184906,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___OC___Energy','GAINS','OC','Energy',2.24600028991699,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM10___Total','GAINS','PM10','Total',197.56867980957,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM10___Residential','GAINS','PM10','Residential',77.9535980224609,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM10___Transport','GAINS','PM10','Transport',23.6912956237792,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM10___Industry','GAINS','PM10','Industry',71.7012100219726,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM10___Energy','GAINS','PM10','Energy',75.0917663574218,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM2p5___Total','GAINS','PM2p5','Total',126.906242370605,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM2p5___Residential','GAINS','PM2p5','Residential',56.9104270935058,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM2p5___Transport','GAINS','PM2p5','Transport',22.4125061035156,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM2p5___Industry','GAINS','PM2p5','Industry',49.1257705688476,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM2p5___Energy','GAINS','PM2p5','Energy',22.2145442962646,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___SO2___Total','GAINS','SO2','Total',326.366882324218,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___SO2___Residential','GAINS','SO2','Residential',39.0412864685058,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___SO2___Transport','GAINS','SO2','Transport',13.1418828964233,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___SO2___Industry','GAINS','SO2','Industry',241.244338989257,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___SO2___Energy','GAINS','SO2','Energy',286.270538330078,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___BC___Total','EDGAR','BC','Total',26.9559309951782,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___BC___Residential','EDGAR','BC','Residential',0.354042315262556,['0.00000001', '0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1],[['less than 1e-08', ''], ['1e-08 to 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___BC___Transport','EDGAR','BC','Transport',1.14314790644645,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___BC___Industry','EDGAR','BC','Industry',26.9498316467285,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___BC___Energy','EDGAR','BC','Energy',2.66838060007095,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___CO___Total','EDGAR','CO','Total',2438.45105273437,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___CO___Residential','EDGAR','CO','Residential',38.9738866333007,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___CO___Transport','EDGAR','CO','Transport',394.993021508789,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___CO___Industry','EDGAR','CO','Industry',2437.77045893554,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___CO___Energy','EDGAR','CO','Energy',135.711784698486,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___NOx___Total','EDGAR','NOx','Total',508.899899377441,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___NOx___Residential','EDGAR','NOx','Residential',7.26847960882186,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___NOx___Transport','EDGAR','NOx','Transport',37.0271012695312,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___NOx___Industry','EDGAR','NOx','Industry',508.875351196289,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___NOx___Energy','EDGAR','NOx','Energy',182.588888891601,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___OC___Total','EDGAR','OC','Total',64.4831109832763,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___OC___Residential','EDGAR','OC','Residential',1.91931391060352,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___OC___Transport','EDGAR','OC','Transport',0.702768021583557,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___OC___Industry','EDGAR','OC','Industry',64.4528027252197,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___OC___Energy','EDGAR','OC','Energy',2.28398028459548,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM10___Total','EDGAR','PM10','Total',347.986421136474,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM10___Residential','EDGAR','PM10','Residential',5.42583458833694,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM10___Transport','EDGAR','PM10','Transport',2.34391590156555,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM10___Industry','EDGAR','PM10','Industry',347.892540930175,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM10___Energy','EDGAR','PM10','Energy',88.236288432312,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM2p5___Total','EDGAR','PM2p5','Total',305.428198480224,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM2p5___Residential','EDGAR','PM2p5','Residential',3.77355011987686,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM2p5___Transport','EDGAR','PM2p5','Transport',2.19737603931427,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM2p5___Industry','EDGAR','PM2p5','Industry',305.366345507812,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM2p5___Energy','EDGAR','PM2p5','Energy',61.9245888656616,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___SO2___Total','EDGAR','SO2','Total',1067.37240783691,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___SO2___Residential','EDGAR','SO2','Residential',15.9809639419555,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___SO2___Transport','EDGAR','SO2','Transport',2.31042273187637,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___SO2___Industry','EDGAR','SO2','Industry',1067.32620659179,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___SO2___Energy','EDGAR','SO2','Energy',780.430286535644,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']]\n];\n\nexport function getLayerPropObj(Invertory, pollutant, sectors) {\n    let selArray = layerList.filter(function (ar) {\n        return ar[0] == Invertory + '___' + pollutant + '___' + sectors;\n    });\n    if (selArray.length) {\n        selArray.forEach(function (arr) {\n            if (arr.length <= 8) {\n                let propForSLD = []\n                let rangeLength = arr[5].length - 1;\n                arr[5].forEach(function (RangeVal, index) {\n                    if (index === 0) {\n                        propForSLD.push({\n                            classType: 'Below',\n                            label: arr[6][0],\n                            color: arr[7][0],\n                            value: RangeVal\n                        });\n                        propForSLD.push({\n                            label: arr[6][1], color: arr[7][1],\n                            range: [RangeVal, arr[5][1]]\n                        });\n                    } else if (index == rangeLength) {\n                        propForSLD.push({\n                            classType: 'Above',\n                            label: arr[6][index + 1], color: arr[7][index + 1],\n                            value: RangeVal\n                        });\n                    } else {\n                        propForSLD.push({\n                            label: arr[6][index + 1], color: arr[7][index + 1],\n                            range: [RangeVal, arr[5][index + 1]]\n                        });\n                    }\n                });\n                arr.push(propForSLD)\n            }\n        });\n\n        // let title = [selArray[0][1], selArray[0][2], selArray[0][3]].join(' ').toString()+'<br> suman';\n\n        let retObj = {\n            id: selArray[0][0],\n            title: [selArray[0][1], selArray[0][2], selArray[0][3]],\n            showLegendTitle: true,\n            parameterName: selArray[0][3],\n            propForSLD: selArray[0][8],\n        };\n        return retObj;\n    } else {\n        return false;\n    }\n};\n\n\nexport const AllInventory = ['GAINS'];\n\n\n\n\n\n\n\n\n\n","import { render } from \"./mapControlsEmission.vue?vue&type=template&id=359046ff&scoped=true\"\nimport script from \"./mapControlsEmission.vue?vue&type=script&lang=js\"\nexport * from \"./mapControlsEmission.vue?vue&type=script&lang=js\"\n\nimport \"./mapControlsEmission.vue?vue&type=style&index=0&id=359046ff&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-359046ff\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div id=\"map-container2\" ref=\"LayerSelectorDropdown\">\n    </div>\n    <div id=\"layerSwitcherDiv\" class=\"ol-unselectable ol-control\" @click=\"LayerSwitcherClick()\">\n      <button>\n        <img src=\"@/assets/layers.svg\" style=\"height: 20px;width: 20px;padding-top: 2px;\">\n      </button>\n    </div>\n\n    <el-drawer\n        title=\"Layers\"\n        v-model=\"drawer\"\n        :custom-class=\"'drawerCustomCSS'\"\n        :append-to-body=\"drawerAppendToBody\"\n        :modal=\"false\"\n    >\n      <span>\n        <div class=\"layerCollection\"></div>\n          </span>\n    </el-drawer>\n\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport Control from \"ol/control/Control\";\n// import OSM from \"ol/source/OSM\";\nimport TileLayer from \"ol/layer/Tile\";\n// import TileWMS from \"ol/source/TileWMS\";\nimport View from \"ol/View\";\nimport {dataSelect, getLayerPropObj} from \"../../utils/dataEmission\";\nimport eventHub from \"../../utils/utils\";\nimport TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport EDALSLD from 'ol-plus/sld/EDALSLD';\nimport {GeoServerHost, threddDataSource} from '../../config';\nimport LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n// import {lineString, lineDistance, area as turfArea,polygon as turfPolygon, length as turfLength} from '@turf/turf';\nimport {getArea, getLength,} from 'ol/sphere';\nimport LineString from 'ol/geom/LineString';\n\n\n// import {MajorBasinExtent, BasinExtent, mbasin, dataSelect, WMSSLD, legendImage} from \"../utils/data\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import {ThreddsServer} from \"../utils/config\";\n\nimport 'ol-ext/control/Search.css';\nimport SearchNominatim from 'ol-ext/control/SearchNominatim';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nimport {Icon} from 'ol/style';\nimport {toSize} from 'ol/size';\nimport ImageIcon from '../../assets/markers_default.png';\nimport {getCenter as ol_extent_getCenter} from 'ol/extent';\nimport GeoJSON from \"ol/format/GeoJSON\";\n\n\nimport '@fortawesome/fontawesome-free/js/brands';\nimport '@fortawesome/fontawesome-free/js/solid';\nimport '@fortawesome/fontawesome-free/js/fontawesome';\n\n\nimport OLPolygon from 'ol/geom/Polygon'\nimport OlSelect from 'ol/interaction/Select'\nimport OlDraw from 'ol/interaction/Draw'\nimport OlExtTextButton from 'ol-ext/control/TextButton'\nimport Bar from 'ol-ext/control/Bar'\nimport OlExtButton from 'ol-ext/control/Button'\nimport OlExtToggle from 'ol-ext/control/Toggle';\nimport 'ol-ext/control/Bar.css'\nimport CircleStyle from \"ol/style/Circle\";\nimport {mapMutations, mapState} from 'vuex';\nimport XYZ from \"ol/source/XYZ\";\nimport {Image as ImageLayer} from \"ol/layer\";\nimport ImageWMS from \"ol/source/ImageWMS\";\nimport CanvasTitle from \"ol-ext/control/CanvasTitle\";\nimport Text from \"ol/style/Text\";\nimport LegendControl from \"ol-ext/control/Legend\";\nimport CanvasScaleLine from \"ol-ext/control/CanvasScaleLine\";\nimport PrintDialog from \"ol-ext/control/PrintDialog\";\nimport {jsPDF} from \"jspdf\";\nimport {saveAs} from \"file-saver\";\n\n\nexport default {\n  name: \"mapComponentEmission\",\n  components: {},\n  data() {\n    return {\n      drawerAppendToBody: true,\n      mapObj: '',\n      HighLightedLayer: '',\n      view: '',\n      mapObject: '',\n      MajorBasin: '',\n      AllLayers: '',\n      selectedFilesOnAYear: [],\n      drawer: true,\n    }\n  },\n  methods: {\n    ...mapMutations([\"setSelectInteractionObj\", \"appendTimeSeriesLayerCollection\", \"setVectorLayerSource\", \"setmapObject\"]),\n    mapInitilization() {\n      // let osm = new TileLayer({\n      //   source: new OSM({attributions: [],}),\n      // });\n      let esri_world_topomap = new TileLayer({\n        visible: true,\n        zIndex: 1,\n        source: new XYZ({\n          attributions: [],\n          url:\n              'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n              'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n          crossOrigin: \"Anonymous\"\n        }),\n      });\n\n      let view = new View({\n        center: [9388155.512006583, 3291367.8109067543],\n        zoom: 4,\n        extent: [6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793]\n      });\n      var map = new Map({\n        layers: [],\n        // target: this.$refs['map-root'],\n        target: 'map-container2',\n        view: view,\n      });\n\n      // map.addLayer(osm);\n      map.addLayer(esri_world_topomap);\n      this.mapObject = map;\n      //setmapObject to store\n      this.setmapObject(map);\n      window.mapObject = map;\n      this.view = view;\n      this.mapObject.addControl(\n          new Control({\n            element: document.getElementById('layerSwitcherDiv')\n          })\n      );\n      map.getView().fit([6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793], map.getView());\n    },\n    changeInventory() {\n      this.addTimeDimensionLayer();\n    },\n    async addTimeDimensionLayer() {\n      console.log(this.$store.state);\n      var mapObject = this.mapObject;\n      var layerId = this.$store.state.inventory + '___' + this.$store.state.pollutants + '___' + this.$store.state.sectors + '___' + this.$store.state.year;\n      var selectedLayr = this.TimeSeriesLayerCollection.filter(function (x) {\n        var checkLayer = x.getProperties().id === layerId;\n        if (!checkLayer) {\n          x.setVisibleDivBind(false);\n        }\n        return checkLayer;\n      });\n      if (selectedLayr.length) {\n        if (selectedLayr.length === 1) {\n          selectedLayr[0].setVisibleDivBind(true);\n        } else {\n          console.log(\"there are multiple layer added!!!!\");\n        }\n      } else {\n        let ll = getLayerPropObj(this.$store.state.inventory, this.$store.state.pollutants, this.$store.state.sectors);\n        let title = [ll.title[0], ll.title[2], this.$store.state.year, ll.title[1]].join(' ') + ' (kt)';\n        ll.title = [ll.title[0], ll.title[2], this.$store.state.year].join(' ') + \"</br> \" + ll.title[1] + ' (kt)';\n        let EdalSldObj = new EDALSLD(ll);\n        let WMSList = `${threddDataSource}wms/HKHEmissions/${this.$store.state.inventory}/${this.$store.state.pollutants}/${this.$store.state.inventory}_${this.$store.state.pollutants}_${this.$store.state.year}.nc`;\n        let legendUrl = WMSList + `?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&LAYERS=${this.$store.state.sectors}&SLD_BODY=${encodeURIComponent(EdalSldObj.getEDALSLD())}`;\n\n        var mm = new TimeDimensionTile({\n          id: layerId,\n          title: title,\n          visible: true,\n          opacity: 0.7,\n          legendPath: legendUrl,\n          showlegend: true,\n          showControlPanel: false,\n          ThreddsDataServerVersion: \"5\",\n          zIndex: 500,\n          timeSliderSize: \"small\",\n          alignTimeSlider: \"right\",\n          customLegendElement: EdalSldObj.getLegendHTMLElement(),\n          source: {\n            url: WMSList,\n            params: {\n              'VERSION': '1.1.1',\n              'LAYERS': ll.parameterName,\n              'SLD_BODY': EdalSldObj.getEDALSLD(),\n            }\n          }\n        });\n        await mm.init().then(\n            () => {\n              mapObject.addThreddsLayer(mm);\n              let lk = new LayerSwitcher(\".layerCollection\", mm, true, true, 'withOpacSlider');\n              mm.setVisible(true);\n\n              this.appendTimeSeriesLayerCollection(lk);\n            },\n            (error) => {\n              console.error(error);\n            });\n      }\n    },\n    addGeoCodingAndInteractionBar() {\n      var map = this.mapObject;\n\n// Set the control grid reference\n      var search = new SearchNominatim({\n        polygon: true,\n        reverse: false,\n        position: true,\t// Search, with priority to geo position,\n        maxHistory: -1,\n        className: 'OSMBasedGeocodingEmissionPageNew',\n      });\n\n// search.set('copy', false)\n\n      var GeoCodingAndDrawLayer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 999\n      });\n      map.addLayer(GeoCodingAndDrawLayer);\n\n      map.addControl(search);\n\n      // This sets on store\n      this.setVectorLayerSource(GeoCodingAndDrawLayer.getSource());\n\n// Select feature when click on the reference index\n      search.on('select', function (e) {\t// console.log(e);\n        // GeoCodingAndDrawLayer.getSource().clear();\n        removePreviousSearchFeature();\n        // Check if we get a geojson to describe the search\n        if (e.search.geojson) {\n          var format = new GeoJSON();\n          console.log('e.search.geojson')\n          console.log(e.search.geojson)\n          var f = format.readFeature(e.search.geojson, {\n            dataProjection: \"EPSG:4326\",\n            featureProjection: map.getView().getProjection()\n          });\n          delete e.search.geojson;\n          f.setProperties(e.search);\n          GeoCodingAndDrawLayer.getSource().addFeature(f);\n          var view = map.getView();\n          var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n          var zoom = view.getZoomForResolution(resolution);\n          var center = ol_extent_getCenter(f.getGeometry().getExtent());\n          // redraw before zoom\n          setTimeout(function () {\n            view.animate({\n              center: center,\n              zoom: Math.min(zoom, 16)\n            });\n          }, 100);\n        } else {\n          map.getView().animate({\n            center: e.coordinate,\n            zoom: Math.max(map.getView().getZoom(), 16)\n          });\n        }\n\n        UpDateVectorLayerStyle();\n      });\n\n// Main control bar\n      var mainbar = new Bar();\n      mainbar.setPosition('top-left');\n      map.addControl(mainbar);\n// Edit control bar\n      var editbar = new Bar({\n        toggleOne: true,\t// one control active at the same time\n        group: false\t\t\t// group controls together\n      });\n      mainbar.addControl(editbar);\n\n// Add selection tool:\n//  1- a toggle control with a select interaction\n//  2- an option bar to delete / get information on the selected feature\n      var sbar = new Bar();\n      sbar.addControl(new OlExtButton({\n        html: '<i class=\"fa fa-times\"></i>',\n        title: \"Delete\",\n        handleClick: function () {\n          var features = selectCtrl.getInteraction().getFeatures();\n          if (!features.getLength()) info(\"Select an object first...\");\n          else info(features.getLength() + \" object(s) deleted.\");\n\n          features.forEach(function (f) {\n            console.log(f);\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          });\n          selectCtrl.getInteraction().getFeatures().clear();\n        }\n      }));\n\n\n      var selectCtrl = new OlExtToggle({\n        html: '<i class=\"fa fa-hand-pointer\"></i>',\n        title: \"Select\",\n        interaction: new OlSelect({\n          hitTolerance: 2,\n          style: new Style({\n            image: new CircleStyle({\n              radius: 5,\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              }),\n            }),\n            stroke: new Stroke({\n              color: [255, 0, 0, 1],\n              opacity: 1,\n              width: 2\n            }),\n            fill: new Fill({\n              color: '#e5e5ff50'\n            })\n            // Commented to only see the lines\n            //,fill: new ol.style.Stroke ({\n            //  color: [155, 155, 155, 0.4]\n            //})\n          })\n        }),\n        bar: sbar,\n        autoActivate: true,\n        active: true\n      });\n\n      editbar.addControl(selectCtrl);\n      this.setSelectInteractionObj(selectCtrl.getInteraction());\n// Add editing tools\n      var pedit = new OlExtToggle({\n        html: '<i class=\"fa fa-map-marker-alt\" ></i>',\n        title: 'Point',\n        interaction: new OlDraw({\n          type: 'Point',\n          source: GeoCodingAndDrawLayer.getSource()\n        })\n      });\n      editbar.addControl(pedit);\n\n\n      var fedit = new OlExtToggle({\n        html: '<i class=\"fa fa-draw-polygon\" ></i>',\n        title: 'Polygon',\n        interaction: new OlDraw({\n          type: 'Polygon',\n          source: GeoCodingAndDrawLayer.getSource(),\n          // Count inserted points\n          geometryFunction: function (coordinates, geometry) {\n            this.nbpts = coordinates[0].length;\n            if (geometry) geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            else geometry = new OLPolygon(coordinates);\n            return geometry;\n          }\n        }),\n        // Options bar ssociated with the control\n        bar: new Bar({\n          controls: [new OlExtTextButton({\n            html: 'undo',//'<i class=\"fa fa-mail-reply\"></i>',\n            title: \"undo last point\",\n            handleClick: function () {\n              if (fedit.getInteraction().nbpts > 1) fedit.getInteraction().removeLastPoint();\n            }\n          }),\n            new OlExtTextButton({\n              html: 'finish',\n              title: \"finish\",\n              handleClick: function () {\n                // Prevent null objects on finishDrawing\n                if (fedit.getInteraction().nbpts > 3) fedit.getInteraction().finishDrawing();\n              }\n            })\n          ]\n        })\n      });\n      editbar.addControl(fedit);\n\n\n      // fedit.getInteraction().on('drawend', function (e) {\n      //\n      //   console.log(e.feature);\n      //   console.log(e.feature);\n      //\n      //   // GeoCodingAndDrawLayer.getSource().removeFeature(e.feature);\n      //\n      //\n      // });\n\n      fedit.getInteraction().on('drawstart', function () {\n        GeoCodingAndDrawLayer.getSource().once('addfeature', handleAddFeature);\n      });\n\n      function handleAddFeature(evt) {\n        let coordi = evt.feature.getGeometry().getCoordinates();\n\n        const area = getArea(evt.feature.getGeometry());\n        // Sq.Km\n        let outputArea = Math.round((area / 1000000) * 100) / 100;\n        console.log(outputArea);\n\n        let li = new LineString(coordi);\n        const length = getLength(li);\n        // In Km\n        let outputLength = Math.round((length / 1000) * 100) / 100;\n        console.log(outputLength);\n        // GeoCodingAndDrawLayer.getSource().removeFeature(evt.feature);\n      }\n\n// Show info\n      function info(i) {\n        console.log(i);\n        // document.querySelector(\"#info\").innerHTML(i || \"\");\n      }\n\n\n      function UpDateVectorLayerStyle() {\n        GeoCodingAndDrawLayer.getSource().forEachFeature(function (feature) {\n          let StyleObj = null;\n          if (feature.getProperties().osm_id) {\n            StyleObj = [\n              new Style({\n                stroke: new Stroke({\n                  color: [0, 0, 0, 0],\n                  opacity: 1,\n                  width: 3\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff00'\n                })\n                // Commented to only see the lines\n                //,fill: new ol.style.Stroke ({\n                //  color: [155, 155, 155, 0.4]\n                //})\n              }),\n              // Dash white lines (second style, on the top)\n              new Style({\n                image: new Icon({\n                  anchor: [0.5, 46],\n                  anchorXUnits: 'fraction',\n                  anchorYUnits: 'pixels',\n                  src: ImageIcon,\n                  size: toSize([40, 45]),\n                  // offset:[20,20]\n                }),\n                stroke: new Stroke({\n                  color: [0, 0, 255, 1.0],\n                  opacity: 1,\n                  width: 3,\n                  lineDash: [4, 8, 4, 8]\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff40'\n                })\n              })\n            ];\n\n          } else {\n            StyleObj = new Style({\n              image: new CircleStyle({\n                radius: 5,\n                stroke: new Stroke({\n                  color: [255, 0, 0, 1],\n                  opacity: 1,\n                  width: 2\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff50'\n                }),\n              }),\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              })\n              // Commented to only see the lines\n              //,fill: new ol.style.Stroke ({\n              //  color: [155, 155, 155, 0.4]\n              //})\n            });\n\n          }\n          feature.setStyle(StyleObj);\n\n        });\n      }\n\n      function removePreviousSearchFeature() {\n        var features = GeoCodingAndDrawLayer.getSource().getFeatures();\n        features.forEach(function (f) {\n          if (f.getProperties().osm_id) {\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          }\n        });\n        // console.log(features);\n      }\n    },\n    LayerSwitcherClick() {\n      this.drawer = true;\n    },\n    handleClose(done, e) {\n      console.log(e);\n\n      // this.$confirm('You still have unsaved data, proceed?')\n      //     .then(()=> {\n      //       done();\n      //     })\n      //     .catch(()=> {\n      //     });\n\n    },\n    addAdminLayers() {\n\n      let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n      let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n\n      // let le1 = this.olExtLegentItem('Country Outline', 'Province', WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary')\n\n      let countryBoundary = new ImageLayer({\n        id: 'Country_Outline',\n        title: 'Country Outline',\n        visible: false,\n        legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry',\n        zIndex: 6,\n        // OLEXTLegendObject: le1,\n        source: new ImageWMS({\n          url: GeoServerWMSURL,\n          crossOrigin: 'anonymous',\n          params: {'LAYERS': 'AirQuality:nepal_country_boundry'},\n          serverType: 'geoserver',\n        }),\n      });\n      // let le2 = this.olExtLegentItem('Province', 'Province', WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary')\n\n      let provinceBoundary = new ImageLayer({\n        id: 'Province',\n        title: 'Province',\n        visible: false,\n        legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary',\n        zIndex: 5,\n        // OLEXTLegendObject: le2,\n        source: new ImageWMS({\n          url: GeoServerWMSURL,\n          crossOrigin: 'anonymous',\n          params: {'LAYERS': 'AirQuality:nepal_provincial_boundary'},\n          serverType: 'geoserver',\n        }),\n      });\n      // let le3 = this.olExtLegentItem('District', 'District', WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary')\n\n      let DistrictBoundary = new ImageLayer({\n        id: 'District',\n        title: 'District',\n        visible: false,\n        legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary',\n        zIndex: 4,\n        // OLEXTLegendObject: le3,\n        source: new ImageWMS({\n          url: GeoServerWMSURL,\n          crossOrigin: 'anonymous',\n          params: {'LAYERS': 'AirQuality:nepal_district_boundary'},\n          serverType: 'geoserver',\n        }),\n      });\n      // let le4 = this.olExtLegentItem('Palika', 'Palika', WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary')\n\n      let PalikaBoundary = new ImageLayer({\n        id: 'Palika',\n        title: 'Palika',\n        visible: false,\n        legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary',\n        zIndex: 3,\n        // OLEXTLegendObject: le4,\n        source: new ImageWMS({\n          url: GeoServerWMSURL,\n          crossOrigin: 'anonymous',\n          params: {'LAYERS': 'AirQuality:nepal_palika_boundary'},\n          serverType: 'geoserver',\n        }),\n      });\n\n      // let that = this;\n      // countryBoundary.on('change:visible', AddRemoveLegendFunction);\n      // provinceBoundary.on('change:visible', AddRemoveLegendFunction);\n      // DistrictBoundary.on('change:visible', AddRemoveLegendFunction);\n      // PalikaBoundary.on('change:visible', AddRemoveLegendFunction);\n      this.mapObject.addLayer(countryBoundary);\n      this.mapObject.addLayer(provinceBoundary);\n      this.mapObject.addLayer(DistrictBoundary);\n      this.mapObject.addLayer(PalikaBoundary);\n      let l1 = new LayerSwitcher(\".layerCollection\", countryBoundary, true, true,);\n      let l2 = new LayerSwitcher(\".layerCollection\", provinceBoundary, true, true,);\n      let l3 = new LayerSwitcher(\".layerCollection\", DistrictBoundary, true, true,);\n      let l4 = new LayerSwitcher(\".layerCollection\", PalikaBoundary, true, true,);\n\n      l1.setVisible(true);\n      l2.setVisible(true);\n      l3.setVisible(true);\n      l4.setVisible(true);\n\n      // this.appendTimeSeriesLayerCollection(l1);\n      // this.appendTimeSeriesLayerCollection(l2);\n      // this.appendTimeSeriesLayerCollection(l3);\n      // this.appendTimeSeriesLayerCollection(l4);\n\n    },\n    olextPrintFunction() {\n      // Add a title control\n      this.mapObject.addControl(new CanvasTitle({\n        title: 'my title',\n        visible: false,\n        style: new Style({text: new Text({font: '20px \"Lucida Grande\",Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif'})})\n      }));\n      // let legendItems=[];\n\n\n      // Add a legend to the print\n      var legendCtrl = new LegendControl({legend: this.mapControlVariable.LegendObject});\n      this.mapObject.addControl(legendCtrl);\n\n      // Add a ScaleLine control\n      this.mapObject.addControl(new CanvasScaleLine());\n\n      // Print control\n      var printControl = new PrintDialog({lang: 'en'});\n      printControl.setSize('A4');\n      printControl.setOrientation('landscape');\n      this.mapObject.addControl(printControl);\n\n\n      /* On print > save image file */\n      printControl.on(['print', 'error'], (e) => {\n        // let LegendImageArray = this.legendObjectCollection();\n        // LegendImageArray.forEach(function (ii) {\n        //   console.log(ii);\n        //   legendd.addItem(ii);\n        // });\n        // // legendItems = LegendImageArray;\n        // console.log(LegendImageArray);\n\n        // Print success\n        if (e.image) {\n          if (e.pdf) {\n            // Export pdf using the print info\n            var pdf = new jsPDF({\n              orientation: e.print.orientation,\n              unit: e.print.unit,\n              format: e.print.size\n            });\n            pdf.addImage(e.image, 'JPEG', e.print.position[0], e.print.position[0], e.print.imageWidth, e.print.imageHeight);\n            pdf.save(e.print.legend ? 'legend.pdf' : 'map.pdf');\n          } else {\n            // Save image as file\n            e.canvas.toBlob(function (blob) {\n              var name = (e.print.legend ? 'legend.' : 'map.') + e.imageType.replace('image/', '');\n              saveAs(blob, name);\n            }, e.imageType, e.quality);\n          }\n        } else {\n          console.warn('No canvas to export');\n        }\n      });\n\n    },\n  },\n  computed: {\n    ...mapState([\"TimeSeriesLayerCollection\"]),\n    getInventory() {\n      return dataSelect.Inventory;\n    },\n  },\n  created() {\n    // this.Inventory = this.$store.state.inventory;\n    this.drawer = true;\n  },\n  beforeMount() {\n\n  },\n  mounted() {\n    this.mapInitilization();\n    // this.addGeoCoding();\n    this.addGeoCodingAndInteractionBar();\n    // this.olextPrintFunction();\n\n    eventHub.$on('InventoryChange', () => {\n      this.changeInventory();\n    });\n    this.drawer = false;\n    // setTimeout(() => {\n    //   this.addAdminLayers();\n    // }, 2000);\n\n  },\n}\n</script>\n\n<style>\n#map-container2 {\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n}\n\n#map-container2 .ol-viewport {\n  border-radius: 5px;\n}\n\n#layerSwitcherDiv {\n  right: 0.5em;\n  top: 0.5em;\n  position: absolute;\n}\n\n#layerSwitcherDiv button {\n  line-height: unset;\n  border-radius: 1px;\n}\n\n/*.el-overlay {*/\n/*  position: fixed;*/\n/*  top: 0;*/\n/*  right: 0;*/\n/*  bottom: 0;*/\n/*  left: 0;*/\n/*  z-index: 2000;*/\n/*  height: 100%;*/\n/*  background-color: rgba(0, 0, 0, 0);*/\n/*}*/\n\n\n/* OSM Based Geocoding*/\n.ol-search ul li {\n  border-bottom: 1px solid lightgray;\n\n  padding: 10px 5px 10px 5px !important;\n  flex: 1;\n  max-width: 608px;\n  white-space: normal !important;\n  overflow: unset;\n  flex-grow: 1;\n  text-overflow: ellipsis;\n}\n\n.ol-search ul li:last-child {\n  border-bottom: none;\n  border-radius: 0px;\n}\n\n.ol-search ul {\n  list-style: none;\n  cursor: pointer;\n  padding: 0px 5px 0px 5px !important;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  clear: both;\n  cursor: pointer;\n  max-width: 618px;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #fff;\n  font-size: 13px;\n}\n\n.ol-search {\n  z-index: 999;\n}\n\n.ol-search {\n  top: 4.1em;\n  left: 0.5em;\n  /*width: 500px;*/\n}\n\n.ol-search input {\n  width: 600px;\n}\n\n\n.ol-control.ol-bar {\n  left: 3.2em;\n  top: 6em;\n}\n\n.ol-control.ol-bar.ol-top.ol-left, .ol-control.ol-bar.ol-top.ol-right {\n  top: 6.5em;\n  transform: none;\n}\n\n</style>","import { render } from \"./mapComponentEmission.vue?vue&type=template&id=2f54f295\"\nimport script from \"./mapComponentEmission.vue?vue&type=script&lang=js\"\nexport * from \"./mapComponentEmission.vue?vue&type=script&lang=js\"\n\nimport \"./mapComponentEmission.vue?vue&type=style&index=0&id=2f54f295&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading p-10\">Information\n        <span @click=\"RefreshInformation()\">\n                  <i class=\"fas fa-sync float-right refresh-information\"></i>\n        </span>\n      </h6>\n    </div>\n    <div class=\"information-body\">\n      <el-card shadow=\"never\" class=\"transition-box\" v-if=\"showStat ===false\">\n        Please select or draw a feature\n      </el-card>\n      <div class=\"informationShow\" v-if=\"showStat ===true\">\n        <h1 class=\"heading-layer-info\">{{ infoHeading }}</h1>\n        <br>\n        <el-table class=\"info-table-el table-div\" :data=\"tableDataStat\">\n          <el-table-column prop=\"StatName\" label=\"statName\" label-class-name=\"info-table\"></el-table-column>\n          <el-table-column prop=\"StatValue\" label=\"statValue\" label-class-name=\"info-table\"></el-table-column>\n        </el-table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n\nimport OLWKT from \"ol/format/WKT\";\nimport {mapActions, mapState} from \"vuex\";\nimport eventHub from \"../../utils/utils\";\n\nexport default {\n  name: \"EmissionStatistics\",\n  data() {\n    return {\n      showStat: false,\n      infoHeading: '',\n      tableDataStat:[]\n    }\n  },\n  computed: {\n    ...mapState([\"selectInteractionObj\", \"TimeSeriesLayerCollection\"]),\n  },\n  methods: {\n    ...mapActions([\"GetLayerStatInfo\"]),\n    async RefreshInformation() {\n\n      if (this.selectInteractionObj) {\n        if (this.selectInteractionObj.getFeatures().getLength()) {\n          var wktfeaturegeom, geometryType;\n          var features = this.selectInteractionObj.getFeatures();\n          features.forEach(function (f) {\n            var format = new OLWKT();\n            wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            });\n            geometryType = f.getGeometry().getType();\n          });\n          var selectedLayr = this.TimeSeriesLayerCollection.filter(function (x) {\n            var checkLayer = x.getProperties().visible === true;\n            return checkLayer;\n          });\n          if (selectedLayr.length) {\n            let layerIndex = null;\n            let InterestedLayer = null;\n            selectedLayr.forEach(function (cobj, ind) {\n              let currentLayerIndex = cobj.getLayer().getProperties().zIndex;\n              let currentLayerId = cobj.getLayer().getProperties()\n              if (ind == 0) {\n                InterestedLayer = currentLayerId;\n                layerIndex = currentLayerIndex;\n              } else {\n                if (currentLayerIndex > layerIndex) {\n                  layerIndex = currentLayerIndex;\n                  InterestedLayer = currentLayerId;\n                }\n              }\n            });\n            let Param = {\n              geometryType: geometryType,\n              wkt: wktfeaturegeom,\n              layerDetail: InterestedLayer.id.split(\"___\")\n            };\n\n            let response = await this.GetLayerStatInfo(Param);\n            // this.min = response.Minimum;\n            // this.max = response.Maximum;\n            // this.sum = response.sum;\n            this.showStat = true;\n            this.infoHeading = InterestedLayer.id.split(\"___\").join(\" \")+\"(kt)\";\n            this.tableDataStat=response;\n            console.log(response);\n          } else {\n            this.showStat = false;\n            this.$notify({\n              title: 'Warning',\n              message: 'Please Add a layer first',\n              type: 'warning'\n            });\n          }\n        } else {\n          this.showStat = false;\n          this.$notify({\n            title: 'Warning',\n            message: 'Please select a feature on map.',\n            type: 'warning'\n          });\n        }\n      }\n    }\n  },\n    beforeCreate() {\n\n    eventHub.$on('setDefaultEmissionStatistics', () => {\n      this.RefreshInformation();\n    });\n\n  },\n};\n\n</script>\n\n\n<style>\n.transition-box {\n  margin-bottom: 10px;\n  width: 100%;\n  border-radius: 4px;\n  background-color: rgba(64, 158, 255, 0);\n  text-align: center;\n  color: #ee0000;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  margin-right: 20px;\n  border-width: 1px !important;\n  border-color: #b51816;\n}\n\n.information-body {\n  padding: 10px;\n}\n\n.float-right {\n  float: right;\n}\n\n.p-10 {\n  padding-right: 10px;\n}\n\n.refresh-information {\n  cursor: pointer;\n}\n\nh1.heading-layer-info {\n  text-align: center;\n  padding: 10px;\n}\n\n.info-table-el .info-table{\n  display: none;\n}\n.table-div{\n  width: 100%;\n}\n\n</style>\n\n","import { render } from \"./EmissionStatistics.vue?vue&type=template&id=9b1ecce6\"\nimport script from \"./EmissionStatistics.vue?vue&type=script&lang=js\"\nexport * from \"./EmissionStatistics.vue?vue&type=script&lang=js\"\n\nimport \"./EmissionStatistics.vue?vue&type=style&index=0&id=9b1ecce6&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TabBodyEmission.vue?vue&type=template&id=11717ea9&scoped=true\"\nimport script from \"./TabBodyEmission.vue?vue&type=script&lang=js\"\nexport * from \"./TabBodyEmission.vue?vue&type=script&lang=js\"\n\nimport \"./TabBodyEmission.vue?vue&type=style&index=0&id=11717ea9&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-11717ea9\"]])\n\nexport default __exports__","<template>\n  <el-row class=\"full-height\">\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapControlsSocioEconomic></mapControlsSocioEconomic>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentSocioEconomic :IndexValue=\"1\"></chartComponentSocioEconomic>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"12\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapComponentSocioEconomic></mapComponentSocioEconomic>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentSocioEconomic :IndexValue=\"2\" ></chartComponentSocioEconomic>\n        </el-col>\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentSocioEconomic :IndexValue=\"3\" ></chartComponentSocioEconomic>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-10\">\n\n<!--          <SocioEconomicStatistics></SocioEconomicStatistics>-->\n\n        <LayerSwitcherControl></LayerSwitcherControl>\n\n        </el-col>\n\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-10\">\n          <chartComponentSocioEconomic :IndexValue=\"4\"></chartComponentSocioEconomic>\n        </el-col>\n      </el-row>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n\n// import about from \"./about\";\nimport chartComponentSocioEconomic from \"./chartComponentSocioEconomic\";\nimport mapControlsSocioEconomic from \"./mapControlsSocioEconomic\";\nimport mapComponentSocioEconomic from \"./mapComponentSocioEconomic\";\n// import SocioEconomicStatistics from \"./SocioEconomicStatistics\";\nimport LayerSwitcherControl from \"./LayerSwitcherControl\"\nimport {mapActions} from \"vuex\";\n\nexport default {\n  name: \"TabBodySocioEconomic\",\n  components: {\n    // about,\n    chartComponentSocioEconomic,\n    mapControlsSocioEconomic,\n    mapComponentSocioEconomic,\n    LayerSwitcherControl,\n  },\n  methods: {\n    ...mapActions([\"getCascaderOptions\"]),\n  },\n  async mounted() {\n    // let data = await this.getCascaderOptions();\n    // console.log(data);\n  }\n}\n</script>\n\n<style scoped>\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n.full-height {\n  height: 100%;\n}\n</style>\n","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <!--    <div class=\"body-container full-height\" >-->\n    <!--    </div>-->\n    <div class=\"chart-option\">\n      <el-row :gutter=\"5\">\n        <el-col :span=\"14\">\n          <div class=\"grid-content bg-purple\">\n            <el-select v-model=\"PlotOptionValue\" placeholder=\"Select plot type\" size=\"mini\" class=\"plotSelection\"\n                       @change=\"ChangePlotOption()\">\n              <el-option\n                  v-for=\"item in PlotOptions\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </div>\n        </el-col>\n        <el-col v-if=\"PlotOptionValue=='Age Groups' || PlotOptionValue=='Population Pyramid'\" :span=\"7\">\n          <div class=\"grid-content bg-purple\">\n            <el-select v-model=\"CurrentYear\" placeholder=\"Select plot type\" size=\"mini\" class=\"plotSelection\"\n            >\n              <el-option\n                  v-for=\"item in dataOptions.pop_year\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </div>\n        </el-col>\n        <el-col :span=\"3\">\n          <div class=\"grid-content bg-purple sync-chart\">\n            <el-button size=\"mini\" @click=\"RefreshChart()\" :disabled=\"isLoading\"><i class=\"fas fa-sync\"></i></el-button>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n\n    <div class=\"chart-div\" id=\"chart\" ref=\"ChartDiv\" v-loading=\"isLoading\">\n\n\n    </div>\n    <!--    -->\n    <!--    <div class=\"chart-div\" v-loading=\"isLoading\">-->\n\n    <!--    </div>-->\n\n  </div>\n</template>\n\n<script>\n\nimport eventHub from \"../../utils/utils\"\n\nimport Highcharts from 'highcharts';\n// Alternatively, this is how to load Highstock. Highmaps is similar.\n// import Highcharts from 'highcharts/highstock';\n\n// Load the exporting module.\nimport Exporting from 'highcharts/modules/exporting';\nimport NOdata from 'highcharts/modules/no-data-to-display'\nimport MoreHighcharts from 'highcharts/highcharts-more';\nimport coloraxis from 'highcharts/modules/coloraxis'\n\n// Initialize exporting module.\nExporting(Highcharts);\nNOdata(Highcharts);\nMoreHighcharts(Highcharts);\ncoloraxis(Highcharts);\n\n\n// window.Highcharts = Highcharts;\n\nimport {mapState, mapActions} from 'vuex';\n\nimport '@fortawesome/fontawesome-free/js/brands';\nimport '@fortawesome/fontawesome-free/js/solid';\nimport '@fortawesome/fontawesome-free/js/fontawesome';\n\nimport OLWKT from 'ol/format/WKT'\nimport {dataSelect} from \"../../utils/dataSocioEconomic\";\n\nexport default {\n  name: \"chartComponentSocioEconomic\",\n  props: {\n    IndexValue: {\n      type: Number,\n      required: true\n    },\n  },\n  data() {\n    return {\n      value1: '',\n      PlotOptions: [{\n        value: 'Population Time Series',\n        label: 'Population Time Series'\n      }, {\n        value: 'Population Pyramid',\n        label: 'Population Pyramid'\n      }, {\n        value: 'Age Groups',\n        label: 'Age Groups'\n      }, {\n        value: 'Population Distribution',\n        label: 'Population Distribution'\n      }],\n      PlotOptionValue: 'Population Time Series',\n      CascaderValue: [],\n      CurrentYear: '',\n      dataOptions: dataSelect,\n      isLoading: true,\n    }\n  },\n  methods: {\n    ...mapActions([\"PostChartDataProcessSocioEconomic\"]),\n    updateChart(HcObject) {\n      Highcharts.chart('chart', HcObject);\n    },\n    ChangePlotOption() {\n      this.CascaderValue = [];\n    },\n    getHCObject(response) {\n      if (response.plotType == 'Population Pyramid') {\n        let SectorShare = {\n          chart: {\n            type: 'bar'\n          },\n          title: {\n            text: 'Population Pyramid ' + response.Year\n          },\n          subtitle: {\n            text: ''\n          },\n          xAxis: [{\n            categories: response['categories'],\n            reversed: false,\n            labels: {\n              step: 1\n            },\n            title: {\n              text: 'Age',\n              // align: 'high'\n            },\n          }, { // mirror axis on right side\n            opposite: true,\n            reversed: false,\n            categories: response['categories'],\n            linkedTo: 0,\n            labels: {\n              step: 1\n            },\n            title: {\n              text: 'Age',\n              // align: 'high'\n            },\n          }],\n          yAxis: [{\n            title: {\n              text: null\n            },\n            labels: {\n              formatter: function () {\n                return Math.abs(this.value) > 1000 ? (Highcharts.numberFormat(Math.abs(this.value) / 1000, 0) + 'k') : Highcharts.numberFormat(Math.abs(this.value), 0);\n              }\n            },\n            reversed: true,\n            width: '50%'\n          }, {\n            title: {\n              text: null\n            },\n            labels: {\n              formatter: function () {\n                return Math.abs(this.value) > 1000 ? (Highcharts.numberFormat(Math.abs(this.value) / 1000, 0) + 'k') : Highcharts.numberFormat(Math.abs(this.value), 0);\n              }\n            },\n            left: '50%',\n            offset: 0,\n            showFirstLabel: false,\n            width: '50%'\n          }],\n          tooltip: {\n            valueSuffix: ''\n          },\n          credits: {\n            enabled: false\n          },\n\n          series: [{\n            name: 'Male',\n            data: response['male'],\n            color: '#00688B'\n          }, {\n            name: 'Female',\n            colorAxis: 1,\n            data: response['female'],\n            yAxis: 1,\n            color: '#FF34B3'\n          }]\n        };\n        console.log(JSON.stringify(SectorShare));\n        return SectorShare;\n      } else if (response.plotType == 'Population Time Series') {\n        let TickPositioner__yyyy_func = function (data) {\n          let PositionList = [];\n          data.forEach(function (val, index) {\n            if (index % 4 == 0) {\n              PositionList.push(val[0])\n            }\n          })\n          let TickPositionerFunction = function () {\n            return PositionList;\n          }\n          return TickPositionerFunction\n        };\n\n        let TickPositioner__yyyy = TickPositioner__yyyy_func(response.populationDensity);\n\n        let DateFormatter__dd_func = function () {\n          return Highcharts.dateFormat('%Y', this.value);\n        };\n\n        let Timeseries = {\n          chart: {\n            type: 'spline',\n            zoomType: 'x'\n          },\n          title: {\n            text: 'Population Density Time Series'\n          },\n          subtitle: {\n            text: ''\n          },\n          xAxis: {\n            type: 'datetime',\n            dateTimeLabelFormats: { // don't display the dummy year\n              month: '%e. %b',\n              year: '%b'\n            },\n            title: {\n              text: 'Date'\n            },\n            tickPositioner: TickPositioner__yyyy,\n            labels: {\n              formatter: DateFormatter__dd_func,\n            }\n          },\n          yAxis: {\n            title: {\n              text: 'People per Km<sup>2</sup>',\n              useHTML:true\n            },\n          },\n          legend: {\n            enabled: false\n          },\n          credits: {\n            enabled: false\n          },\n          plotOptions: {\n            series: {\n              label: {\n                enabled: false\n              },\n              marker: {\n                enabled: true\n              }\n            }\n          },\n          series: [{\n            name: \"Pollutant\",\n            data: response.populationDensity,\n            color: '#7cb5ec'\n          }],\n        };\n        return Timeseries\n      } else if (response.plotType == 'Age Groups') {\n        let AgeGroup = {\n          chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false,\n            type: 'pie'\n          },\n          credits: {\n            enabled: false\n          },\n          title: {\n            text: 'Age Group'\n          },\n          tooltip: {\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n          },\n          accessibility: {\n            point: {\n              valueSuffix: '%'\n            }\n          },\n          plotOptions: {\n            pie: {\n              allowPointSelect: true,\n              cursor: 'pointer',\n              borderRadius: 5,\n              dataLabels: {\n                enabled: true,\n                format: '<!--<b>{point.name}</b>--><br>{point.percentage:.1f} %',\n                distance: -50,\n                filter: {\n                  property: 'percentage',\n                  operator: '>',\n                  value: 4\n                }\n              },\n              showInLegend: true\n            }\n          },\n          series: [{\n            name: 'Age Groups',\n            colorByPoint: true,\n            data: response.PieChartData,\n          }]\n        }\n        return AgeGroup;\n      } else if (response.plotType == 'Population Distribution') {\n        let PopulationDistribution = {\n          chart: {\n            type: 'column'\n          },\n          title: {\n            text: 'Population Distribution'\n          },\n          xAxis: {\n            categories: response.categories\n          },\n          yAxis: {\n            title: {\n              text: 'Count'\n            }\n          },\n          credits: {\n            enabled: false\n          },\n          plotOptions: {},\n          series: [{\n            name: 'Total Population',\n            data: response.data,\n            color: '#7cb5ec'\n          }]\n        }\n        return PopulationDistribution;\n\n      }\n\n    },\n    async RefreshChart() {\n      // debugger;\n      if (this.selectInteractionObj) {\n\n        if (this.selectInteractionObj.getFeatures().getLength()) {\n          var wktfeaturegeom, geometryType;\n          var features = this.selectInteractionObj.getFeatures();\n\n          features.forEach(function (f) {\n            var format = new OLWKT();\n            wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            });\n            geometryType = f.getGeometry().getType();\n          });\n\n          let Param = {\n            year: this.CurrentYear,\n            geometryType: geometryType,\n            wkt: wktfeaturegeom,\n            plotType: this.PlotOptionValue\n          };\n          this.isLoading = true;\n          let response = await this.PostChartDataProcessSocioEconomic(Param);\n          if (response.code == 200) {\n            console.log({response: response, param: Param});\n            let hcObject = this.getHCObject(response, Param);\n            this.HCObject = Highcharts.chart(this.$refs.ChartDiv, hcObject);\n            this.isLoading = false;\n\n          } else {\n            this.$notify({\n              title: 'Error',\n              message: 'Please select a valid polygon or point',\n              type: 'error'\n            });\n            if (this.HCObject) {\n              this.HCObject.destroy();\n            }\n            this.isLoading = false;\n          }\n\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please select a feature on map.',\n            type: 'warning'\n          });\n        }\n      }\n    }\n  },\n\n  computed: {\n    ...mapState([\"CascaderInventriesComparison\", \"CascaderSectorContribution\", \"CascaderSectorShare\", \"CascaderTimeSeries\", \"selectInteractionObj\"]),\n  },\n\n  async mounted() {\n//     Generate the chart\n//     Highcharts.chart('chart', {\n//       credits: {\n//         enabled: false\n//       },\n//       title: {\n//         align: \"center\",\n//         text: \"Select Indices to Display Chart\",\n//       },\n//       series: [{\n//         data: [],\n//       }],\n//       chart: {\n//         backgroundColor: 'rgba(255,255,255,0)',\n//         style: {\n//           \"fontFamily\": \"Lato,\\\"Lucida Grande\\\", \\\"Lucida Sans Unicode\\\", Verdana, Arial, Helvetica, sans-serif\",\n//           \"fontSize\": \"12px\"\n//         },\n//\n//         animation: true,\n//         zoomType: 'x',\n// //        borderColor: '#000000',\n// //        borderWidth: 2,\n//         type: 'area',\n//       },\n//       noData: {\n//         style: {\n//           fontWeight: 'bold',\n//           fontSize: '15px',\n//           color: '#303030'\n//         }\n//       },\n//     });\n    eventHub.$on('UpdateChart', (HcObject) => {\n      this.updateChart(HcObject);\n    });\n  },\n\n  beforeCreate() {\n    eventHub.$on('setDefaultCascaterForChart', (indexVal, pltOpt, casVal) => {\n      if (this.IndexValue == indexVal) {\n        this.PlotOptionValue = pltOpt;\n        if (casVal) {\n          this.CurrentYear = casVal;\n        }\n        setTimeout(() => {\n          this.RefreshChart();\n        }, 500);\n      }\n    });\n  },\n};\n</script>\n\n<style scoped>\n\n.chart-option .el-row {\n  margin-left: 5px !important;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-right: 8px !important;\n}\n\n.chart-option {\n  border-bottom: solid 1px #e2e2e2;\n}\n\n.chart-div {\n  height: calc(100% - 40px);\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n.center-content-parent {\n  position: relative;\n}\n\n.center-content-child {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  margin: -70px 0 0 -170px;\n}\n\n.flex-center-vertically {\n  padding: 20px;\n  justify-content: center;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  height: 100%;\n}\n\n.plotSelection {\n  display: block;\n}\n\n.sync-chart .el-button {\n  width: 100%;\n}\n\n\n.grid-content.bg-purple.sync-chart button {\n  padding-left: 12px;\n}\n\n\n</style>\n","let allYears = [];\nlet initialYear;\nfor (initialYear = 2000; initialYear <= new Date().getFullYear(); initialYear++) {\n    allYears.unshift({\n        value: initialYear,\n        label: initialYear\n    });\n}\n\n\nexport const dataSelect = {\n    region: [{value: \"HKH\", label: \"HKH\"},\n        {value: \"AFGHANISTAN\", label: \"AFGHANISTAN\"},\n        {value: \"BANGLADESH\", label: \"BANGLADESH\"},\n        {value: \"BHUTAN\", label: \"BHUTAN\"},\n        {value: \"CHINA\", label: \"CHINA\"},\n        {value: \"INDIA\", label: \"INDIA\"},\n        {value: \"MYANMAR\", label: \"MYANMAR\"},\n        {value: \"NEPAL\", label: \"NEPAL\"},\n        {value: \"PAKISTAN\", label: \"PAKISTAN\"}],\n    pollutants: [{value: \"BC\", label: \"BC\"},\n        {value: \"CO\", label: \"CO\",},\n        {value: \"NOx\", label: \"NOx\",},\n        {value: \"OC\", label: \"OC\",},\n        {value: \"PM10\", label: \"PM10\"},\n        {value: \"PM2p5\", label: \"PM25\",},\n        {value: \"SO2\", label: \"SO2\"},\n    ],\n    periodicity: [\n        {\n            value: \"dekad\",\n            label: \"Dekad (10 day)\"\n        },\n        {value: \"monthly\", label: \"Monthly\"},\n        {\n            value: \"quartly\",\n            label: \"Quartly\"\n        }\n    ],\n    periodicityOutlook: [{value: \"monthly\", label: \"Monthly Anomaly\"}],\n    year: [{value: '1990', label: \"1990\"}, {value: '1995', label: \"1995\"}, {\n        value: '2000',\n        label: \"2000\"\n    }, {value: '2005', label: \"2005\"}, {value: '2010', label: \"2010\"}, {value: '2015', label: \"2015\"}],\n    ensemble: [{value: \"mean\", label: \"Mean\"}, {value: \"ens0\", label: \"1\"}, {\n        value: \"ens1\",\n        label: \"2\"\n    }, {value: \"ens2\", label: \"3\"}, {value: \"ens3\", label: \"4\"}, {\n        value: \"ens4\",\n        label: \"5\"\n    }, {value: \"ens5\", label: \"6\"}, {value: \"ens6\", label: \"7\"}],\n    sectors: [{value: \"Total\", label: \"Total\"},\n        {value: \"Residential\", label: \"Residential\"},\n        {value: \"Industry\", label: \"Industry\"},\n        {value: \"Transport\", label: \"Transport\"},\n        {value: \"Energy\", label: \"Energy\"},],\n    Inventory: [{value: \"GAINS\", label: \"GAINS\"},\n        {value: \"REAS\", label: \"REAS\"},\n        {value: \"EDGAR\", label: \"EDGAR\"}\n    ],\n    socioEconomicType: [{value: \"Demographic\", label: \"Demographic\"},],\n    population: [{value: \"TotalPopulation\", label: \"Total Population\"},\n        {value: \"PopulationDensity\", label: \"Population Density\"},\n        {value: \"Child\", label: \"Child (0 - 14)\"},\n        {value: \"Adult\", label: \"Adult (15 - 59)\"},\n        {value: \"Old\", label: \"Old (60 - 80+)\"},],\n    pop_year: [{\n        value: '2000',\n        label: \"2000\"\n    }, {\n        value: '2001',\n        label: \"2001\"\n    }, {\n        value: '2002',\n        label: \"2002\"\n    }, {\n        value: '2003',\n        label: \"2003\"\n    }, {\n        value: '2004',\n        label: \"2004\"\n    }, {value: '2005', label: \"2005\"},\n        {value: '2006', label: \"2006\"},\n        {value: '2007', label: \"2007\"},\n        {value: '2008', label: \"2008\"}, {value: '2009', label: \"2009\"}, {value: '2010', label: \"2010\"}, {\n            value: '2011',\n            label: \"2011\"\n        }, {value: '2012', label: \"2012\"}, {value: '2013', label: \"2013\"}, {\n            value: '2014',\n            label: \"2014\"\n        }, {value: '2015', label: \"2015\"}, {value: '2016', label: \"2016\"}, {\n            value: '2017',\n            label: \"2017\"\n        }, {value: '2018', label: \"2018\"}, {value: '2019', label: \"2019\"}, {value: '2020', label: \"2020\"},],\n};\n\n\nexport var mbasin = [\"Amudarya\", \"Brahmaputra\", \"Eastern Asian\", \"Ganga\", \"Indus\", \"Irrawaddy\", \"Mekong\", \"Qinghai-Tibetan\", \"Salween\", \"Tarim\", \"Yangtze\", \"Yellow River\"];\n\nexport var WMSLAYERS = {\n    \"Tair_f_tavg\": \"Air Temperature\",\n    \"Rainf_f_tavg\": \"Rainfall flux\",\n    \"SoilMoist_inst\": \"Soil moisture content\",\n    \"Evap_tavg\": \"Total evapotranspiration\"\n};\nexport var WMSSLD = {\n    \"Tair_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>Tair_f_tavg</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-5</se:Threshold><se:Value>#9999FF</se:Value><se:Threshold>-4.5</se:Threshold><se:Value>#99A7FF</se:Value><se:Threshold>-4</se:Threshold><se:Value>#9CB6FF</se:Value><se:Threshold>-3.5</se:Threshold><se:Value>#9CC2FF</se:Value><se:Threshold>-3</se:Threshold><se:Value>#9CD1FF</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#9CDEFF</se:Value><se:Threshold>-2</se:Threshold><se:Value>#9CEDFF</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#99FCFF</se:Value><se:Threshold>-1</se:Threshold><se:Value>#A6FFF6</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#B5FFE6</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>1</se:Threshold><se:Value>#FFFFBE</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#FFEBAF</se:Value><se:Threshold>2</se:Threshold><se:Value>#FFD37F</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#E69800</se:Value><se:Threshold>3</se:Threshold><se:Value>#FF7F7F</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#E64C00</se:Value><se:Threshold>4</se:Threshold><se:Value>#A83800</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#732600</se:Value><se:Threshold>5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n    \"Rainf_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>Rainf_f_tavg</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#C2523C</se:Value><se:Threshold>-2</se:Threshold><se:Value>#FFAA01</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#FFD380</se:Value><se:Threshold>-1</se:Threshold><se:Value>#FEFF73</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E9FFBE</se:Value><se:Threshold>1</se:Threshold><se:Value>#7BED01</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#21DD00</se:Value><se:Threshold>2</se:Threshold><se:Value>#0ACC2E</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#17B568</se:Value><se:Threshold>3</se:Threshold><se:Value>#1E9B89</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#1A828F</se:Value><se:Threshold>4</se:Threshold><se:Value>#135784</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n    \"SoilMoist_inst\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>SoilMoist_inst</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#C2523C</se:Value><se:Threshold>-2</se:Threshold><se:Value>#FFAA01</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#FFD380</se:Value><se:Threshold>-1</se:Threshold><se:Value>#FEFF73</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E9FFBE</se:Value><se:Threshold>1</se:Threshold><se:Value>#7BED01</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#21DD00</se:Value><se:Threshold>2</se:Threshold><se:Value>#0ACC2E</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#17B568</se:Value><se:Threshold>3</se:Threshold><se:Value>#1E9B89</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#1A828F</se:Value><se:Threshold>4</se:Threshold><se:Value>#135784</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n    \"Evap_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>Evap_tavg</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#C2523C</se:Value><se:Threshold>-2</se:Threshold><se:Value>#FFAA01</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#FFD380</se:Value><se:Threshold>-1</se:Threshold><se:Value>#FEFF73</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E9FFBE</se:Value><se:Threshold>1</se:Threshold><se:Value>#7BED01</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#21DD00</se:Value><se:Threshold>2</se:Threshold><se:Value>#0ACC2E</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#17B568</se:Value><se:Threshold>3</se:Threshold><se:Value>#1E9B89</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#1A828F</se:Value><se:Threshold>4</se:Threshold><se:Value>#135784</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n};\nexport var WMSSLDCurrent = {\n    \"Tair_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>Tair_f_tavg</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#0c2c84</se:Value><se:Threshold>273</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>278</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>283</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>288</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>293</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>298</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>303</se:Threshold><se:Value>#b10026</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n    \"Rainf_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>Rainf_f_tavg</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#b10026</se:Value><se:Threshold>5</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>10</se:Threshold><se:Value>#feb24c</se:Value><se:Threshold>15</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>20</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>25</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>30</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>35</se:Threshold><se:Value>#0c2c84</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n    \"SoilMoist_inst\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>SoilMoist_inst</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#b10026</se:Value><se:Threshold>5</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>10</se:Threshold><se:Value>#feb24c</se:Value><se:Threshold>15</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>20</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>25</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>30</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>35</se:Threshold><se:Value>#0c2c84</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n    \"Evap_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>Evap_tavg</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#b10026</se:Value><se:Threshold>5</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>10</se:Threshold><se:Value>#feb24c</se:Value><se:Threshold>15</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>20</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>25</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>50</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>75</se:Threshold><se:Value>#0c2c84</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n};\n\nexport var legendImage = {\n    \"Tair_f_tavg\": \"FinalNewAirTemperature.jpg\",\n    \"Rainf_f_tavg\": \"final_rain.jpg\",\n    \"SoilMoist_inst\": \"soil.jpg\",\n    \"Evap_tavg\": \"evaporation.jpg\"\n};\n\n// var colorList = ['#ffffff', '#e6ffff', '#66ccff', '#00ff00', '#bfff00', '#ffff00', '#ffbf00', '#ff0000', '#b30000'];\n\n\n// let SLDParam = {\n//     title: 'Air Temperature',\n//     showLegendTitle: false,\n//     parameterName: 'Tair_f_tavg',\n//     propForSLD: [{\n//         classType: 'Below',\n//         label: [\"less than -5\", \"\"],\n//         color: '#00000000',\n//         value: -5\n//     }, {\n//         label: [\"-5 to -4.5\", \"\"], color: '#9999FF',\n//         range: [-5, -4.5]\n//     }, {\n//         label: [\"-4.5 to -4\", \"\"], color: '#99A7FF',\n//         range: [-4.5, -4]\n//     }, {\n//         label: [\"-4 to -3.5\", \"\"], color: '#9CB6FF',\n//         range: [-4, -3.5]\n//     }, {\n//         label: [\"1.5 to 2\", \"\"], color: '#FFEBAF',\n//         range: [1.5, 2]\n//     }, {\n//         label: [\"3 to 3.5\", \"\"], color: '#FF7F7F',\n//         range: [3, 3.5]\n//     }, {\n//         label: [\"3.5 to 4\", \"\"], color: '#E64C00',\n//         range: [3.5, 4]\n//     }, {\n//         label: [\"4 to 4.5\", \"\"], color: '#A83800',\n//         range: [4, 4.5]\n//     }, {\n//         classType: 'Above',\n//         label: [\"5 or more\", \"\"], color: '#00000000',\n//         value: 5\n//     }],\n// };\n\n\n// let layerPropertiesList = [{\n//     id: '',\n//     title: 'Air Temperature',\n//     showLegendTitle: false,\n//     parameterName: 'Tair_f_tavg',\n//     propForSLD: [{\n//         classType: 'Below',\n//         label: [\"less than -5\", \"\"],\n//         color: '#00000000',\n//         value: -5\n//     }, {\n//         label: [\"-5 to -4.5\", \"\"], color: '#9999FF',\n//         range: [-5, -4.5]\n//     }, {\n//         label: [\"-4.5 to -4\", \"\"], color: '#99A7FF',\n//         range: [-4.5, -4]\n//     }, {\n//         label: [\"-4 to -3.5\", \"\"], color: '#9CB6FF',\n//         range: [-4, -3.5]\n//     }, {\n//         label: [\"1.5 to 2\", \"\"], color: '#FFEBAF',\n//         range: [1.5, 2]\n//     }, {\n//         label: [\"3 to 3.5\", \"\"], color: '#FF7F7F',\n//         range: [3, 3.5]\n//     }, {\n//         label: [\"3.5 to 4\", \"\"], color: '#E64C00',\n//         range: [3.5, 4]\n//     }, {\n//         label: [\"4 to 4.5\", \"\"], color: '#A83800',\n//         range: [4, 4.5]\n//     }, {\n//         classType: 'Above',\n//         label: [\"5 or more\", \"\"], color: '#00000000',\n//         value: 5\n//     }],\n// }];\n\n\nlet layerList = [\n    ['REAS___BC___Total', 'REAS', 'BC', 'Total', 5.90635967254638, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___BC___Residential', 'REAS', 'BC', 'Residential', 3.36123776435852, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___BC___Transport', 'REAS', 'BC', 'Transport', 4.53458881378173, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___BC___Industry', 'REAS', 'BC', 'Industry', 4.90902614593505, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___BC___Energy', 'REAS', 'BC', 'Energy', 0.42021644115448, ['0.00000001', '0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1], [['less than 1e-08', ''], ['1e-08 to 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___CO___Total', 'REAS', 'CO', 'Total', 2492.0791015625, [0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0], [['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___CO___Residential', 'REAS', 'CO', 'Residential', 305.503173828125, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___CO___Transport', 'REAS', 'CO', 'Transport', 340.202941894531, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___CO___Industry', 'REAS', 'CO', 'Industry', 2484.740234375, [0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0], [['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___CO___Energy', 'REAS', 'CO', 'Energy', 12.5061283111572, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___NOx___Total', 'REAS', 'NOx', 'Total', 140.212326049804, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___NOx___Residential', 'REAS', 'NOx', 'Residential', 22.4503192901611, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___NOx___Transport', 'REAS', 'NOx', 'Transport', 44.1139068603515, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___NOx___Industry', 'REAS', 'NOx', 'Industry', 114.093849182128, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___NOx___Energy', 'REAS', 'NOx', 'Energy', 52.9525299072265, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___OC___Total', 'REAS', 'OC', 'Total', 17.145128250122, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___OC___Residential', 'REAS', 'OC', 'Residential', 12.6038732528686, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___OC___Transport', 'REAS', 'OC', 'Transport', 1.6988251209259, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___OC___Industry', 'REAS', 'OC', 'Industry', 8.57281112670898, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___OC___Energy', 'REAS', 'OC', 'Energy', 0.172008112072944, ['0.00000001', '0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1], [['less than 1e-08', ''], ['1e-08 to 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___PM10___Total', 'REAS', 'PM10', 'Total', 182.490966796875, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___PM10___Residential', 'REAS', 'PM10', 'Residential', 19.7488594055175, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___PM10___Transport', 'REAS', 'PM10', 'Transport', 7.37015295028686, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___PM10___Industry', 'REAS', 'PM10', 'Industry', 157.537033081054, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___PM10___Energy', 'REAS', 'PM10', 'Energy', 13.6437997817993, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___PM2p5___Total', 'REAS', 'PM2p5', 'Total', 106.149459838867, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___PM2p5___Residential', 'REAS', 'PM2p5', 'Residential', 18.8245296478271, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___PM2p5___Transport', 'REAS', 'PM2p5', 'Transport', 7.26222372055053, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___PM2p5___Industry', 'REAS', 'PM2p5', 'Industry', 92.1728286743164, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___PM2p5___Energy', 'REAS', 'PM2p5', 'Energy', 8.57247734069824, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___SO2___Total', 'REAS', 'SO2', 'Total', 644.566772460937, [0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0], [['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___SO2___Residential', 'REAS', 'SO2', 'Residential', 53.7299194335937, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___SO2___Transport', 'REAS', 'SO2', 'Transport', 9.21748828887939, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___SO2___Industry', 'REAS', 'SO2', 'Industry', 198.901260375976, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['REAS___SO2___Energy', 'REAS', 'SO2', 'Energy', 134.010818481445, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___BC___Total', 'GAINS', 'BC', 'Total', 16.3189430236816, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___BC___Residential', 'GAINS', 'BC', 'Residential', 9.50524234771728, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___BC___Transport', 'GAINS', 'BC', 'Transport', 5.65739822387695, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___BC___Industry', 'GAINS', 'BC', 'Industry', 2.57163405418395, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___BC___Energy', 'GAINS', 'BC', 'Energy', 1.42664492130279, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___CO___Total', 'GAINS', 'CO', 'Total', 856.674133300781, [0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0], [['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___CO___Residential', 'GAINS', 'CO', 'Residential', 344.522766113281, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___CO___Transport', 'GAINS', 'CO', 'Transport', 362.705108642578, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___CO___Industry', 'GAINS', 'CO', 'Industry', 650.939453125, [0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0], [['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___CO___Energy', 'GAINS', 'CO', 'Energy', 80.8608322143554, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___NOx___Total', 'GAINS', 'NOx', 'Total', 255.737258911132, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___NOx___Residential', 'GAINS', 'NOx', 'Residential', 9.66963100433349, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___NOx___Transport', 'GAINS', 'NOx', 'Transport', 130.639373779296, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___NOx___Industry', 'GAINS', 'NOx', 'Industry', 97.3676528930664, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___NOx___Energy', 'GAINS', 'NOx', 'Energy', 120.853538513183, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___OC___Total', 'GAINS', 'OC', 'Total', 25.4911918640136, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___OC___Residential', 'GAINS', 'OC', 'Residential', 14.6601982116699, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___OC___Transport', 'GAINS', 'OC', 'Transport', 12.4218959808349, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___OC___Industry', 'GAINS', 'OC', 'Industry', 1.0705087184906, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___OC___Energy', 'GAINS', 'OC', 'Energy', 2.24600028991699, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___PM10___Total', 'GAINS', 'PM10', 'Total', 197.56867980957, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___PM10___Residential', 'GAINS', 'PM10', 'Residential', 77.9535980224609, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___PM10___Transport', 'GAINS', 'PM10', 'Transport', 23.6912956237792, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___PM10___Industry', 'GAINS', 'PM10', 'Industry', 71.7012100219726, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___PM10___Energy', 'GAINS', 'PM10', 'Energy', 75.0917663574218, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___PM2p5___Total', 'GAINS', 'PM2p5', 'Total', 126.906242370605, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___PM2p5___Residential', 'GAINS', 'PM2p5', 'Residential', 56.9104270935058, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___PM2p5___Transport', 'GAINS', 'PM2p5', 'Transport', 22.4125061035156, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___PM2p5___Industry', 'GAINS', 'PM2p5', 'Industry', 49.1257705688476, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___PM2p5___Energy', 'GAINS', 'PM2p5', 'Energy', 22.2145442962646, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___SO2___Total', 'GAINS', 'SO2', 'Total', 326.366882324218, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___SO2___Residential', 'GAINS', 'SO2', 'Residential', 39.0412864685058, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___SO2___Transport', 'GAINS', 'SO2', 'Transport', 13.1418828964233, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___SO2___Industry', 'GAINS', 'SO2', 'Industry', 241.244338989257, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['GAINS___SO2___Energy', 'GAINS', 'SO2', 'Energy', 286.270538330078, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___BC___Total', 'EDGAR', 'BC', 'Total', 26.9559309951782, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___BC___Residential', 'EDGAR', 'BC', 'Residential', 0.354042315262556, ['0.00000001', '0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1], [['less than 1e-08', ''], ['1e-08 to 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___BC___Transport', 'EDGAR', 'BC', 'Transport', 1.14314790644645, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___BC___Industry', 'EDGAR', 'BC', 'Industry', 26.9498316467285, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___BC___Energy', 'EDGAR', 'BC', 'Energy', 2.66838060007095, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___CO___Total', 'EDGAR', 'CO', 'Total', 2438.45105273437, [0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0], [['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___CO___Residential', 'EDGAR', 'CO', 'Residential', 38.9738866333007, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___CO___Transport', 'EDGAR', 'CO', 'Transport', 394.993021508789, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___CO___Industry', 'EDGAR', 'CO', 'Industry', 2437.77045893554, [0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0], [['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___CO___Energy', 'EDGAR', 'CO', 'Energy', 135.711784698486, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___NOx___Total', 'EDGAR', 'NOx', 'Total', 508.899899377441, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___NOx___Residential', 'EDGAR', 'NOx', 'Residential', 7.26847960882186, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___NOx___Transport', 'EDGAR', 'NOx', 'Transport', 37.0271012695312, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___NOx___Industry', 'EDGAR', 'NOx', 'Industry', 508.875351196289, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___NOx___Energy', 'EDGAR', 'NOx', 'Energy', 182.588888891601, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___OC___Total', 'EDGAR', 'OC', 'Total', 64.4831109832763, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___OC___Residential', 'EDGAR', 'OC', 'Residential', 1.91931391060352, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___OC___Transport', 'EDGAR', 'OC', 'Transport', 0.702768021583557, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___OC___Industry', 'EDGAR', 'OC', 'Industry', 64.4528027252197, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___OC___Energy', 'EDGAR', 'OC', 'Energy', 2.28398028459548, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___PM10___Total', 'EDGAR', 'PM10', 'Total', 347.986421136474, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___PM10___Residential', 'EDGAR', 'PM10', 'Residential', 5.42583458833694, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___PM10___Transport', 'EDGAR', 'PM10', 'Transport', 2.34391590156555, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___PM10___Industry', 'EDGAR', 'PM10', 'Industry', 347.892540930175, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___PM10___Energy', 'EDGAR', 'PM10', 'Energy', 88.236288432312, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___PM2p5___Total', 'EDGAR', 'PM2p5', 'Total', 305.428198480224, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___PM2p5___Residential', 'EDGAR', 'PM2p5', 'Residential', 3.77355011987686, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___PM2p5___Transport', 'EDGAR', 'PM2p5', 'Transport', 2.19737603931427, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___PM2p5___Industry', 'EDGAR', 'PM2p5', 'Industry', 305.366345507812, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___PM2p5___Energy', 'EDGAR', 'PM2p5', 'Energy', 61.9245888656616, ['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0], [['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___SO2___Total', 'EDGAR', 'SO2', 'Total', 1067.37240783691, [0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0], [['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___SO2___Residential', 'EDGAR', 'SO2', 'Residential', 15.9809639419555, ['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0], [['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___SO2___Transport', 'EDGAR', 'SO2', 'Transport', 2.31042273187637, ['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0], [['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___SO2___Industry', 'EDGAR', 'SO2', 'Industry', 1067.32620659179, [0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0], [['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n    ['EDGAR___SO2___Energy', 'EDGAR', 'SO2', 'Energy', 780.430286535644, [0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0], [['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']], ['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']]\n];\n\nexport function getLayerPropObj(Invertory, pollutant, sectors) {\n    let selArray = layerList.filter(function (ar) {\n        return ar[0] == Invertory + '___' + pollutant + '___' + sectors;\n    });\n    if (selArray.length) {\n        selArray.forEach(function (arr) {\n            if (arr.length <= 8) {\n                let propForSLD = []\n                let rangeLength = arr[5].length - 1;\n                arr[5].forEach(function (RangeVal, index) {\n                    if (index === 0) {\n                        propForSLD.push({\n                            classType: 'Below',\n                            label: arr[6][0],\n                            color: arr[7][0],\n                            value: RangeVal\n                        });\n                        propForSLD.push({\n                            label: arr[6][1], color: arr[7][1],\n                            range: [RangeVal, arr[5][1]]\n                        });\n                    } else if (index == rangeLength) {\n                        propForSLD.push({\n                            classType: 'Above',\n                            label: arr[6][index + 1], color: arr[7][index + 1],\n                            value: RangeVal\n                        });\n                    } else {\n                        propForSLD.push({\n                            label: arr[6][index + 1], color: arr[7][index + 1],\n                            range: [RangeVal, arr[5][index + 1]]\n                        });\n                    }\n                });\n                arr.push(propForSLD)\n            }\n        });\n\n        // let title = [selArray[0][1], selArray[0][2], selArray[0][3]].join(' ').toString()+'<br> suman';\n\n        let retObj = {\n            id: selArray[0][0],\n            title: [selArray[0][1], selArray[0][2], selArray[0][3]],\n            showLegendTitle: true,\n            parameterName: selArray[0][3],\n            propForSLD: selArray[0][8],\n        };\n        return retObj;\n    } else {\n        return false;\n    }\n};\n\n\nexport const AllInventory = ['GAINS'];\n\n\n\n\n\n\n\n\n\n","import { render } from \"./chartComponentSocioEconomic.vue?vue&type=template&id=7f6e7ae1&scoped=true\"\nimport script from \"./chartComponentSocioEconomic.vue?vue&type=script&lang=js\"\nexport * from \"./chartComponentSocioEconomic.vue?vue&type=script&lang=js\"\n\nimport \"./chartComponentSocioEconomic.vue?vue&type=style&index=0&id=7f6e7ae1&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7f6e7ae1\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Map Controls\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n        <el-form ref=\"form\" :model=\"form\" label-width=\"auto\" :inline=\"getIsInlineFormorNot\" size=\"mini\"\n                 label-position=\"left\">\n\n          <el-form-item label=\"Socio Economic\" class=\"full-width\">\n            <el-select v-model=\"SocioEconomicObject.socioEconomicType\" placeholder=\"Select\" @change=\"updateMapLayer()\"\n                       class=\"full-width\">\n              <el-option\n                  v-for=\"item in data.socioEconomicType\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"Population\" class=\"full-width\">\n            <el-select v-model=\"SocioEconomicObject.PopulationType\" placeholder=\"Select\" @change=\"updateMapLayer()\"\n                       class=\"full-width\">\n              <el-option\n                  v-for=\"item in data.population\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"Year\" class=\"full-width\" v-if=\"!SocioEconomicObject.ShowAnimationPanel\">\n            <el-select v-model=\"SocioEconomicObject.popYear\" placeholder=\"Select\" @change=\"updateMapLayer()\"\n                       class=\"full-width\">\n              <el-option\n                  v-for=\"item in data.pop_year\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <!--          <el-form-item label=\"Animation\">-->\n          <!--            <el-switch v-model=\"SocioEconomicObject.ShowAnimationPanel\" @change=\"updateMapLayer()\"/>-->\n          <!--          </el-form-item>-->\n\n          <el-form-item class=\"submit-btn full-width\">\n            <!--          <el-button type=\"primary\" class=\"full-width\">Get Emission Plot</el-button>-->\n          </el-form-item>\n        </el-form>\n      </el-scrollbar>\n    </div>\n  </div>\n\n\n</template>\n\n<script>\nimport {dataSelect} from '../../utils/dataSocioEconomic'\n// import eventHub from \"../../utils/utils\";\nimport {mapActions, mapMutations, mapState, mapGetters} from 'vuex';\n// import {GeoServerHost, threddDataSource} from \"../../config\";\nimport Style from \"ol/style/Style\";\nimport {Icon} from \"ol/style\";\n// import {Image as ImageLayer} from \"ol/layer\";\n// import ImageWMS from \"ol/source/ImageWMS\";\nimport LayerSwitcher from \"ol-plus/ui/LayerSwitcher\";\n// import rgbLegend from \"../../assets/rgblegend.jpg\";\nimport TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport eventHub from \"../../utils/utils\";\n// import GeoJSON from \"ol/format/GeoJSON\";\n// import {getCenter as ol_extent_getCenter} from \"ol/extent\";\n\nimport {threddDataSource} from '../../config';\n\n\nexport default {\n  name: \"mapControlsSocioEconomic\",\n  data() {\n    return {\n      form: {},\n      isInlineForm: true,\n      data: dataSelect\n    }\n  }, methods: {\n    ...mapActions([\"GETCountryGeojson\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\", \"addLegend\", \"removeLegend\"]),\n    async onSubmit() {\n\n    },\n\n    getInLineData() {\n      return this.isInlineForm\n    },\n\n    updateMapLayer() {\n      let TDSHOST = threddDataSource + 'wms/HKHPopulation/'\n      if (this.SocioEconomicObject.socioEconomicType == 'Demographic') {\n\n        let layerIdAnimation = this.SocioEconomicObject.ShowAnimationPanel == true ? '-Animation' : '-noAnimation';\n        let layerId = 'Demographic' + layerIdAnimation;\n        let WMS = '';\n        let year = this.SocioEconomicObject.popYear;\n        let layerVariableName = '';\n        let title = '';\n\n        if (this.SocioEconomicObject.PopulationType == 'TotalPopulation') {\n          layerId = layerId + '-TotalPopulation-' + year;\n          WMS = this.SocioEconomicObject.ShowAnimationPanel == true ? 'PopulationCount.ncml' : ('PopulationCount/population_count_HKH_' + year + '.nc');\n          layerVariableName = 'PopulationCout';\n          title = 'Total Population';\n        } else if (this.SocioEconomicObject.PopulationType == \"PopulationDensity\") {\n          layerId = layerId + '-PopulationDensity-' + year;\n          WMS = this.SocioEconomicObject.ShowAnimationPanel == true ? 'PopulationDensity.ncml' : ('PopulationDensity/population_density_HKH_' + year + '.nc');\n          layerVariableName = 'PopulationDensity';\n          title = 'Population Density';\n        } else if (this.SocioEconomicObject.PopulationType == \"Child\") {\n          layerId = layerId + '-Child-' + year;\n          WMS = this.SocioEconomicObject.ShowAnimationPanel == true ? 'AgeAndSexStructure.ncml' : ('AgeAndSexStructure/AgeAndSexStructure_' + year + '.nc');\n          layerVariableName = 'AllChild'\n          title = 'Child';\n        } else if (this.SocioEconomicObject.PopulationType == \"Adult\") {\n          layerId = layerId + '-Adult-' + year;\n          WMS = this.SocioEconomicObject.ShowAnimationPanel == true ? 'AgeAndSexStructure.ncml' : ('AgeAndSexStructure/AgeAndSexStructure_' + year + '.nc');\n          layerVariableName = 'AllAdult';\n          title = 'Adult';\n        } else if (this.SocioEconomicObject.PopulationType == \"Old\") {\n          layerId = layerId + '-Old-' + year;\n          WMS = this.SocioEconomicObject.ShowAnimationPanel == true ? 'AgeAndSexStructure.ncml' : ('AgeAndSexStructure/AgeAndSexStructure_' + year + '.nc');\n          layerVariableName = 'AllOld';\n          title = 'Old';\n        }\n        let year_str = this.SocioEconomicObject.ShowAnimationPanel == true ? '' : ' (' + year + ')';\n        let paramObj = {\n          layerId: layerId,\n          WMS: TDSHOST + WMS,\n          layerVariableName: layerVariableName,\n          title: title + year_str,\n          showAnimationPannel: this.SocioEconomicObject.ShowAnimationPanel\n        };\n        console.log(paramObj);\n        let layer = this.getBindedLayer(layerId);\n        if (layer) {\n          layer.setVisibleDivBind(true);\n        } else {\n          this.addLayerPopulation(paramObj);\n        }\n      }\n      // this.AddLayerToLayerList()\n    },\n    async addLayerPopulation(paramObj) {\n\n      // let SLDAll='   <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>   <StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">   <NamedLayer>   <se:Name>PopulationCout</se:Name>   <UserStyle>   <se:Name>Thesholded colour scheme</se:Name>   <se:CoverageStyle>   <se:Rule>   <se:RasterSymbolizer>   <se:Opacity>1.0</se:Opacity>   <se:ColorMap>   <se:Categorize fallbackValue=\"#00000000\">   <se:LookupValue>Rasterdata</se:LookupValue>   <se:Value>#FFFACD</se:Value>   <se:Threshold>10</se:Threshold>   <se:Value>#BDFCC9</se:Value>   <se:Threshold>100</se:Threshold>   <se:Value>#00F5FF</se:Value>   <se:Threshold>200</se:Threshold>   <se:Value>#B3EE3A</se:Value>   <se:Threshold>500</se:Threshold>   <se:Value>#66CD00</se:Value>   <se:Threshold>700</se:Threshold>   <se:Value>#CD9B1D</se:Value>   <se:Threshold>1000</se:Threshold>   <se:Value>#FF8000</se:Value>   <se:Threshold>1200</se:Threshold>   <se:Value>#008000</se:Value>   <se:Threshold>1500</se:Threshold>   <se:Value>#EEEE00</se:Value>   <se:Threshold>1800</se:Threshold>   <se:Value>#CDCD00</se:Value>   <se:Threshold>2000</se:Threshold>   <se:Value>#A0522D</se:Value> </se:Categorize> </se:ColorMap> </se:RasterSymbolizer> </se:Rule> </se:CoverageStyle> </UserStyle> </NamedLayer> </StyledLayerDescriptor>'\n      // let SLDAll='      <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>   <StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">   <NamedLayer>   <se:Name>PopulationCout</se:Name>   <UserStyle>   <se:Name>Thesholded colour scheme</se:Name>   <se:CoverageStyle>   <se:Rule>   <se:RasterSymbolizer>   <se:Opacity>1.0</se:Opacity>   <se:ColorMap>   <se:Categorize fallbackValue=\"#00000000\">   <se:LookupValue>Rasterdata</se:LookupValue>   <se:Value>#FFF8DC</se:Value>   <se:Threshold>10</se:Threshold>   <se:Value>#FFD39B</se:Value>   <se:Threshold>100</se:Threshold>   <se:Value>#E9967A</se:Value>   <se:Threshold>200</se:Threshold>   <se:Value>#FFD700</se:Value>   <se:Threshold>500</se:Threshold>   <se:Value>#DAA520</se:Value>   <se:Threshold>700</se:Threshold>   <se:Value>#4876FF</se:Value>   <se:Threshold>1000</se:Threshold>   <se:Value>#000080</se:Value>   <se:Threshold>1200</se:Threshold>   <se:Value>#FF4500</se:Value>   <se:Threshold>1500</se:Threshold>   <se:Value>#CD2626</se:Value>   <se:Threshold>1800</se:Threshold>   <se:Value>#B22222</se:Value>   <se:Threshold>2000</se:Threshold>   <se:Value>#8B1A1A</se:Value> </se:Categorize> </se:ColorMap> </se:RasterSymbolizer> </se:Rule> </se:CoverageStyle> </UserStyle> </NamedLayer> </StyledLayerDescriptor>'\n      // let SLDAll = '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">   <NamedLayer>   <se:Name>' + paramObj.layerVariableName + '</se:Name>   <UserStyle>   <se:Name>Thesholded colour scheme</se:Name>   <se:CoverageStyle>   <se:Rule>   <se:RasterSymbolizer>   <se:Opacity>1.0</se:Opacity>   <se:ColorMap>   <se:Categorize fallbackValue=\"#00000000\">   <se:LookupValue>Rasterdata</se:LookupValue>   <se:Value>#FFF8DC</se:Value>   <se:Threshold>10</se:Threshold>   <se:Value>#FFD39B</se:Value>   <se:Threshold>100</se:Threshold>   <se:Value>#E9967A</se:Value>   <se:Threshold>200</se:Threshold>   <se:Value>#FFD700</se:Value>   <se:Threshold>500</se:Threshold>   <se:Value>#DAA520</se:Value>   <se:Threshold>700</se:Threshold>   <se:Value>#4876FF</se:Value>   <se:Threshold>1000</se:Threshold>   <se:Value>#000080</se:Value>   <se:Threshold>1200</se:Threshold>   <se:Value>#FF4500</se:Value>   <se:Threshold>1500</se:Threshold>   <se:Value>#CD2626</se:Value>   <se:Threshold>1800</se:Threshold>   <se:Value>#B22222</se:Value>   <se:Threshold>2000</se:Threshold>   <se:Value>#8B1A1A</se:Value> </se:Categorize> </se:ColorMap> </se:RasterSymbolizer> </se:Rule> </se:CoverageStyle> </UserStyle> </NamedLayer> </StyledLayerDescriptor>'\n      let SLDAll = '  <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">   <NamedLayer>   <se:Name>' + paramObj.layerVariableName + '</se:Name>   <UserStyle>   <se:Name>Thesholded colour scheme</se:Name>   <se:CoverageStyle>   <se:Rule>   <se:RasterSymbolizer>   <se:Opacity>1.0</se:Opacity>   <se:ColorMap>   <se:Categorize fallbackValue=\"#00000000\">   <se:LookupValue>Rasterdata</se:LookupValue>   <se:Value>#A4D3EE</se:Value>   <se:Threshold>50</se:Threshold>   <se:Value>#8470FF</se:Value>   <se:Threshold>100</se:Threshold>   <se:Value>#4169E1</se:Value>   <se:Threshold>200</se:Threshold>   <se:Value>#0000CD</se:Value>   <se:Threshold>500</se:Threshold>   <se:Value>#33A1C9</se:Value>   <se:Threshold>700</se:Threshold>   <se:Value>#CAFF70</se:Value>   <se:Threshold>1000</se:Threshold>   <se:Value>#7FFF00</se:Value>   <se:Threshold>1200</se:Threshold>   <se:Value>#FFFF00</se:Value>   <se:Threshold>1500</se:Threshold>   <se:Value>#FF8000</se:Value>   <se:Threshold>1800</se:Threshold>   <se:Value>#CD2626</se:Value>   <se:Threshold>2000</se:Threshold>   <se:Value>#FF3030</se:Value> </se:Categorize> </se:ColorMap> </se:RasterSymbolizer> </se:Rule> </se:CoverageStyle> </UserStyle> </NamedLayer></StyledLayerDescriptor>'\n\n      let LegendParameter = paramObj.WMS + '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&SLD_BODY=' + encodeURIComponent(SLDAll).toString();\n\n\n      let OLEXTLegendObject = {\n        id: paramObj.layerId,\n        title: paramObj.title,\n        typeGeom: 'Point',\n        style: new Style({\n          image: new Icon({\n            src: LegendParameter,\n            crossOrigin: 'anonymous', // Enable print\n          })\n        }),\n        size: [60, 250]\n      };\n\n\n      let aa = {\n        id: paramObj.layerId,\n        title: paramObj.title,\n        visible: true,\n        opacity: 0.6,\n        ThreddsDataServerVersion: 5,\n        serverType: 'TDS',\n        timeSeries: false,\n        alignTimeSlider: 'right',\n        timeSliderSize: 'small',\n        showlegend: false,\n        showControlPanel: paramObj.showAnimationPannel,\n        legendPath: LegendParameter,\n        zIndex: 10,\n        OLEXTLegendObject: OLEXTLegendObject,\n        source: {\n          url: paramObj.WMS,\n          params: {\n            'LAYERS': paramObj.layerVariableName,\n            'STYLES': 'default-scalar/x-Rainbow',\n            // 'COLORSCALERANGE': '0,80',\n            'SLD_BODY': SLDAll,\n            'transparent': true\n          }\n        },\n      };\n      let Newlayer = new TimeDimensionTile(aa);\n      let that = this;\n      let AddRemoveLegendFunction = function () {\n        if (this.getProperties().visible) {\n          that.addLegend(this.getProperties().OLEXTLegendObject);\n        } else {\n          that.removeLegend(this.getProperties().OLEXTLegendObject);\n        }\n      };\n\n      Newlayer.on('change:visible', AddRemoveLegendFunction);\n      await Newlayer.init().then(() => {\n\n        this.mapObject.addThreddsLayer(Newlayer);\n        // myApp.map.addThreddsLayer(val);\n        let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true);\n        l5.setVisibleDivBind(true);\n        // let properties = Newlayer.getProperties()\n        this.appendTimeSeriesLayerCollection(l5);\n      });\n    },\n    async setDefaultMap() {\n      // Javasctipt API Stack\n      setTimeout(() => {\n        this.updateMapLayer();\n      }, 0);\n\n      let geoJson = await this.GETCountryGeojson();\n      console.log(\"geoJson\");\n      console.log(geoJson);\n      // this.vectorLayerSource.\n      var format = new GeoJSON();\n      var f = format.readFeature(geoJson.features[0], {\n        dataProjection: \"EPSG:4326\",\n        featureProjection: this.mapObject.getView().getProjection()\n      });\n      this.vectorLayerSource.addFeature(f);\n      this.selectInteractionObj.getFeatures().push(f);\n      this.selectInteractionObj.dispatchEvent({type: 'select'});\n      // Zoom to map centre*****\n      // var view = this.mapObject.getView();\n      // var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), this.mapObject.getSize());\n      // var zoom = view.getZoomForResolution(resolution);\n      // var center = ol_extent_getCenter(f.getGeometry().getExtent());\n      // // redraw before zoom\n      // setTimeout(function () {\n      //   view.animate({\n      //     center: center,\n      //     zoom: Math.min(zoom, 16)\n      //   });\n      // }, 100);\n\n      // Zoom to map centre*****\n\n\n      setTimeout(() => {\n        eventHub.$emit('setDefaultCascaterForChart', 1, 'Population Time Series');\n        console.log(50);\n      }, 0);\n\n\n      setTimeout(() => {\n        eventHub.$emit('setDefaultCascaterForChart', 2, 'Population Pyramid', 2020);\n        console.log(100);\n      }, 50);\n\n\n      setTimeout(() => {\n        eventHub.$emit('setDefaultCascaterForChart', 3, 'Age Groups', 2020);\n        console.log(150);\n\n      }, 100);\n\n\n      setTimeout(() => {\n        eventHub.$emit('setDefaultCascaterForChart', 4, 'Population Distribution');\n        console.log(200);\n      }, 150);\n    },\n  },\n  computed: {\n    ...mapState([\"SocioEconomicObject\", \"vectorLayerSource\", \"mapObject\", \"selectInteractionObj\",]),\n    ...mapGetters([\"getBindedLayer\",]),\n    getIsInlineFormorNot() {\n      return this.getInLineData();\n    },\n  },\n  created() {\n  },\n\n  mounted() {\n    // Generate the chart\n    // eslint-disable-next-line no-undef\n\n    this.setDefaultMap();\n  },\n}\n</script>\n\n<style scoped>\n.body-container {\n  height: calc(100% - 50px);\n}\n</style>","import { render } from \"./mapControlsSocioEconomic.vue?vue&type=template&id=4e6f3200&scoped=true\"\nimport script from \"./mapControlsSocioEconomic.vue?vue&type=script&lang=js\"\nexport * from \"./mapControlsSocioEconomic.vue?vue&type=script&lang=js\"\n\nimport \"./mapControlsSocioEconomic.vue?vue&type=style&index=0&id=4e6f3200&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4e6f3200\"]])\n\nexport default __exports__","<template>\n  <div className=\"card-box full-height full-width about-div\">\n    <div id=\"map-container2\" ref=\"LayerSelectorDropdown\">\n    </div>\n    <!--    <div id=\"layerSwitcherDiv\" class=\"ol-unselectable ol-control\" @click=\"LayerSwitcherClick()\">-->\n    <!--      <button>-->\n    <!--        <img src=\"@/assets/layers.svg\" style=\"height: 20px;width: 20px;\">-->\n    <!--      </button>-->\n    <!--    </div>-->\n\n    <!--    <el-drawer-->\n    <!--        title=\"Layers\"-->\n    <!--        v-model=\"drawer\"-->\n    <!--        custom-class=\"drawerCustomCSS\"-->\n    <!--        :append-to-body=\"drawerAppendToBody\"-->\n    <!--        :modal=\"false\"-->\n    <!--        :modal-class=\"'drawerForLayersList'\"-->\n    <!--    >-->\n    <!--      <span>-->\n    <!--        <div class=\"layerCollection\"></div>-->\n    <!--          </span>-->\n    <!--    </el-drawer>-->\n    <PrintMap></PrintMap>\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\n// import Control from \"ol/control/Control\"\n// import OSM from \"ol/source/OSM\";\nimport XYZ from 'ol/source/XYZ';\n// import {Image as ImageLayer, Tile as TileLayer} from 'ol/layer';\nimport {Tile as TileLayer} from 'ol/layer';\n// import TileWMS from \"ol/source/TileWMS\";\n// import ImageWMS from 'ol/source/ImageWMS';\nimport View from \"ol/View\";\nimport {dataSelect} from \"../../utils/data\";\nimport eventHub from \"../../utils/utils\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import EDALSLD from 'ol-plus/sld/EDALSLD';\n// import {ThreddsServer} from '../config';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n// import {lineString, lineDistance, area as turfArea,polygon as turfPolygon, length as turfLength} from '@turf/turf';\nimport {getArea, getLength,} from 'ol/sphere';\nimport LineString from 'ol/geom/LineString';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n\n// import {MajorBasinExtent, BasinExtent, mbasin, dataSelect, WMSSLD, legendImage} from \"../utils/data\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import {ThreddsServer} from \"../utils/config\";\n\n\n// import 'ol-ext/control/Search.css';\nimport SearchNominatim from 'ol-ext/control/SearchNominatim';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nimport Text from \"ol/style/Text\";\nimport {Icon} from 'ol/style';\nimport {toSize} from 'ol/size';\nimport ImageIcon from '../../assets/markers_default.png';\nimport {getCenter as ol_extent_getCenter} from 'ol/extent';\nimport GeoJSON from \"ol/format/GeoJSON\";\n// import Legend from \"ol-ext/legend/Legend\";\nimport Legend from \"../../utils/customLegend\"\nimport LegendControl from \"ol-ext/control/Legend\";\nimport CanvasScaleLine from \"ol-ext/control/CanvasScaleLine\";\nimport PrintDialog from \"ol-ext/control/PrintDialog\";\nimport OLPolygon from 'ol/geom/Polygon';\nimport OlSelect from 'ol/interaction/Select';\nimport OlDraw from 'ol/interaction/Draw';\nimport OlExtTextButton from 'ol-ext/control/TextButton';\nimport Bar from 'ol-ext/control/Bar';\nimport OlExtButton from 'ol-ext/control/Button';\nimport OlExtToggle from 'ol-ext/control/Toggle';\n// import 'ol-ext/control/Bar.css'\nimport CircleStyle from \"ol/style/Circle\";\n// import ScaleLine from \"ol/control/ScaleLine\";\nimport CanvasTitle from \"ol-ext/control/CanvasTitle\";\nimport {defaults} from \"ol/control\";\nimport {saveAs} from 'file-saver';\nimport {jsPDF} from \"jspdf\";\nimport {mapMutations, mapState} from 'vuex';\nimport PrintMap from \"../common/PrintMap\";\n// import {GeoServerHost} from \"../config\";\n\nexport default {\n  name: \"mapComponentSocioEconomic\",\n  components: {PrintMap},\n  data() {\n    return {\n      // drawerAppendToBody: true,\n      mapObj: '',\n      HighLightedLayer: '',\n      view: '',\n      mapObject: '',\n      MajorBasin: '',\n      AllLayers: '',\n      selectedFilesOnAYear: [],\n      // drawer: true,\n    }\n  },\n  created() {\n    this.mapControlVariable.LegendObject = new Legend({\n      title: 'Legend',\n      margin: 3,\n      // this will be used for the text\n      size: [60, 30]\n      // size:[200,50]\n      // items: legendItems\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSelectedLayerObj\", \"appendTimeSeriesLayerCollection\", \"setSelectInteraction\",\"setSelectInteractionObj\", \"setMapObject\", \"setWorkingVectorLayer\", \"addLegend\", \"removeLegend\",\"setVectorLayerSource\"]),\n    mapInitilization() {\n      // let osm = new TileLayer({\n      //   source: new OSM({attributions: [],}),\n      //   // visible:false\n      // });\n\n      let esri_world_topomap = new TileLayer({\n        visible: true,\n        zIndex: 1,\n        source: new XYZ({\n          attributions: [],\n          url:\n              'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n              'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n          crossOrigin: \"Anonymous\"\n        }),\n      });\n\n      let view = new View({\n        center: [9388155.512006583, 3291367.8109067543],\n        zoom: 4,\n        extent: [6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793]\n      });\n      // let ScaleControl = new ScaleLine({\n      //   units: 'metric'\n      // });\n      //\n      var map = new Map({\n        layers: [],\n        // target: this.$refs['map-root'],\n        renderer: 'canvas',\n        target: 'map-container2',\n        controls: defaults({\n          attribution: false\n        }).extend([]),\n        view: view,\n      });\n      // map.addLayer(osm);\n      map.addLayer(esri_world_topomap);\n      this.mapObject = map;\n      window.mapObject = map;\n      this.view = view;\n\n      // this.mapObject.addControl(\n      //     new Control({\n      //       element: document.getElementById('layerSwitcherDiv')\n      //     })\n      // );\n      map.getView().fit([6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793], map.getView());\n      this.setMapObject(this.mapObject);\n    },\n    legendObjectCollection() {\n      let legendObjectEnabled = [];\n      this.TimeSeriesLayerCollection.forEach(function (layerObj) {\n        let Properties = layerObj.getProperties();\n        console.log(Properties.legendPath);\n        let lObj = {\n          title: Properties.title,\n          // typeGeom: 'Point',\n          style: new Style({\n            image: new Icon({\n              src: Properties.legendPath,\n              crossOrigin: 'anonymous' // Enable print\n            })\n          })\n        };\n        legendObjectEnabled.push(lObj)\n      });\n      return legendObjectEnabled;\n    },\n    addGeoCodingAndInteractionBar() {\n      var map = this.mapObject;\n\n// Set the control grid reference\n      var search = new SearchNominatim({\n        polygon: true,\n        reverse: false,\n        position: true,\t// Search, with priority to geo position,\n        // maxHistory: -1,\n        className: 'OSMBasedGeocodingEmissionPage',\n      });\n\n// search.set('copy', false)\n\n      var GeoCodingAndDrawLayer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 999\n      });\n\n      this.setWorkingVectorLayer(GeoCodingAndDrawLayer);\n\n      map.addLayer(GeoCodingAndDrawLayer);\n\n      map.addControl(search);\n\n            // This sets on store\n      this.setVectorLayerSource(GeoCodingAndDrawLayer.getSource());\n\n\n// Select feature when click on the reference index\n      search.on('select', function (e) {\n        // console.log(e);\n        // GeoCodingAndDrawLayer.getSource().clear();\n        removePreviousSearchFeature();\n        // Check if we get a geojson to describe the search\n        if (e.search.geojson) {\n          var format = new GeoJSON();\n          var f = format.readFeature(e.search.geojson, {\n            dataProjection: \"EPSG:4326\",\n            featureProjection: map.getView().getProjection()\n          });\n          delete e.search.geojson;\n          f.setProperties(e.search);\n          GeoCodingAndDrawLayer.getSource().addFeature(f);\n          var view = map.getView();\n          var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n          var zoom = view.getZoomForResolution(resolution);\n          var center = ol_extent_getCenter(f.getGeometry().getExtent());\n          // redraw before zoom\n          setTimeout(function () {\n            view.animate({\n              center: center,\n              zoom: Math.min(zoom, 16)\n            });\n          }, 100);\n\n        } else {\n          map.getView().animate({\n            center: e.coordinate,\n            zoom: Math.max(map.getView().getZoom(), 16)\n          });\n        }\n        UpDateVectorLayerStyle();\n      });\n\n      // Main control bar\n      var mainbar = new Bar();\n      mainbar.setPosition('top-left');\n\n      map.addControl(mainbar);\n\n// Edit control bar\n      var editbar = new Bar({\n        toggleOne: true,\t// one control active at the same time\n        group: false\t\t\t// group controls together\n      });\n      mainbar.addControl(editbar);\n\n// Add selection tool:\n//  1- a toggle control with a select interaction\n//  2- an option bar to delete / get information on the selected feature\n      var sbar = new Bar();\n      sbar.addControl(new OlExtButton({\n        html: '<i class=\"fa fa-times\"></i>',\n        title: \"Delete\",\n        handleClick: function () {\n          var features = selectCtrl.getInteraction().getFeatures();\n          if (!features.getLength()) info(\"Select an object first...\");\n          else info(features.getLength() + \" object(s) deleted.\");\n\n          features.forEach(function (f) {\n            console.log(f);\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          });\n          selectCtrl.getInteraction().getFeatures().clear();\n          selectCtrl.getInteraction().dispatchEvent({type: 'select'});\n        }\n      }));\n\n\n      var selectCtrl = new OlExtToggle({\n        html: '<i class=\"fa fa-hand-pointer\"></i>',\n        title: \"Select\",\n        interaction: new OlSelect({\n          hitTolerance: 2,\n          style: new Style({\n            image: new CircleStyle({\n              radius: 5,\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              }),\n            }),\n            stroke: new Stroke({\n              color: [255, 0, 0, 1],\n              opacity: 1,\n              width: 2\n            }),\n            fill: new Fill({\n              color: '#e5e5ff50'\n            })\n            // Commented to only see the lines\n            //,fill: new ol.style.Stroke ({\n            //  color: [155, 155, 155, 0.4]\n            //})\n          }),\n          layers: [GeoCodingAndDrawLayer]\n        }),\n        bar: sbar,\n        autoActivate: true,\n        active: true\n      });\n      // this.setSelectInteraction(selectCtrl.getInteraction());\n\n      editbar.addControl(selectCtrl);\n      this.setSelectInteractionObj(selectCtrl.getInteraction());\n      this.setSelectedLayerObj(selectCtrl.getInteraction());\n// Add editing tools\n      var pedit = new OlExtToggle({\n        html: '<i class=\"fa fa-map-marker-alt\" ></i>',\n        title: 'Point',\n        interaction: new OlDraw({\n          type: 'Point',\n          source: GeoCodingAndDrawLayer.getSource()\n        })\n      });\n      editbar.addControl(pedit);\n      var fedit = new OlExtToggle({\n        html: '<i class=\"fa fa-draw-polygon\" ></i>',\n        title: 'Polygon',\n        interaction: new OlDraw({\n          type: 'Polygon',\n          source: GeoCodingAndDrawLayer.getSource(),\n          // Count inserted points\n          geometryFunction: function (coordinates, geometry) {\n            this.nbpts = coordinates[0].length;\n            if (geometry) geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            else geometry = new OLPolygon(coordinates);\n            return geometry;\n          }\n        }),\n        // Options bar ssociated with the control\n        bar: new Bar({\n          controls: [new OlExtTextButton({\n            html: 'undo',//'<i class=\"fa fa-mail-reply\"></i>',\n            title: \"undo last point\",\n            handleClick: function () {\n              if (fedit.getInteraction().nbpts > 1) fedit.getInteraction().removeLastPoint();\n            }\n          }),\n            new OlExtTextButton({\n              html: 'finish',\n              title: \"finish\",\n              handleClick: function () {\n                // Prevent null objects on finishDrawing\n                if (fedit.getInteraction().nbpts > 3) fedit.getInteraction().finishDrawing();\n              }\n            })\n          ]\n        })\n      });\n      editbar.addControl(fedit);\n\n\n      // fedit.getInteraction().on('drawend', function (e) {\n      //\n      //   console.log(e.feature);\n      //   console.log(e.feature);\n      //\n      //   // GeoCodingAndDrawLayer.getSource().removeFeature(e.feature);\n      //\n      //\n      // });\n\n      fedit.getInteraction().on('drawstart', function () {\n        GeoCodingAndDrawLayer.getSource().once('addfeature', handleAddFeature);\n      });\n\n      function handleAddFeature(evt) {\n        let coordi = evt.feature.getGeometry().getCoordinates();\n\n        const area = getArea(evt.feature.getGeometry());\n        // Sq.Km\n        let outputArea = Math.round((area / 1000000) * 100) / 100;\n        console.log(outputArea);\n\n        let li = new LineString(coordi);\n        const length = getLength(li);\n        // In Km\n        let outputLength = Math.round((length / 1000) * 100) / 100;\n        console.log(outputLength);\n        // GeoCodingAndDrawLayer.getSource().removeFeature(evt.feature);\n      }\n\n// Show info\n      function info(i) {\n        console.log(i);\n        // document.querySelector(\"#info\").innerHTML(i || \"\");\n      }\n\n      function UpDateVectorLayerStyle() {\n        GeoCodingAndDrawLayer.getSource().forEachFeature(function (feature) {\n          let StyleObj = null;\n          if (feature.getProperties().osm_id) {\n            StyleObj = [\n              new Style({\n                stroke: new Stroke({\n                  color: [0, 0, 0, 0],\n                  opacity: 1,\n                  width: 3\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff00'\n                })\n                // Commented to only see the lines\n                //,fill: new ol.style.Stroke ({\n                //  color: [155, 155, 155, 0.4]\n                //})\n              }),\n              // Dash white lines (second style, on the top)\n              new Style({\n                image: new Icon({\n                  anchor: [0.5, 46],\n                  anchorXUnits: 'fraction',\n                  anchorYUnits: 'pixels',\n                  src: ImageIcon,\n                  size: toSize([40, 45]),\n                  // offset:[20,20]\n                }),\n                stroke: new Stroke({\n                  color: [0, 0, 255, 1.0],\n                  opacity: 1,\n                  width: 3,\n                  lineDash: [4, 8, 4, 8]\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff40'\n                })\n              })\n            ];\n\n          } else {\n            StyleObj = new Style({\n              image: new CircleStyle({\n                radius: 5,\n                stroke: new Stroke({\n                  color: [255, 0, 0, 1],\n                  opacity: 1,\n                  width: 2\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff50'\n                }),\n              }),\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              })\n              // Commented to only see the lines\n              //,fill: new ol.style.Stroke ({\n              //  color: [155, 155, 155, 0.4]\n              //})\n            });\n\n          }\n          feature.setStyle(StyleObj);\n\n        });\n      }\n\n      function removePreviousSearchFeature() {\n        var features = GeoCodingAndDrawLayer.getSource().getFeatures();\n        features.forEach(function (f) {\n          if (f.getProperties().osm_id) {\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          }\n        });\n        // console.log(features);\n      }\n\n      console.log(\"second\");\n      eventHub.$emit('runFeatureInteractionCode');\n    },\n    addPrintMapFunctionality() {\n      // Add a custom push button with onToggle function\n      // let that = this;\n      var PrintButton = new OlExtButton({\n        html: '<i class=\"fa fa-print\"></i>',\n        className: \"PrintMap\",\n        title: \"Print map\",\n        handleClick: () => {\n\n          // that.PrintMapComponentData.PrintMapDialogVisible = true;\n          // setTimeout(() => {\n          //   eventHub.$emit('OpenDialogOfPrintAndProxyfy');\n          // }, 500);\n\n        }\n      });\n\n      this.mapObject.addControl(PrintButton);\n    },\n    olExtLegentItem(title, id, legend) {\n      return {\n        id: id,\n        title: title,\n        typeGeom: 'Point',\n        style: new Style({\n          image: new Icon({\n            src: legend,\n            crossOrigin: 'anonymous' // Enable print\n          })\n        })\n      };\n\n    },\n    LayerSwitcherClick() {\n      this.drawer = true;\n    },\n    handleClose(done, e) {\n      console.log(e);\n\n      // this.$confirm('You still have unsaved data, proceed?')\n      //     .then(()=> {\n      //       done();\n      //     })\n      //     .catch(()=> {\n      //     });\n    },\n    olextPrintFunction() {\n      // Add a title control\n      this.mapObject.addControl(new CanvasTitle({\n        title: 'my title',\n        visible: false,\n        style: new Style({text: new Text({font: '20px \"Lucida Grande\",Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif'})})\n      }));\n      // let legendItems=[];\n\n\n      // Add a legend to the print\n      var legendCtrl = new LegendControl({legend: this.mapControlVariable.LegendObject, collapsed: true});\n      this.mapObject.addControl(legendCtrl);\n\n      // Add a ScaleLine control\n      this.mapObject.addControl(new CanvasScaleLine());\n\n      // Print control\n      var printControl = new PrintDialog({lang: 'en'});\n      printControl.setSize('A4');\n      printControl.setOrientation('landscape');\n      this.mapObject.addControl(printControl);\n\n\n      /* On print > save image file */\n      printControl.on(['print', 'error'], (e) => {\n        // let LegendImageArray = this.legendObjectCollection();\n        // LegendImageArray.forEach(function (ii) {\n        //   console.log(ii);\n        //   legendd.addItem(ii);\n        // });\n        // // legendItems = LegendImageArray;\n        // console.log(LegendImageArray);\n\n        // Print success\n        if (e.image) {\n          if (e.pdf) {\n            // Export pdf using the print info\n            var pdf = new jsPDF({\n              orientation: e.print.orientation,\n              unit: e.print.unit,\n              format: e.print.size\n            });\n            pdf.addImage(e.image, 'JPEG', e.print.position[0], e.print.position[0], e.print.imageWidth, e.print.imageHeight);\n            pdf.save(e.print.legend ? 'legend.pdf' : 'map.pdf');\n          } else {\n            // Save image as file\n            e.canvas.toBlob(function (blob) {\n              var name = (e.print.legend ? 'legend.' : 'map.') + e.imageType.replace('image/', '');\n              saveAs(blob, name);\n            }, e.imageType, e.quality);\n          }\n        } else {\n          console.warn('No canvas to export');\n        }\n      });\n\n    },\n  },\n  computed: {\n    ...mapState([\"TimeSeriesLayerCollection\", \"PrintMapComponentData\", \"mapControlVariable\"]),\n    getInventory() {\n      return dataSelect.Inventory;\n    },\n  },\n\n  beforeMount() {\n  },\n  mounted() {\n    this.mapInitilization();\n    // this.addGeoCoding();\n    this.addGeoCodingAndInteractionBar();\n    // this.addPrintMapFunctionality();\n    this.olextPrintFunction();\n    //\n    // let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n    // let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n    //\n    // let AddRemoveLegendFunction = function () {\n    //\n    //   if (this.getProperties().visible) {\n    //     that.addLegend(this.getProperties().OLEXTLegendObject);\n    //   } else {\n    //     that.removeLegend(this.getProperties().OLEXTLegendObject);\n    //   }\n    // };\n    //\n    //\n    // let le1 = this.olExtLegentItem('Country Outline', 'Country_Outline', WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry')\n    //\n    // // this.drawer = false;\n    // let countryBoundary = new ImageLayer({\n    //   id: 'Country_Outline',\n    //   title: 'Country Outline',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry',\n    //   zIndex: 6,\n    //   OLEXTLegendObject: le1,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_country_boundry'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le2 = this.olExtLegentItem('Province','Province', WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary')\n    //\n    // let provinceBoundary = new ImageLayer({\n    //   id: 'Province',\n    //   title: 'Province',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary',\n    //   zIndex: 5,\n    //   OLEXTLegendObject: le2,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_provincial_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le3 = this.olExtLegentItem('District','District', WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary')\n    //\n    // let DistrictBoundary = new ImageLayer({\n    //   id: 'District',\n    //   title: 'District',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary',\n    //   zIndex: 4,\n    //   OLEXTLegendObject: le3,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_district_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le4 = this.olExtLegentItem('Palika', 'Palika',WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary')\n    //\n    // let PalikaBoundary = new ImageLayer({\n    //   id: 'Palika',\n    //   title: 'Palika',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary',\n    //   zIndex: 3,\n    //   OLEXTLegendObject: le4,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_palika_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let that = this;\n    // countryBoundary.on('change:visible', AddRemoveLegendFunction);\n    // provinceBoundary.on('change:visible', AddRemoveLegendFunction);\n    // DistrictBoundary.on('change:visible', AddRemoveLegendFunction);\n    // PalikaBoundary.on('change:visible', AddRemoveLegendFunction);\n    //\n    // this.mapObject.addLayer(countryBoundary);\n    // this.mapObject.addLayer(provinceBoundary);\n    // this.mapObject.addLayer(DistrictBoundary);\n    // this.mapObject.addLayer(PalikaBoundary);\n    //\n    // let l1 = new LayerSwitcher(\".layerCollection\", countryBoundary, false, false);\n    // let l2 = new LayerSwitcher(\".layerCollection\", provinceBoundary, false, false);\n    // let l3 = new LayerSwitcher(\".layerCollection\", DistrictBoundary, false, false);\n    // let l4 = new LayerSwitcher(\".layerCollection\", PalikaBoundary, false, false);\n    //\n    // l1.setVisible(true);\n    // l2.setVisible(true);\n    // l3.setVisible(true);\n    // l4.setVisible(true);\n    //\n    // this.appendTimeSeriesLayerCollection(l1);\n    // this.appendTimeSeriesLayerCollection(l2);\n    // this.appendTimeSeriesLayerCollection(l3);\n    // this.appendTimeSeriesLayerCollection(l4);\n  },\n}\n</script>\n\n<style>\n#map-container2 {\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n}\n\n#map-container2 .ol-viewport {\n  border-radius: 5px;\n}\n\n#layerSwitcherDiv {\n  right: 0.5em;\n  top: 0.5em;\n  position: absolute;\n}\n\n#layerSwitcherDiv button {\n  line-height: unset;\n  border-radius: 1px;\n}\n\n\n.drawerForLayersList {\n  position: initial !important;\n}\n\n/* OSM Based Geocoding*/\n.ol-search ul li {\n  border-bottom: 1px solid lightgray;\n\n  padding: 10px 5px 10px 5px !important;\n  flex: 1;\n  max-width: 608px;\n  white-space: normal !important;\n  overflow: unset;\n  flex-grow: 1;\n  text-overflow: ellipsis;\n}\n\n.ol-search ul li:last-child {\n  border-bottom: none;\n  border-radius: 0px;\n}\n\n.ol-search ul {\n  list-style: none;\n  cursor: pointer;\n  padding: 0px 5px 0px 5px !important;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  clear: both;\n  cursor: pointer;\n  max-width: 618px;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #fff;\n  font-size: 13px;\n}\n\n.ol-search {\n  z-index: 999;\n}\n\n.ol-search {\n  top: 4.1em;\n  left: 0.5em;\n  /*width: 500px;*/\n}\n\n.ol-search input {\n  width: 600px;\n}\n\n\n.ol-control.ol-bar {\n  left: 3.2em;\n  top: 6em;\n}\n\n.ol-control.ol-bar.ol-top.ol-left, .ol-control.ol-bar.ol-top.ol-right {\n  top: 6.5em;\n  transform: none;\n}\n\n.PrintMap.ol-button.ol-unselectable.ol-control {\n  top: 12em;\n  left: 0.5em;\n}\n\n.LayerDiv {\n  margin-top: 10px;\n}\n\n.withOpacityChange {\n  margin-bottom: 18px;\n}\n\n.ol-scale-line {\n  right: 0;\n  left: auto;\n  bottom: 2em;\n}\n</style>","import { render } from \"./mapComponentSocioEconomic.vue?vue&type=template&id=245d4d8a\"\nimport script from \"./mapComponentSocioEconomic.vue?vue&type=script&lang=js\"\nexport * from \"./mapComponentSocioEconomic.vue?vue&type=script&lang=js\"\n\nimport \"./mapComponentSocioEconomic.vue?vue&type=style&index=0&id=245d4d8a&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width layer-collection-div1\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Layer Control\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\" always>\n        <div class=\"layerCollection\"></div>\n        <div class=\"pannel-title summaryPop\">\n          <h6 class=\"title-heading\">\n            <div class=\"\">\n              Population Summary\n              <el-link class=\"refreshButton\"  @click=\"RefereshSummary()\" :disabled=\"isLoading\"><i class=\"fas fa-sync refreshIcon\"></i>\n              </el-link>\n            </div>\n          </h6>\n        </div>\n\n        <div class=\"informaticsSection\" v-loading=\"isLoading\">\n          <ul class=\"list-style1\" id=\"InfoGraphicsD\">\n            <li>\n          <span class=\"data gutter-lt\">\n            <i class=\"data-icon\">\n              <img class=\"svg-dynamic\" src=\"@/assets/InfographicsIcon/population.svg\">\n            </i>\n            <span class=\"data-item\">\n              <span class=\"title7\">Total Population</span>\n              <small class=\"font-sm\">{{ TotalPop }}</small>\n            </span>\n          </span>\n            </li>\n            <li>\n          <span class=\"data gutter-lt\">\n            <i class=\"data-icon\">\n              <img class=\"svg-dynamic\" src=\"@/assets/InfographicsIcon/male.svg\">\n            </i>\n            <span class=\"data-item\">\n              <span class=\"title7\">Male</span>\n              <small class=\"font-sm\">{{ Male }}</small>\n            </span>\n          </span>\n            </li>\n\n            <li>\n          <span class=\"data gutter-lt\">\n            <i class=\"data-icon\">\n              <img class=\"svg-dynamic\" src=\"@/assets/InfographicsIcon/female.svg\">\n            </i>\n            <span class=\"data-item\">\n              <span class=\"title7\">Female</span>\n              <small class=\"font-sm\">{{ Female }}</small>\n            </span>\n          </span>\n            </li>\n\n            <li>\n          <span class=\"data gutter-lt\">\n            <i class=\"data-icon\">\n              <img class=\"svg-dynamic\" src=\"@/assets/InfographicsIcon/child.svg\">\n            </i>\n            <span class=\"data-item\">\n              <span class=\"title7\">Child (0 - 14)</span>\n              <small class=\"font-sm\">{{ Child }}</small>\n            </span>\n          </span>\n            </li>\n\n            <li>\n          <span class=\"data gutter-lt\">\n            <i class=\"data-icon\">\n              <img class=\"svg-dynamic\" src=\"@/assets/InfographicsIcon/male.svg\">\n            </i>\n            <span class=\"data-item\">\n              <span class=\"title7\">Adult (15 - 59)</span>\n              <small class=\"font-sm\">{{ Adult }}</small>\n            </span>\n          </span>\n            </li>\n\n\n            <li>\n          <span class=\"data gutter-lt\">\n            <i class=\"data-icon\">\n              <img class=\"svg-dynamic\" src=\"@/assets/InfographicsIcon/old.svg\">\n            </i>\n            <span class=\"data-item\">\n              <span class=\"title7\">Old (60 +) </span>\n              <small class=\"font-sm\">{{ Old }}</small>\n            </span>\n          </span>\n            </li>\n\n\n          </ul>\n        </div>\n\n      </el-scrollbar>\n    </div>\n\n\n  </div>\n</template>\n\n<script>\n\nimport {mapActions, mapState} from \"vuex\";\nimport OLWKT from \"ol/format/WKT\";\n\nexport default {\n  name: \"LayerSwitcherControl\",\n  data() {\n    return {TotalPop: '', Male: '', Female: '', Child: '', Adult: '', Old: '', isLoading: true,}\n  },\n  methods: {\n    ...mapActions([\"PostPopulationSummary\"]),\n    async RefereshSummary() {\n      this.isLoading = true;\n      console.log(this.SocioEconomicObject.popYear);\n      var wktfeaturegeom, geometryType;\n      var features = this.selectInteractionObj.getFeatures();\n\n      features.forEach(function (f) {\n        var format = new OLWKT();\n        wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        geometryType = f.getGeometry().getType();\n      });\n      let Param = {\n        year: this.SocioEconomicObject.popYear,\n        geometryType: geometryType,\n        wkt: wktfeaturegeom,\n      }\n      let response = await this.PostPopulationSummary(Param);\n      console.log(response);\n      this.TotalPop = response.totalPop;\n      this.Male = response.totalMale;\n      this.Female = response.totalFemale;\n      this.Child = response.child;\n      this.Adult = response.Adult;\n      this.Old = response.Old;\n\n      this.isLoading = false;\n\n    }\n  },\n  computed: {\n    ...mapState([\"SocioEconomicObject\", \"selectInteractionObj\"]),\n  },\n  mounted() {\n    // eslint-disable-next-line no-undef\n\n\n    setTimeout(() => {\n\n      this.RefereshSummary();\n    }, 500);\n\n  },\n}\n</script>\n\n<style scoped>\n\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.pollutant-cascader:not(:last-child) {\n  padding-bottom: 10px;\n}\n\n.body-container {\n  height: calc(100% - 50px);\n}\n\n.layer-collection-div1 .body-container {\n  padding: 0px;\n}\n\n\n.summaryPop {\n  border-top-left-radius: 0px;\n  border-top-right-radius: 0px;\n  height: 30px;\n}\n\n\n.summaryPop .title-heading {\n  padding: 5px 6px;\n  text-align: center;\n}\n\n/*.informaticsSection {*/\n/*  height: calc(100% - 352px);*/\n/*}*/\n\n\n.list-style1 {\n  padding: 0px 10px 10px 10px;\n}\n\n.list-style1 li:not(:last-child) {\n  border-bottom: 1px solid rgba(138, 154, 164, .2);\n}\n\n.list-style1 li {\n  padding: 4px 8px;\n  border-top-right-radius: 10px;\n}\n\n.list-style1 li .data {\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n}\n\n.data {\n  color: #373737;\n  fill: #373737;\n}\n\n.list-style1 li .data .data-icon {\n  fill: #000;\n  padding: 0;\n  width: 20px;\n  top: 2px;\n  margin-right: 0;\n  background-color: transparent;\n}\n\n.data .data-icon {\n  float: left;\n  opacity: .6;\n}\n\n.list-style1 li .data .data-item {\n  width: 85%;\n  padding-left: 10px;\n}\n\n.data .data-item {\n  float: left;\n}\n\n.title7 {\n  font-weight: 400;\n  font-size: 14px;\n}\n\n.list-style1 li .data .data-item small {\n  color: #8a9aa4;\n}\n\n.data .data-item small {\n  font-size: 11px;\n}\n\n.data .data-item small {\n  display: block;\n  line-height: 1.1;\n  font-weight: 600;\n}\n\nul#InfoGraphicsD {\n  margin-top: 5px;\n}\n\n#InfoGraphicsD img {\n  max-width: 100%;\n  vertical-align: middle;\n}\n\n\n.data .data-item small {\n  font-size: 14px;\n}\n\n.layerCollection {\n  min-height: 217px;\n}\n\n.refreshButton{\n  color: white;\n}\n\n\n\n\n\n/*.aboutContent .el-collapse-item__content, .aboutContent .el-collapse-item__header, .aboutContent {*/\n/*  font-family: Arial, Helvetica, sans-serif;*/\n/*  color: rgb(96, 98, 102) !important;*/\n/*  font-size: 14px;*/\n/*  line-height: 1.7692307692;*/\n/*  text-align: justify;*/\n/*  word-break: normal;*/\n/*}*/\n\n/*.aboutContent .el-collapse-item__header {*/\n/*  font-weight: bold;*/\n/*  line-height: 1.2;*/\n/*  font-size: 16.38px;*/\n/*}*/\n\n\n.informaticsSection{\n    /*font-family: Arial, Helvetica, sans-serif;*/\n\n\n\n}\n\n</style>","import { render } from \"./LayerSwitcherControl.vue?vue&type=template&id=07ee501a&scoped=true\"\nimport script from \"./LayerSwitcherControl.vue?vue&type=script&lang=js\"\nexport * from \"./LayerSwitcherControl.vue?vue&type=script&lang=js\"\n\nimport \"./LayerSwitcherControl.vue?vue&type=style&index=0&id=07ee501a&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07ee501a\"]])\n\nexport default __exports__","import { render } from \"./TabBodySocioEconomic.vue?vue&type=template&id=e1996674&scoped=true\"\nimport script from \"./TabBodySocioEconomic.vue?vue&type=script&lang=js\"\nexport * from \"./TabBodySocioEconomic.vue?vue&type=script&lang=js\"\n\nimport \"./TabBodySocioEconomic.vue?vue&type=style&index=0&id=e1996674&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e1996674\"]])\n\nexport default __exports__","<template>\n  <el-row class=\"full-height\">\n    <el-col :span=\"24\" class=\"full-height\">\n      <el-row class=\"full-height\">\n        <el-col :span=\"4\"\n                class=\"full-height full-width padding-left-10 padding-bottom-10 padding-top-10 padding-right-5\">\n          <LayerSwitcherControl></LayerSwitcherControl>\n        </el-col>\n        <el-col :span=\"20\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-10 padding-right-10\">\n          <mapComponentRGBProduct></mapComponentRGBProduct>\n        </el-col>\n      </el-row>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n\n// import about from \"./about\";\nimport mapComponentRGBProduct from \"./mapComponentRGBProduct\";\n// import SocioEconomicStatistics from \"./SocioEconomicStatistics\";\nimport LayerSwitcherControl from '../common/LayerSwitcherControl';\nimport {mapActions} from \"vuex\";\n\nexport default {\n  name: \"TabBodySocioEconomic\",\n  components: {\n    // about,\n    mapComponentRGBProduct,\n    LayerSwitcherControl,\n  },\n  methods: {\n    ...mapActions([\"getCascaderOptions\"]),\n  },\n  async mounted() {\n    // let data = await this.getCascaderOptions();\n    // console.log(data);\n  }\n}\n</script>\n\n<style scoped>\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n.full-height {\n  height: 100%;\n}\n</style>\n","<template>\n  <div className=\"card-box full-height full-width about-div\">\n    <div id=\"map-container2\" ref=\"LayerSelectorDropdown\">\n    </div>\n    <!--    <div id=\"layerSwitcherDiv\" class=\"ol-unselectable ol-control\" @click=\"LayerSwitcherClick()\">-->\n    <!--      <button>-->\n    <!--        <img src=\"@/assets/layers.svg\" style=\"height: 20px;width: 20px;\">-->\n    <!--      </button>-->\n    <!--    </div>-->\n\n    <!--    <el-drawer-->\n    <!--        title=\"Layers\"-->\n    <!--        v-model=\"drawer\"-->\n    <!--        custom-class=\"drawerCustomCSS\"-->\n    <!--        :append-to-body=\"drawerAppendToBody\"-->\n    <!--        :modal=\"false\"-->\n    <!--        :modal-class=\"'drawerForLayersList'\"-->\n    <!--    >-->\n    <!--      <span>-->\n    <!--        <div class=\"layerCollection\"></div>-->\n    <!--          </span>-->\n    <!--    </el-drawer>-->\n    <PrintMap></PrintMap>\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\n// import Control from \"ol/control/Control\"\n// import OSM from \"ol/source/OSM\";\nimport XYZ from 'ol/source/XYZ';\n// import {Image as ImageLayer, Tile as TileLayer} from 'ol/layer';\nimport {Tile as TileLayer} from 'ol/layer';\n// import TileWMS from \"ol/source/TileWMS\";\n// import ImageWMS from 'ol/source/ImageWMS';\nimport View from \"ol/View\";\n// import {dataSelect} from \"../utils/data\";\n// import eventHub from \"../utils/utils\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import EDALSLD from 'ol-plus/sld/EDALSLD';\n// import {ThreddsServer} from '../config';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n// import {lineString, lineDistance, area as turfArea,polygon as turfPolygon, length as turfLength} from '@turf/turf';\n// import {getArea, getLength,} from 'ol/sphere';\n// import LineString from 'ol/geom/LineString';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n\n// import {MajorBasinExtent, BasinExtent, mbasin, dataSelect, WMSSLD, legendImage} from \"../utils/data\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import {ThreddsServer} from \"../utils/config\";\n\n\n// import 'ol-ext/control/Search.css';\nimport SearchNominatim from 'ol-ext/control/SearchNominatim';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nimport Text from \"ol/style/Text\";\nimport {Icon} from 'ol/style';\nimport {toSize} from 'ol/size';\nimport ImageIcon from '../../assets/markers_default.png';\nimport {getCenter as ol_extent_getCenter} from 'ol/extent';\nimport GeoJSON from \"ol/format/GeoJSON\";\n// import Legend from \"ol-ext/legend/Legend\";\nimport Legend from \"../../utils/customLegend\"\nimport LegendControl from \"ol-ext/control/Legend\";\nimport CanvasScaleLine from \"ol-ext/control/CanvasScaleLine\";\nimport PrintDialog from \"ol-ext/control/PrintDialog\";\n\n// import OLPolygon from 'ol/geom/Polygon';\n// import OlSelect from 'ol/interaction/Select';\n// import OlDraw from 'ol/interaction/Draw';\n// import OlExtTextButton from 'ol-ext/control/TextButton';\n// import Bar from 'ol-ext/control/Bar';\nimport OlExtButton from 'ol-ext/control/Button';\n// import OlExtToggle from 'ol-ext/control/Toggle';\n// import 'ol-ext/control/Bar.css'\nimport CircleStyle from \"ol/style/Circle\";\n// import ScaleLine from \"ol/control/ScaleLine\";\nimport CanvasTitle from \"ol-ext/control/CanvasTitle\";\nimport {defaults} from \"ol/control\";\n\nimport {saveAs} from 'file-saver';\nimport {jsPDF} from \"jspdf\";\n\nimport {mapActions, mapMutations, mapState} from 'vuex';\n\nimport PrintMap from \"../common/PrintMap\";\nimport {AirPollutionWatchApp} from \"../../utils/dataRGBProducts\";\nimport {threddDataSource} from \"../../config\";\nimport rgbLegend from \"../../assets/rgblegend.jpg\";\nimport legendAMIDustRGB from \"../../assets/legendAMIDustRGB.png\"\nimport {Action} from \"../../store/actionType\";\nimport TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport LayerSwitcher from \"ol-plus/ui/LayerSwitcher\";\n\n// import {GeoServerHost} from \"../config\";\n// import ol_legend_Item from 'ol-ext/legend/Item';\n// import ol_legend_Legend from \"ol-ext/legend/Legend\";\n\n// ol_legend_Legend.prototype.removeItem = function (item) {\n//   let index = false;\n//   this._items.array_.forEach(function (it, idx) {\n//     if (it.getProperties().id == item.id) {\n//       index = idx;\n//     }\n//   });\n//   console.log(\"index\");\n//   console.log(index);\n//   if (index !== false) {\n//     this._items.array_.splice(index, 1);\n//   }\n// };\nexport default {\n  name: \"mapComponentRGBProduct\",\n  components: {PrintMap},\n  data() {\n    return {\n      // drawerAppendToBody: true,\n      mapObj: '',\n      HighLightedLayer: '',\n      view: '',\n      mapObject: '',\n      MajorBasin: '',\n      AllLayers: '',\n      selectedFilesOnAYear: [],\n      // drawer: true,\n      AirPollutionWatchApp: AirPollutionWatchApp,\n    }\n  },\n  created() {\n    this.mapControlVariable.LegendObject = new Legend({\n      title: 'Legend',\n      margin: 3,\n      // items: legendItems,\n      // size:[40, 25]\n      size: [60, 30]\n    });\n  },\n  methods: {\n    ...mapActions([\"PostSlicedFromCatalog\", \"PostCreateGIFMapImage\",]),\n    ...mapMutations([\"setSelectedLayerObj\", \"appendTimeSeriesLayerCollection\", \"setSelectInteraction\", \"setMapObject\", \"setWorkingVectorLayer\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\", \"addLegend\", \"removeLegend\"]),\n    mapInitilization() {\n\n      // let osm = new TileLayer({\n      //   source: new OSM({attributions: [],}),\n      //   // visible:false\n      // });\n\n      let esri_world_topomap = new TileLayer({\n        visible: true,\n        zIndex: 1,\n        source: new XYZ({\n          attributions: [],\n          url:\n              'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n              'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n          crossOrigin: \"Anonymous\"\n        }),\n      });\n\n      let view = new View({\n        center: [9388155.512006583, 3291367.8109067543],\n        zoom: 4,\n        extent: [6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793]\n      });\n\n      // let ScaleControl = new ScaleLine({\n      //   units: 'metric'\n      // });\n      //\n      var map = new Map({\n        layers: [],\n        // target: this.$refs['map-root'],\n        renderer: 'canvas',\n        target: 'map-container2',\n        controls: defaults({\n          attribution: false\n        }).extend([]),\n        view: view,\n      });\n\n      // map.addLayer(osm);\n      map.addLayer(esri_world_topomap);\n      this.mapObject = map;\n      window.mapObject = map;\n      this.view = view;\n\n      // this.mapObject.addControl(\n      //     new Control({\n      //       element: document.getElementById('layerSwitcherDiv')\n      //     })\n      // );\n      map.getView().fit([6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793], map.getView());\n      this.setMapObject(this.mapObject);\n    },\n    legendObjectCollection() {\n      let legendObjectEnabled = [];\n      this.TimeSeriesLayerCollection.forEach(function (layerObj) {\n        let Properties = layerObj.getProperties();\n        console.log(Properties.legendPath);\n        let lObj = {\n          title: Properties.title,\n          // typeGeom: 'Point',\n          style: new Style({\n            image: new Icon({\n              src: Properties.legendPath,\n              crossOrigin: 'anonymous' // Enable print\n            })\n          })\n        };\n        legendObjectEnabled.push(lObj)\n      });\n      return legendObjectEnabled;\n    },\n    addGeoCodingAndInteractionBar() {\n      var map = this.mapObject;\n\n// Set the control grid reference\n      var search = new SearchNominatim({\n        polygon: true,\n        reverse: false,\n        position: true,\t// Search, with priority to geo position,\n        // maxHistory: -1,\n        className: 'OSMBasedGeocodingEmissionPage',\n      });\n\n// search.set('copy', false)\n\n      var GeoCodingAndDrawLayer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 999\n      });\n\n      this.setWorkingVectorLayer(GeoCodingAndDrawLayer);\n\n      map.addLayer(GeoCodingAndDrawLayer);\n\n      map.addControl(search);\n\n\n      function removePreviousSearchFeature() {\n        var features = GeoCodingAndDrawLayer.getSource().getFeatures();\n        features.forEach(function (f) {\n          if (f.getProperties().osm_id) {\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          }\n        });\n        // console.log(features);\n      }\n\n      function UpDateVectorLayerStyle() {\n        GeoCodingAndDrawLayer.getSource().forEachFeature(function (feature) {\n          let StyleObj = null;\n          if (feature.getProperties().osm_id) {\n            StyleObj = [\n              new Style({\n                stroke: new Stroke({\n                  color: [0, 0, 0, 0],\n                  opacity: 1,\n                  width: 3\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff00'\n                })\n                // Commented to only see the lines\n                //,fill: new ol.style.Stroke ({\n                //  color: [155, 155, 155, 0.4]\n                //})\n              }),\n              // Dash white lines (second style, on the top)\n              new Style({\n                image: new Icon({\n                  anchor: [0.5, 46],\n                  anchorXUnits: 'fraction',\n                  anchorYUnits: 'pixels',\n                  src: ImageIcon,\n                  size: toSize([40, 45]),\n                  // offset:[20,20]\n                }),\n                stroke: new Stroke({\n                  color: [0, 0, 255, 1.0],\n                  opacity: 1,\n                  width: 3,\n                  lineDash: [4, 8, 4, 8]\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff40'\n                })\n              })\n            ];\n\n          } else {\n            StyleObj = new Style({\n              image: new CircleStyle({\n                radius: 5,\n                stroke: new Stroke({\n                  color: [255, 0, 0, 1],\n                  opacity: 1,\n                  width: 2\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff50'\n                }),\n              }),\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              })\n              // Commented to only see the lines\n              //,fill: new ol.style.Stroke ({\n              //  color: [155, 155, 155, 0.4]\n              //})\n            });\n\n          }\n          feature.setStyle(StyleObj);\n\n        });\n      }\n\n\n// Select feature when click on the reference index\n      search.on('select', function (e) {\n        // console.log(e);\n        // GeoCodingAndDrawLayer.getSource().clear();\n        removePreviousSearchFeature();\n        // Check if we get a geojson to describe the search\n        if (e.search.geojson) {\n          var format = new GeoJSON();\n          var f = format.readFeature(e.search.geojson, {\n            dataProjection: \"EPSG:4326\",\n            featureProjection: map.getView().getProjection()\n          });\n          delete e.search.geojson;\n          f.setProperties(e.search);\n          GeoCodingAndDrawLayer.getSource().addFeature(f);\n          var view = map.getView();\n          var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n          var zoom = view.getZoomForResolution(resolution);\n          var center = ol_extent_getCenter(f.getGeometry().getExtent());\n          // redraw before zoom\n          setTimeout(function () {\n            view.animate({\n              center: center,\n              zoom: Math.min(zoom, 16)\n            });\n          }, 100);\n        } else {\n          map.getView().animate({\n            center: e.coordinate,\n            zoom: Math.max(map.getView().getZoom(), 16)\n          });\n        }\n        UpDateVectorLayerStyle();\n      });\n\n\n//\n//       // this is for selection and create new feature\n//       // Main control bar\n//       var mainbar = new Bar();\n//       mainbar.setPosition('top-left');\n//\n//       map.addControl(mainbar);\n//\n// // Edit control bar\n//       var editbar = new Bar({\n//         toggleOne: true,\t// one control active at the same time\n//         group: false\t\t\t// group controls together\n//       });\n//       mainbar.addControl(editbar);\n//\n// // Add selection tool:\n// //  1- a toggle control with a select interaction\n// //  2- an option bar to delete / get information on the selected feature\n//       var sbar = new Bar();\n//       sbar.addControl(new OlExtButton({\n//         html: '<i class=\"fa fa-times\"></i>',\n//         title: \"Delete\",\n//         handleClick: function () {\n//           var features = selectCtrl.getInteraction().getFeatures();\n//           if (!features.getLength()) info(\"Select an object first...\");\n//           else info(features.getLength() + \" object(s) deleted.\");\n//\n//           features.forEach(function (f) {\n//             console.log(f);\n//             GeoCodingAndDrawLayer.getSource().removeFeature(f);\n//           });\n//           selectCtrl.getInteraction().getFeatures().clear();\n//           selectCtrl.getInteraction().dispatchEvent({type: 'select'});\n//         }\n//       }));\n//\n//\n//       var selectCtrl = new OlExtToggle({\n//         html: '<i class=\"fa fa-hand-pointer\"></i>',\n//         title: \"Select\",\n//         interaction: new OlSelect({\n//           hitTolerance: 2,\n//           style: new Style({\n//             image: new CircleStyle({\n//               radius: 5,\n//               stroke: new Stroke({\n//                 color: [255, 0, 0, 1],\n//                 opacity: 1,\n//                 width: 2\n//               }),\n//               fill: new Fill({\n//                 color: '#e5e5ff50'\n//               }),\n//             }),\n//             stroke: new Stroke({\n//               color: [255, 0, 0, 1],\n//               opacity: 1,\n//               width: 2\n//             }),\n//             fill: new Fill({\n//               color: '#e5e5ff50'\n//             })\n//             // Commented to only see the lines\n//             //,fill: new ol.style.Stroke ({\n//             //  color: [155, 155, 155, 0.4]\n//             //})\n//           }),\n//           layers: [GeoCodingAndDrawLayer]\n//         }),\n//         bar: sbar,\n//         autoActivate: true,\n//         active: true\n//       });\n//       this.setSelectInteraction(selectCtrl.getInteraction());\n//\n//       editbar.addControl(selectCtrl);\n//       this.setSelectedLayerObj(selectCtrl.getInteraction());\n// // Add editing tools\n//       var pedit = new OlExtToggle({\n//         html: '<i class=\"fa fa-map-marker-alt\" ></i>',\n//         title: 'Point',\n//         interaction: new OlDraw({\n//           type: 'Point',\n//           source: GeoCodingAndDrawLayer.getSource()\n//         })\n//       });\n//       editbar.addControl(pedit);\n//       var fedit = new OlExtToggle({\n//         html: '<i class=\"fa fa-draw-polygon\" ></i>',\n//         title: 'Polygon',\n//         interaction: new OlDraw({\n//           type: 'Polygon',\n//           source: GeoCodingAndDrawLayer.getSource(),\n//           // Count inserted points\n//           geometryFunction: function (coordinates, geometry) {\n//             this.nbpts = coordinates[0].length;\n//             if (geometry) geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n//             else geometry = new OLPolygon(coordinates);\n//             return geometry;\n//           }\n//         }),\n//         // Options bar ssociated with the control\n//         bar: new Bar({\n//           controls: [new OlExtTextButton({\n//             html: 'undo',//'<i class=\"fa fa-mail-reply\"></i>',\n//             title: \"undo last point\",\n//             handleClick: function () {\n//               if (fedit.getInteraction().nbpts > 1) fedit.getInteraction().removeLastPoint();\n//             }\n//           }),\n//             new OlExtTextButton({\n//               html: 'finish',\n//               title: \"finish\",\n//               handleClick: function () {\n//                 // Prevent null objects on finishDrawing\n//                 if (fedit.getInteraction().nbpts > 3) fedit.getInteraction().finishDrawing();\n//               }\n//             })\n//           ]\n//         })\n//       });\n//       editbar.addControl(fedit);\n//\n//\n//       // fedit.getInteraction().on('drawend', function (e) {\n//       //\n//       //   console.log(e.feature);\n//       //   console.log(e.feature);\n//       //\n//       //   // GeoCodingAndDrawLayer.getSource().removeFeature(e.feature);\n//       //\n//       //\n//       // });\n//\n//       fedit.getInteraction().on('drawstart', function () {\n//         GeoCodingAndDrawLayer.getSource().once('addfeature', handleAddFeature);\n//       });\n//\n//       function handleAddFeature(evt) {\n//         let coordi = evt.feature.getGeometry().getCoordinates();\n//\n//         const area = getArea(evt.feature.getGeometry());\n//         // Sq.Km\n//         let outputArea = Math.round((area / 1000000) * 100) / 100;\n//         console.log(outputArea);\n//\n//         let li = new LineString(coordi);\n//         const length = getLength(li);\n//         // In Km\n//         let outputLength = Math.round((length / 1000) * 100) / 100;\n//         console.log(outputLength);\n//         // GeoCodingAndDrawLayer.getSource().removeFeature(evt.feature);\n//       }\n//\n// // Show info\n//       function info(i) {\n//         console.log(i);\n//         // document.querySelector(\"#info\").innerHTML(i || \"\");\n//       }\n//\n//\n//\n//       console.log(\"second\");\n//       eventHub.$emit('runFeatureInteractionCode');\n    },\n    addPrintMapFunctionality() {\n      // Add a custom push button with onToggle function\n      // let that = this;\n      var PrintButton = new OlExtButton({\n        html: '<i class=\"fas fa-print\"></i>',\n        className: \"PrintMap\",\n        title: \"Print map\",\n        handleClick: () => {\n          // that.PrintMapComponentData.PrintMapDialogVisible = true;\n          // setTimeout(() => {\n          //   eventHub.$emit('OpenDialogOfPrintAndProxyfy');\n          // }, 500);\n        }\n      });\n\n      this.mapObject.addControl(PrintButton);\n    },\n    olExtLegentItem(title, id, legend) {\n      return {\n        id: id,\n        title: title,\n        typeGeom: 'Point',\n        style: new Style({\n          image: new Icon({\n            src: legend,\n            crossOrigin: 'anonymous' // Enable print\n          })\n        })\n      };\n    },\n    LayerSwitcherClick() {\n      this.drawer = true;\n    },\n    handleClose(done, e) {\n      console.log(e);\n\n    },\n    olextPrintFunction() {\n      // Add a title control\n      this.mapObject.addControl(new CanvasTitle({\n        title: 'my title',\n        visible: false,\n        style: new Style({text: new Text({font: '20px \"Lucida Grande\",Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif'})})\n      }));\n      // let legendItems=[];\n      // Add a legend to the print\n      var legendCtrl = new LegendControl({legend: this.mapControlVariable.LegendObject});\n      this.mapObject.addControl(legendCtrl);\n\n      // Add a ScaleLine control\n      this.mapObject.addControl(new CanvasScaleLine());\n\n      // Print control\n      var printControl = new PrintDialog({lang: 'en'});\n      printControl.setSize('A4');\n      printControl.setOrientation('landscape');\n      this.mapObject.addControl(printControl);\n\n      /* On print > save image file */\n      printControl.on(['print', 'error'], (e) => {\n        // let LegendImageArray = this.legendObjectCollection();\n        // LegendImageArray.forEach(function (ii) {\n        //   console.log(ii);\n        //   legendd.addItem(ii);\n        // });\n        // // legendItems = LegendImageArray;\n        // console.log(LegendImageArray);\n\n        // Print success\n        if (e.image) {\n          if (e.pdf) {\n            // Export pdf using the print info\n            var pdf = new jsPDF({\n              orientation: e.print.orientation,\n              unit: e.print.unit,\n              format: e.print.size\n            });\n            pdf.addImage(e.image, 'JPEG', e.print.position[0], e.print.position[0], e.print.imageWidth, e.print.imageHeight);\n            pdf.save(e.print.legend ? 'legend.pdf' : 'map.pdf');\n          } else {\n            // Save image as file\n            e.canvas.toBlob(function (blob) {\n              var name = (e.print.legend ? 'legend.' : 'map.') + e.imageType.replace('image/', '');\n              saveAs(blob, name);\n            }, e.imageType, e.quality);\n          }\n        } else {\n          console.warn('No canvas to export');\n        }\n      });\n    },\n\n    CatalogSlicingParam(url, startDate, endDate, ends_with) {\n      let param = {\n        url: url,\n        data_ext: ends_with,\n        startDate: startDate,\n        endDate: endDate,\n      }\n      return param\n    },\n\n    async addRasterLayerToMap(kk) {\n      let slicingParam, responseData, resPonseParsed, wmsList = [], isTrue;\n      let catalogURl = threddDataSource + kk.catalog;\n      slicingParam = this.CatalogSlicingParam(catalogURl, kk.getStartDate(), kk.getEndDate(), kk.ends_with);\n      responseData = await this.PostSlicedFromCatalog(slicingParam);\n      resPonseParsed = responseData;\n      isTrue = resPonseParsed.data.length;\n      kk.hasData = isTrue\n\n      if (isTrue) {\n        resPonseParsed.data.forEach(function (fileName) {\n          let url = catalogURl.replace(\"/catalog/\", \"/wms/\").replace(\"catalog.xml\", fileName);\n          wmsList.push(url)\n        });\n        var Newlayer;\n        if (kk.isTimeDimensionLayer) {\n          if (kk.useSLD) {\n            let SLD = kk.SLD.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n            let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&SLD_BODY=';\n            let legendWMS = '';\n            if (!kk.legendPath) {\n              if (Array.isArray(wmsList)) {\n                legendWMS = wmsList[0] + LegendParameter + encodeURIComponent(SLD).toString();\n              } else {\n                legendWMS = wmsList + LegendParameter + encodeURIComponent(SLD).toString();\n              }\n            } else {\n              legendWMS = kk.legendPath\n            }\n            console.log(legendWMS);\n\n            let OLEXTLegendObject = {\n              id: kk.threddLayerProp.id,\n              title:  kk.threddLayerProp.id.includes(\"dust\")?\"                                         \"+kk.threddLayerProp.title:kk.threddLayerProp.title,\n              typeGeom: 'Point',\n              style: new Style({\n                image: new Icon({\n                  // src: kk.threddLayerProp.legendPath,\n                  src: kk.threddLayerProp.id.includes(\"dust\")?legendAMIDustRGB:rgbLegend ,\n                  crossOrigin: 'anonymous', // Enable print\n                })\n              }),\n              size: kk.threddLayerProp.id.includes(\"dust\")?[250, 195]:[60, 35]\n            };\n\n            let timedimensionTilePara = kk.threddLayerProp;\n            timedimensionTilePara.source.params.SLD_BODY = SLD;\n            timedimensionTilePara.source.url = wmsList;\n            timedimensionTilePara.legendPath = kk.threddLayerProp.id.includes(\"dust\")?legendAMIDustRGB:rgbLegend ;\n            // timedimensionTilePara.legendPath = kk.threddLayerProp.legendPath;\n            timedimensionTilePara.wmsList = wmsList;\n            timedimensionTilePara.changeWMSProxy = true;\n            // timedimensionTilePara.showAnimationButton = true;\n            // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n            timedimensionTilePara.OLEXTLegendObject = OLEXTLegendObject;\n\n            console.log(\"...--------><><><....\");\n            console.log(timedimensionTilePara);\n\n            timedimensionTilePara.animationDownloadFunction = async (obj) => {\n              let isProcessing = obj.getIsProcessing();\n\n\n              if (!isProcessing) {\n                console.log(\"test\");\n                console.log(isProcessing);\n                obj.setIsProcessing(true);\n                let fps = obj.fpsInput.value;\n                let propList = [];\n                let prop = obj.getProperties();\n                obj.AllDateAndTimeList.forEach((abcT) => {\n                  let currentFormat = obj.aTime.getAttribute(\"format\");\n                  let timeButtom_text = undefined;\n\n                  if (currentFormat === 'ISO') {\n                    timeButtom_text = abcT.dateisoFormatForLevel;\n                  } else {\n                    timeButtom_text = abcT.localDateTime;\n                  }\n                  propList.push({\n                    ...prop.animationPlot,\n                    wms_url: abcT.WMSURL.replace('https', 'http'),\n                    wms_layer: prop.source.params.LAYERS,\n                    wms_time: abcT.dateisoFormat,\n                    wms_style: prop.source.params.STYLES,\n                    wms_NUMCOLORBANDS: prop.source.NUMCOLORBANDS,\n                    ColorScale: prop.source.COLORSCALERANGE,\n                    bottom_text: timeButtom_text,\n                    RGB: prop.RGBComposite\n                  })\n                });\n\n                let collectProp = {layersDetail: propList, fps: fps}\n                let response = await this.PostCreateGIFMapImage(collectProp);\n                let DownLoadURL = Action.Base + '/' + Action.GetAnimationImage + \"?ImageName=\" + response.Image + \"&gif=1\";\n                this.AirPollutionWatchApp.forceDownload(DownLoadURL, prop.title + '.gif');\n                obj.setIsProcessing(false);\n\n              } else {\n\n                this.$notify({\n                  title: 'Warning',\n                  message: 'Please wait for few second animation is being gererated by the system',\n                  type: 'warning'\n                });\n\n              }\n            };\n            Newlayer = new TimeDimensionTile(timedimensionTilePara);\n\n            let AddRemoveLegendFunction = function () {\n              if (this.getProperties().visible) {\n                that.addLegend(this.getProperties().OLEXTLegendObject);\n              } else {\n                that.removeLegend(this.getProperties().OLEXTLegendObject);\n              }\n            };\n\n            let that = this;\n            Newlayer.on('change:visible', AddRemoveLegendFunction);\n\n            await Newlayer.init().then(() => {\n              this.mapObject.addThreddsLayer(Newlayer);\n              let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true, 'withOpacityChange');\n              // l5.setVisibleDivBind(kk.VisibleDivBind);\n              // l5.setVisible(false);\n              // l5.setVisible(true);\n              l5.setVisible(kk.threddLayerProp.visible);\n              let properties = Newlayer.getProperties()\n              if (properties.mask) {\n                console.log(properties)\n                if (properties.CropOrMask == 'crop') {\n                  Newlayer.setCrop(this.maskCoordinate);\n                } else {\n                  Newlayer.setMask(this.maskCoordinate);\n                }\n              }\n              this.appendTimeSeriesLayerCollection(l5);\n              // myApp.AllBindedLayersList.push(l5);\n            });\n          } else {\n            let timedimensionTilePara = kk.threddLayerProp;\n            let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&LAYERS=' + timedimensionTilePara.source.params.LAYERS + '&COLORSCALERANGE=' + timedimensionTilePara.source.params.COLORSCALERANGE + '&STYLES=' + timedimensionTilePara.source.params.STYLES;\n            let legendWMS = '';\n            if (!kk.legendPath) {\n              if (Array.isArray(wmsList)) {\n                legendWMS = wmsList[0] + LegendParameter;\n              } else {\n                legendWMS = wmsList + LegendParameter;\n              }\n            } else {\n              legendWMS = kk.legendPath\n            }\n            timedimensionTilePara.source.url = wmsList;\n            timedimensionTilePara.legendPath = legendWMS;\n            timedimensionTilePara.wmsList = wmsList;\n            timedimensionTilePara.changeWMSProxy = true;\n            // timedimensionTilePara.showAnimationButton = true;\n            // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n            let le = {\n              id: timedimensionTilePara.id,\n              title: timedimensionTilePara.title,\n              // typeGeom: 'MultiPolygon',\n              typeGeom: 'Point',\n              style: new Style({\n                image: new Icon({\n                  src: legendWMS,\n                  crossOrigin: 'anonymous', // Enable print\n                  // scale:[0.9,0.15]\n                })\n              }),\n              size: [60, 250]\n              // margin:3,\n              // className:'biglegend'\n            };\n\n            timedimensionTilePara.OLEXTLegendObject = le;\n\n            timedimensionTilePara.animationDownloadFunction = async (obj) => {\n              let isProcessing = obj.getIsProcessing();\n\n\n              if (!isProcessing) {\n                console.log(\"test\");\n                console.log(isProcessing);\n                obj.setIsProcessing(true);\n                let fps = obj.fpsInput.value;\n                let propList = [];\n                let prop = obj.getProperties();\n                console.log(prop);\n                obj.AllDateAndTimeList.forEach((abcT) => {\n                  let currentFormat = obj.aTime.getAttribute(\"format\");\n                  let timeButtom_text = undefined;\n\n                  if (currentFormat === 'ISO') {\n                    timeButtom_text = abcT.dateisoFormatForLevel;\n                  } else {\n                    timeButtom_text = abcT.localDateTime;\n                  }\n                  propList.push({\n                    ...prop.animationPlot,\n                    wms_url: abcT.WMSURL.replace('https', 'http'),\n                    wms_layer: prop.source.params.LAYERS,\n                    wms_time: abcT.dateisoFormat,\n                    wms_style: prop.source.params.STYLES,\n                    wms_NUMCOLORBANDS: prop.source.params.NUMCOLORBANDS,\n                    ColorScale: prop.source.params.COLORSCALERANGE,\n                    bottom_text: timeButtom_text,\n                    RGB: prop.RGBComposite\n                  })\n                });\n\n                let collectProp = {layersDetail: propList, fps: fps}\n                let response = await this.PostCreateGIFMapImage(collectProp);\n                let DownLoadURL = Action.Base + '/' + Action.GetAnimationImage + \"?ImageName=\" + response.Image + \"&gif=1\";\n                this.AirPollutionWatchApp.forceDownload(DownLoadURL, prop.title + '.gif');\n                obj.setIsProcessing(false);\n\n              } else {\n\n                this.$notify({\n                  title: 'Warning',\n                  message: 'Please wait for few second animation is being gererated by the system',\n                  type: 'warning'\n                });\n\n              }\n            };\n\n            Newlayer = new TimeDimensionTile(timedimensionTilePara);\n            let AddRemoveLegendFunction = function () {\n              if (this.getProperties().visible) {\n                that.addLegend(this.getProperties().OLEXTLegendObject);\n              } else {\n                that.removeLegend(this.getProperties().OLEXTLegendObject);\n              }\n            };\n\n            let that = this;\n            Newlayer.on('change:visible', AddRemoveLegendFunction);\n            await Newlayer.init().then(() => {\n              this.mapObject.addThreddsLayer(Newlayer);\n              // myApp.map.addThreddsLayer(val);\n              let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true);\n              l5.setVisibleDivBind(kk.VisibleDivBind);\n              l5.setVisible(false);\n              l5.setVisible(kk.threddLayerProp.visible);\n              let properties = Newlayer.getProperties()\n              if (properties.mask) {\n                if (properties.CropOrMask == 'crop') {\n                  Newlayer.setCrop(this.maskCoordinate);\n                } else {\n                  Newlayer.setMask(this.maskCoordinate);\n                }\n              }\n              this.appendTimeSeriesLayerCollection(l5);\n              // myApp.AllBindedLayersList.push(l5);\n            });\n\n          }\n        }\n      }\n\n    },\n\n  },\n  computed: {\n    ...mapState([\"TimeSeriesLayerCollection\", \"PrintMapComponentData\", \"mapControlVariable\"]),\n    // getInventory() {\n    //   return dataSelect.Inventory;\n    // },\n  },\n\n  beforeMount() {\n  },\n  mounted() {\n    console.log(this.mapControlVariable);\n    this.mapInitilization();\n    // this.addGeoCoding();\n    this.addGeoCodingAndInteractionBar();\n    // this.addPrintMapFunctionality();\n\n    this.olextPrintFunction();\n\n    this.addRasterLayerToMap(this.AirPollutionWatchApp.TrueColorImage);\n    this.addRasterLayerToMap(this.AirPollutionWatchApp.AMIRGBProduct[0]);\n    this.addRasterLayerToMap(this.AirPollutionWatchApp.AMIRGBProduct[1]);\n    this.addRasterLayerToMap(this.AirPollutionWatchApp.AMIRGBProduct[2]);\n    this.addRasterLayerToMap(this.AirPollutionWatchApp.AMIRGBProduct[3]);\n    this.addRasterLayerToMap(this.AirPollutionWatchApp.AMIRGBProduct[4]);\n  },\n}\n</script>\n\n<style>\n#map-container2 {\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n}\n\n#map-container2 .ol-viewport {\n  border-radius: 5px;\n}\n\n#layerSwitcherDiv {\n  right: 0.5em;\n  top: 0.5em;\n  position: absolute;\n}\n\n#layerSwitcherDiv button {\n  line-height: unset;\n  border-radius: 1px;\n}\n\n\n.drawerForLayersList {\n  position: initial !important;\n}\n\n/* OSM Based Geocoding*/\n.ol-search ul li {\n  border-bottom: 1px solid lightgray;\n\n  padding: 10px 5px 10px 5px !important;\n  flex: 1;\n  max-width: 608px;\n  white-space: normal !important;\n  overflow: unset;\n  flex-grow: 1;\n  text-overflow: ellipsis;\n}\n\n.ol-search ul li:last-child {\n  border-bottom: none;\n  border-radius: 0px;\n}\n\n.ol-search ul {\n  list-style: none;\n  cursor: pointer;\n  padding: 0px 5px 0px 5px !important;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  clear: both;\n  cursor: pointer;\n  max-width: 618px;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #fff;\n  font-size: 13px;\n}\n\n.ol-search {\n  z-index: 999;\n}\n\n.ol-search {\n  top: 4.1em;\n  left: 0.5em;\n  /*width: 500px;*/\n}\n\n.ol-search input {\n  width: 600px;\n}\n\n\n.ol-control.ol-bar {\n  left: 3.2em;\n  top: 6em;\n}\n\n.ol-control.ol-bar.ol-top.ol-left, .ol-control.ol-bar.ol-top.ol-right {\n  top: 6.5em;\n  transform: none;\n}\n\n.PrintMap.ol-button.ol-unselectable.ol-control {\n  top: 12em;\n  left: 0.5em;\n}\n\n.LayerDiv {\n  margin-top: 10px;\n}\n\n.withOpacityChange {\n  margin-bottom: 18px;\n}\n\n.ol-scale-line {\n  right: 0;\n  left: auto;\n  bottom: 2em;\n}\n</style>","import {DefaultMaskWMS, TethysAPIAppName} from \"../config\";\nimport {Action} from \"../store/actionType\";\nimport {getURLParameters} from './helpers';\n\nvar myApp = {};\n// First need to initilize\nvar filterCoodrdinate = {};\n\n\nmyApp.endDate = new Date();\nmyApp.endDate.setDate(myApp.endDate.getDate() - 1);\n\nmyApp.startDate = new Date();\nmyApp.startDate.setDate(myApp.endDate.getDate() - 7);\n\n// myApp.startDate = new Date();\n// myApp.startDate.setDate(myApp.endDate.getDate() - 1);\n\n\nlet archiveDate = getURLParameters()['date'];\nif (archiveDate) {\n    if (archiveDate.length == 8) {\n        let checkInt = parseInt(archiveDate);\n        if (checkInt) {\n            // Number with valid\n            let YYYY = parseInt(archiveDate.slice(0, 4));\n            let MM_index = parseInt(archiveDate.slice(4, 6)) - 1;\n            let DD = parseInt(archiveDate.slice(6, 8));\n            let dObject = new Date(YYYY, MM_index, DD);\n            myApp.endDate = dObject;\n            let bd = getURLParameters()['bd'];\n            let copiedDate = new Date(myApp.endDate);\n            if (bd) {\n                //    do something\n                let checkInt = parseInt(bd);\n                if (checkInt) {\n                    if (checkInt <= 20) {\n                        myApp.startDate.setDate(myApp.endDate.getDate() - checkInt);\n                    } else {\n                        myApp.startDate = copiedDate.setDate(copiedDate.getDate() - 7);\n                    }\n                } else {\n                    myApp.startDate = copiedDate.setDate(copiedDate.getDate() - 7);\n\n                }\n            } else {\n                // myApp.startDate.setDate(myApp.endDate.getDate() - 7);\n                myApp.startDate = copiedDate.setDate(copiedDate.getDate() - 7);\n            }\n\n        }\n    }\n}\n\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\n\n\nmyApp.APICollection = {\n    layerData: {\n        Aeronet: '/apps/' + TethysAPIAppName + '/aeronetaodpm/',\n        USEmbassyAOD: '/apps/' + TethysAPIAppName + '/usembassypm/',\n        getGeoJSONofStations: '/apps/' + TethysAPIAppName + '/getGeoJSONofStations/',\n        getGeoJsonForOneSatation: '/apps/' + TethysAPIAppName + '/getGeoJsonForOneSatation/',\n        getAllStationsID: '/apps/' + TethysAPIAppName + '/getAllStationsID/',\n    },\n    api: {\n        commonAPI: '/apps/' + TethysAPIAppName + '/getData/',\n        RegionGeojson: '/apps/' + TethysAPIAppName + '/geojsonregion/',\n        AOIPolygon: '/apps/' + TethysAPIAppName + '/aoipolygon/',\n        GetMapImage: '/apps/' + TethysAPIAppName + '/getmapimage/',\n        GetImage: '/apps/' + TethysAPIAppName + '/downloadImage/',\n        SlicedFromCatalog: '/apps/' + TethysAPIAppName + '/slicedfromcatalog/'\n    }\n};\n\n\nmyApp.constants = {\n    RGBProducts: {\n        layerId: {\n            TerraModisTrueColor: 'RGBProducts__TerraModisTrueColor',\n            dlcRGB: 'dlcRGB__gk2a_ami',\n            dustRGB: 'dustRGB__gk2a_ami',\n            fireRGB: 'fireRGB__gk2a_ami',\n            ntmicroRGB: 'ntmicroRGB__gk2a_ami',\n            truecolorRGB: 'truecolorRGB__gk2a_ami',\n        }\n    },\n};\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\nmyApp.AllBindedLayersList = [];\nmyApp.OnlyOnce = true;\n\nmyApp.getLayer = function (id) {\n    // console.log(id)\n    var layer;\n    for (let i = 0; i < myApp.AllBindedLayersList.length; i++) {\n        // console.log(myApp.AllBindedLayersList[i].getProperties().id);\n        if (id == myApp.AllBindedLayersList[i].getProperties().id) { ///popDensityLayer.getProperties().id\n            layer = myApp.AllBindedLayersList[i].getLayer();\n            break;\n        }\n    }\n    return layer;\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\nlet SLDRGB = `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"\n                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"\n                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:resc=\"http://www.resc.reading.ac.uk\">\n    <NamedLayer>\n     <se:Name>red</se:Name>\n        <UserStyle>\n            <se:Name>Thesholded colour scheme</se:Name>\n            <se:CoverageStyle>\n                <se:Rule>\n                    <resc:RasterRGBSymbolizer>\n                        <se:Opacity>1.0</se:Opacity>\n                        <se:ColorMap>\n                            <resc:RedBand>\n                                <resc:BandName>red</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:RedBand>\n                            <resc:GreenBand>\n                                <resc:BandName>green</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:GreenBand>\n                            <resc:BlueBand>\n                                <resc:BandName>blue</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>1</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                    <resc:Spacing>linear</resc:Spacing>\n                                </resc:Range>\n                            </resc:BlueBand>\n                        </se:ColorMap>\n                    </resc:RasterRGBSymbolizer>\n                </se:Rule>\n            </se:CoverageStyle>\n        </UserStyle>\n    </NamedLayer>\n</StyledLayerDescriptor>\n`;\n\nmyApp.TrueColorImage = {\n    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/TerraMODIS-TrueColor1km/catalog.xml',\n    useSLD: true,\n    ends_with: '.nc',\n    isTimeDimensionLayer: true,\n    SLD: SLDRGB,\n    getStartDate: function () {\n        return myApp.formatDate(myApp.startDate)\n    },\n    getEndDate: function () {\n        return myApp.formatDate(myApp.endDate)\n    },\n    VisibleDivBind: true,\n    threddLayerProp: {\n        id: myApp.constants.RGBProducts.layerId.TerraModisTrueColor,\n        title: 'TerraModis-TrueColor',\n        visible: false,\n        opacity: 0.5,\n        legendPath: Action.Base + '/' + Action.trueColorLegendImage,\n        ThreddsDataServerVersion: 5,\n        serverType: 'TDS',\n        timeSeries: false,\n        alignTimeSlider: 'right',\n        timeSliderSize: 'small',\n        showlegend: false,\n        showControlPanel: true,\n        zIndex: 10,\n        filterCoodrdinate: filterCoodrdinate,\n        RGBComposite: true,\n        showAnimationButton: true,\n        animationPlot: {title_text: 'TERRA/MODIS Color Image', bbox: [60, 15, 100, 38], resolution: 400},\n        source: {\n            url: [],\n            params: {\n                'LAYERS': 'red',\n                'transparent': true\n            }\n        },\n        mask: DefaultMaskWMS,\n        CropOrMask: 'crop',\n        changeWMSProxy: true,\n    }\n};\n\nmyApp.AMIRGBProduct = [\n    {\n        catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/RGBAMI/dlcRGB/catalog.xml',\n        useSLD: true,\n        ends_with: '.ncml',\n        isTimeDimensionLayer: true,\n        SLD: SLDRGB,\n        getStartDate: function () {\n            return myApp.formatDate(myApp.startDate)\n        },\n        getEndDate: function () {\n            return myApp.formatDate(myApp.endDate)\n        },\n        VisibleDivBind: true,\n        threddLayerProp: {\n            id: myApp.constants.RGBProducts.layerId.dlcRGB,\n            title: 'GK2A AMI Day Land Cloud RGB',\n            visible: false,\n            opacity: 0.5,\n            legendPath: Action.Base + '/' + Action.trueColorLegendImage,\n            ThreddsDataServerVersion: 5,\n            serverType: 'TDS',\n            timeSeries: false,\n            alignTimeSlider: 'right',\n            timeSliderSize: 'small',\n            showlegend: false,\n            showControlPanel: true,\n            zIndex: 10,\n            filterCoodrdinate: filterCoodrdinate,\n            RGBComposite: true,\n            showAnimationButton: true,\n            animationPlot: {title_text: 'GK2A AMI Day Land Cloud RGB', bbox: [60, 15, 100, 38], resolution: 400},\n            source: {\n                url: [],\n                params: {\n                    'LAYERS': 'red',\n                    'transparent': true\n                }\n            },\n            mask: DefaultMaskWMS,\n            CropOrMask: 'crop',\n            changeWMSProxy: true,\n        }\n    },\n    {\n        catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/RGBAMI/dustRGB/catalog.xml',\n        useSLD: true,\n        ends_with: '.ncml',\n        isTimeDimensionLayer: true,\n        SLD: SLDRGB,\n        getStartDate: function () {\n            return myApp.formatDate(myApp.startDate)\n        },\n        getEndDate: function () {\n            return myApp.formatDate(myApp.endDate)\n        },\n        VisibleDivBind: true,\n        threddLayerProp: {\n            id: myApp.constants.RGBProducts.layerId.dustRGB,\n            title: 'GK2A AMI Dust RGB',\n            visible: true,\n            opacity: 0.5,\n            legendPath: Action.Base + '/' + Action.legendAMIDustRGB,\n            ThreddsDataServerVersion: 5,\n            serverType: 'TDS',\n            timeSeries: false,\n            alignTimeSlider: 'right',\n            timeSliderSize: 'small',\n            showlegend: false,\n            showControlPanel: true,\n            zIndex: 10,\n            filterCoodrdinate: filterCoodrdinate,\n            RGBComposite: true,\n            showAnimationButton: true,\n            animationPlot: {title_text: 'GK2A AMI Dust RGB', bbox: [60, 15, 100, 38], resolution: 400},\n            source: {\n                url: [],\n                params: {\n                    'LAYERS': 'red',\n                    'transparent': true\n                }\n            },\n            mask: DefaultMaskWMS,\n            CropOrMask: 'crop',\n            changeWMSProxy: true,\n        }\n    },\n    {\n        catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/RGBAMI/fireRGB/catalog.xml',\n        useSLD: true,\n        ends_with: '.ncml',\n        isTimeDimensionLayer: true,\n        SLD: SLDRGB,\n        getStartDate: function () {\n            return myApp.formatDate(myApp.startDate)\n        },\n        getEndDate: function () {\n            return myApp.formatDate(myApp.endDate)\n        },\n        VisibleDivBind: true,\n        threddLayerProp: {\n            id: myApp.constants.RGBProducts.layerId.fireRGB,\n            title: 'GK2A AMI Natural Color Fire RGB',\n            visible: false,\n            opacity: 0.5,\n            legendPath: Action.Base + '/' + Action.trueColorLegendImage,\n            ThreddsDataServerVersion: 5,\n            serverType: 'TDS',\n            timeSeries: false,\n            alignTimeSlider: 'right',\n            timeSliderSize: 'small',\n            showlegend: false,\n            showControlPanel: true,\n            zIndex: 10,\n            filterCoodrdinate: filterCoodrdinate,\n            RGBComposite: true,\n            showAnimationButton: true,\n            animationPlot: {title_text: 'GK2A AMI Natural Color Fire RGB', bbox: [60, 15, 100, 38], resolution: 400},\n            source: {\n                url: [],\n                params: {\n                    'LAYERS': 'red',\n                    'transparent': true\n                }\n            },\n            mask: DefaultMaskWMS,\n            CropOrMask: 'crop',\n            changeWMSProxy: true,\n        }\n    },\n    {\n        catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/RGBAMI/ntmicroRGB/catalog.xml',\n        useSLD: true,\n        ends_with: '.ncml',\n        isTimeDimensionLayer: true,\n        SLD: SLDRGB,\n        getStartDate: function () {\n            return myApp.formatDate(myApp.startDate)\n        },\n        getEndDate: function () {\n            return myApp.formatDate(myApp.endDate)\n        },\n        VisibleDivBind: true,\n        threddLayerProp: {\n            id: myApp.constants.RGBProducts.layerId.ntmicroRGB,\n            title: 'GK2A AMI Nighttime Microphysics RGB',\n            visible: false,\n            opacity: 0.5,\n            legendPath: Action.Base + '/' + Action.trueColorLegendImage,\n            ThreddsDataServerVersion: 5,\n            serverType: 'TDS',\n            timeSeries: false,\n            alignTimeSlider: 'right',\n            timeSliderSize: 'small',\n            showlegend: false,\n            showControlPanel: true,\n            zIndex: 10,\n            filterCoodrdinate: filterCoodrdinate,\n            RGBComposite: true,\n            showAnimationButton: true,\n            animationPlot: {title_text: 'GK2A AMI Nighttime Microphysics RGB', bbox: [60, 15, 100, 38], resolution: 400},\n            source: {\n                url: [],\n                params: {\n                    'LAYERS': 'red',\n                    'transparent': true\n                }\n            },\n            mask: DefaultMaskWMS,\n            CropOrMask: 'crop',\n            changeWMSProxy: true,\n        }\n    },\n    {\n        catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/RGBAMI/truecolorRGB/catalog.xml',\n        useSLD: true,\n        ends_with: '.ncml',\n        isTimeDimensionLayer: true,\n        SLD: SLDRGB,\n        getStartDate: function () {\n            return myApp.formatDate(myApp.startDate)\n        },\n        getEndDate: function () {\n            return myApp.formatDate(myApp.endDate)\n        },\n        VisibleDivBind: true,\n        threddLayerProp: {\n            id: myApp.constants.RGBProducts.layerId.truecolorRGB,\n            title: 'GK2A AMI Truecolor RGB',\n            visible: false,\n            opacity: 0.5,\n            legendPath: Action.Base + '/' + Action.trueColorLegendImage,\n            ThreddsDataServerVersion: 5,\n            serverType: 'TDS',\n            timeSeries: false,\n            alignTimeSlider: 'right',\n            timeSliderSize: 'small',\n            showlegend: false,\n            showControlPanel: true,\n            zIndex: 10,\n            filterCoodrdinate: filterCoodrdinate,\n            RGBComposite: true,\n            showAnimationButton: true,\n            animationPlot: {title_text: 'GK2A AMI Truecolor RGB', bbox: [60, 15, 100, 38], resolution: 400},\n            source: {\n                url: [],\n                params: {\n                    'LAYERS': 'red',\n                    'transparent': true\n                }\n            },\n            mask: DefaultMaskWMS,\n            CropOrMask: 'crop',\n            changeWMSProxy: true,\n        }\n    },]\n\n\nmyApp.DefaultSations = {\n    aeronetAOD: [2, 5, 3, 6],\n    pm2p5Embassy: [6, 7, 6, 7],\n    o3Embassy: [6, 7, 6, 7],\n    NepalStation: [57, 11, 15, 71]\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\n\n\nmyApp.makeRequest = function (method, url) {\n    return new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(method, url);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                resolve(xhr.response);\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n};\n\n\nmyApp.forceDownload = function (url, fileName) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        var urlCreator = window.URL || window.webkitURL;\n        var imageUrl = urlCreator.createObjectURL(this.response);\n        var tag = document.createElement('a');\n        tag.href = imageUrl;\n        tag.download = fileName;\n        document.body.appendChild(tag);\n        tag.click();\n        document.body.removeChild(tag);\n    }\n    xhr.send();\n}\n\n// myApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor) {\n//     let data = {\n//             chart: {\n//                 marginLeft: 65,\n//                 /* marginRight: 0, */\n//                 /* spacingLeft: 0, */\n//                 /* spacingRight: 0 */\n//                 backgroundColor: 'transparent',\n//                 plotBorderColor: '#afafaf',\n//                 plotBorderWidth: 1,\n//             },\n//             title: {\n//                 text: title,\n//                 fontSize: '10px',\n//                 useHTML: true\n//             },\n//             subtitle: {\n//                 text: subTitle,\n//                 fontSize: '8px'\n//             },\n//             series: [{\n//                 name: SeriesName,\n//                 data: SeriesData,\n//                 // marker: {\n//                 //     enabled: true,\n//                 //     symbol: 'diamond',\n//                 //     radius: 3\n//                 // },\n//             }],\n//             xAxis: {\n//                 type: 'datetime',\n//                 title: {\n//                     text: XaxisLabel,\n//                     align: 'high',\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0\n//             },\n//             yAxis: {\n//                 title: {\n//                     text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                     useHTML: true,\n//                     rotation: 0,\n//                     // align: 'high',\n//                     offset: 0,\n//                     x: -50\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0,\n//                 gridLineWidth: 0\n//             },\n//             legend: {\n//                 enabled: false\n//             },\n//             credits: {\n//                 enabled: false\n//             },\n//             plotOptions: {\n//                 series: {\n//                     color: plotColor\n//                 }\n//             },\n//             exporting: {\n//                 buttons: {\n//                     contextButton: {\n//                         menuItems: [\"printChart\",\n//                             \"separator\",\n//                             \"downloadPNG\",\n//                             \"downloadJPEG\",\n//                             \"downloadPDF\",\n//                             \"downloadSVG\",\n//                             \"separator\",\n//                             \"downloadCSV\",\n//                             \"downloadXLS\",\n//                             //\"viewData\",\n//                             \"openInCloud\"]\n//                     }\n//                 },\n//                 // chartOptions: {\n//                 //     title: {\n//                 //         text: title,\n//                 //         fontSize: '10px',\n//                 //         useHTML: true\n//                 //     }, yAxis: {\n//                 //         title: {\n//                 //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                 //             useHTML: true,\n//                 //             rotation: 250\n//                 //         }\n//                 //     },\n//                 // },\n//                 allowHTML: true,\n//                 // fallbackToExportServer: false,\n//                 // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n//             }\n//         }\n//     ;\n//     console.log(JSON.stringify(data));\n//     return data\n// };\n\n\nexport var AirPollutionWatchApp = myApp;","import { render } from \"./mapComponentRGBProduct.vue?vue&type=template&id=0ec5f3e4\"\nimport script from \"./mapComponentRGBProduct.vue?vue&type=script&lang=js\"\nexport * from \"./mapComponentRGBProduct.vue?vue&type=script&lang=js\"\n\nimport \"./mapComponentRGBProduct.vue?vue&type=style&index=0&id=0ec5f3e4&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TabBodyRGBProducts.vue?vue&type=template&id=295dfa90&scoped=true\"\nimport script from \"./TabBodyRGBProducts.vue?vue&type=script&lang=js\"\nexport * from \"./TabBodyRGBProducts.vue?vue&type=script&lang=js\"\n\nimport \"./TabBodyRGBProducts.vue?vue&type=style&index=0&id=295dfa90&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-295dfa90\"]])\n\nexport default __exports__","import { render } from \"./Tabs.vue?vue&type=template&id=9d585a44\"\nimport script from \"./Tabs.vue?vue&type=script&lang=js\"\nexport * from \"./Tabs.vue?vue&type=script&lang=js\"\n\nimport \"./Tabs.vue?vue&type=style&index=0&id=9d585a44&lang=scss\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"all-conts\">\n    <el-container class=\"cont-outer\">\n      <el-header>\n        <NavBar></NavBar>\n      </el-header>\n      <el-container class=\"sidebar-main\">\n        <Tabs :activeTab=\"currentTab\"></Tabs>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport {ReDirectToSmogAppDotCom, reDirectHTTPSToHTTP} from '../utils/ReDirect'\nimport NavBar from \"../components/common/NavBar\";\nimport Tabs from \"../components/common/Tabs\";\n\n// import emissionTabBody from \"../components/emissionTabBody\";\n// https://codepen.io/suman111/pen/ExmdwxP?editors=0010\n\nexport default {\n  name: \"current\",\n\n  components: {\n    NavBar,\n    Tabs,\n  },\n  data() {\n    return {\n      selectedTab: 'Archive',\n    };\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  },\n  methods: {\n    getCurrentTab() {\n      return this.selectedTab;\n    }\n  },\n  beforeCreate() {\n    ReDirectToSmogAppDotCom();\n    reDirectHTTPSToHTTP();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../utils/main\";\n\n\n</style>\n","import { render } from \"./airqualitynpArchive.vue?vue&type=template&id=72c4b752\"\nimport script from \"./airqualitynpArchive.vue?vue&type=script&lang=js\"\nexport * from \"./airqualitynpArchive.vue?vue&type=script&lang=js\"\n\nimport \"./airqualitynpArchive.vue?vue&type=style&index=0&id=72c4b752&lang=scss\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createStore} from \"vuex\";\nimport {\n    getCityData,\n    PostSlicedFromCatalog,\n    getGeoJsonForOneSatation,\n    PostGetStationData,\n    PostGet2DImage, TimeSeriesRasterQuery, getDefaultGroundObservation, CreateGIFMapImage\n} from \"../api/airquality\";\n\nexport default createStore({\n    state() {\n        return {\n            CascaderInventriesComparison: [],\n            CascaderSectorContribution: [],\n            CascaderSectorShare: [],\n            CascaderTimeSeries: [],\n            SelectedLayerObj: null,\n\n            selectInteraction: null,\n            mapObject: null,\n            TimeSeriesLayerCollection: [],\n            WorkingVectorLayer: null,\n            mapControlVariable: {\n                //for printing Legend Object\n                LegendObject: null,\n                LegendItemList: [],\n\n                data_period: 'Archive',\n                select_by: 'Parameter',\n\n                // Location parameter\n                location_by: 'default_locations',\n                default_location: '',\n                is_AOI_Feature_selected: false,\n                location_by_wktValue: '',\n                location_by_geometryType: '',\n                location_by_default_level_value: '',\n\n                location_by_pollutant_value1: [],\n                location_by_pollutant_value2: [],\n                location_by_pollutant_value3: [],\n                location_by_pollutant_value4: [],\n\n                //parameter parameter\n                radioValue: 1,\n                parameter_by_pollutant_value: [],\n                is_parameter_by_pollutant_value_stationData: true,\n\n                parameter_by_pollutant_value_stationData_val1: '',\n                parameter_by_pollutant_value_stationData_val2: '',\n                parameter_by_pollutant_value_stationData_val3: '',\n                parameter_by_pollutant_value_stationData_val4: '',\n\n                parameter_by_location__1: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n\n                parameter_by_location__2: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n\n                parameter_by_location__3: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n\n                parameter_by_location__4: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n\n            },\n\n            PrintMapComponentData: {\n                PrintMapDialogVisible: false\n            }\n        };\n    },\n    mutations: {\n        setCascaderInventriesComparison(state, payload) {\n            state.CascaderInventriesComparison = payload;\n        }, setCascaderSectorContribution(state, payload) {\n            state.CascaderSectorContribution = payload;\n        }, setCascaderSectorShare(state, payload) {\n            state.CascaderSectorShare = payload;\n        }, setCascaderTimeSeries(state, payload) {\n            state.CascaderTimeSeries = payload;\n        }, setSelectedLayerObj(state, payload) {\n            state.SelectedLayerObj = payload;\n        }, setSelectInteraction(state, payload) {\n            state.selectInteraction = payload;\n        }, setMapObject(state, payload) {\n            state.mapObject = payload;\n        }, setWorkingVectorLayer(state, payload) {\n            state.WorkingVectorLayer = payload;\n        },\n        appendTimeSeriesLayerCollection(state, payload) {\n            state.TimeSeriesLayerCollection.push(payload);\n        },\n\n        removeLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent('remove',payload);\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'remove',target:payload});\n\n            // state.mapControlVariable.LegendObject.removeItem(payload);\n            state.mapControlVariable.LegendObject.getItems().remove(payload);\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendObject.refresh();\n\n\n            let index = false;\n            state.mapControlVariable.LegendItemList.forEach(function (it, idx) {\n                if (it.id == payload.id) {\n                    index = idx;\n                }\n            });\n            if (index !== false) {\n                state.mapControlVariable.LegendItemList.splice(index, 1);\n            }\n\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendItemList.forEach((it) => {\n                state.mapControlVariable.LegendObject.addItem(it);\n            });\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n        addLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'add',target:payload});\n            state.mapControlVariable.LegendItemList.push(payload);\n            state.mapControlVariable.LegendObject.addItem(payload);\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n    },\n    actions: {\n        // async getCascaderOptions(context) {\n        //     let data = await getCascaderOptions();\n        //     context.commit(\"setCascaderInventriesComparison\", data.InventriesComparison)\n        //     context.commit(\"setCascaderSectorContribution\", data.SectorContribution)\n        //     context.commit(\"setCascaderSectorShare\", data.SectorShare)\n        //     context.commit(\"setCascaderTimeSeries\", data.TimeSeries)\n        //     return data\n        // },\n        // async PostChartDataProcess(context, param) {\n        //     let data = await PostChartDataProcess(param);\n        //     return data;\n        // },\n        // async GetLayerStatInfo(context, param) {\n        //     let data = await GETLayerInfoStat(param);\n        //     return data;\n        // },\n        async getCityData(context, param) {\n            let data = await getCityData(param);\n            return data;\n        },\n        async getGeoJsonForOneSatation(context, stringParam) {\n            let data = await getGeoJsonForOneSatation(stringParam);\n            return data;\n        },\n        async PostSlicedFromCatalog(context, param) {\n            let data = await PostSlicedFromCatalog(param);\n            return data;\n        },\n        async PostGetStationData(context, param) {\n            let data = await PostGetStationData(param);\n            return data;\n        },\n        async TimeSeriesRasterQuery(context, param) {\n            let data = await TimeSeriesRasterQuery(param);\n            return data;\n        },        async PostCreateGIFMapImage(context, param) {\n            let data = await CreateGIFMapImage(param);\n            return data;\n        },\n        async PostGet2DImage(context, param) {\n            let data = await PostGet2DImage(param);\n            return data;\n        },\n        async getDefaultGroundObservation(context, param) {\n            let data = await getDefaultGroundObservation(param);\n            return data;\n        },\n    },\n    getters: {\n        getLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                // console.log(TimeSeriesLayerCollection[i].getProperties().id);\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i].getLayer();\n                    break;\n                }\n            }\n            return layer;\n        }, getBindedLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i];\n                    break;\n                }\n            }\n            return layer;\n        }\n    },\n    modules: {},\n});","import { createApp } from \"vue\";\nimport emission from \"./views/airqualitynpArchive.vue\";\nimport store from \"./store/modules/airqualityArchive\";\nimport ElementPlus from 'element-plus';\nimport 'element-plus/theme-chalk/index.css';\nimport 'ol-ext/dist/ol-ext.css';\n\n// fontawesome\n\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport {faHandPointer,faTimes,faMapMarkerAlt,faDrawPolygon,faPrint,faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faHandPointer);\nlibrary.add(faTimes);\nlibrary.add(faMapMarkerAlt);\nlibrary.add(faDrawPolygon);\nlibrary.add(faPrint);\nlibrary.add(faInfoCircle);\n\n\nconst app = createApp(emission);\napp.component(\"font-awesome-icon\", FontAwesomeIcon);\napp.use(store);\napp.use(ElementPlus);\napp.mount('#app');","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapComponentRecent.vue?vue&type=style&index=0&id=716e5eaf&lang=css\"","module.exports = __webpack_public_path__ + \"static/airquality/images/old.svg\";","export function ReDirectToSmogAppDotCom() {\n    if (window.location.host == 'smog.spatialapps.net') {\n        var RDirect = document.createElement('a');\n        RDirect.href = 'http://smog.icimod.org' + window.location.pathname;\n        RDirect.click();\n    }\n}\n\n\n\nexport function reDirectHTTPSToHTTP() {\n    if (window.location.href.slice(0, 5) == 'https') {\n        // var RDirect = document.createElement('a');\n        // RDirect.href = document.location.href.slice(0,4) + document.location.href.slice(5)\n        // RDirect.click();\n        console.log(\"Https\");\n    }\n}\n\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapControlsSocioEconomic.vue?vue&type=style&index=0&id=4e6f3200&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"static/airquality/images/markers_default.png\";","<template>\n  <div class=\"all-conts\">\n    <el-container class=\"cont-outer\">\n      <el-header>\n        <NavBar></NavBar>\n      </el-header>\n      <el-container class=\"sidebar-main\">\n        <Tabs :activeTab=\"currentTab\"></Tabs>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\n\nimport NavBar from \"../components/common/NavBar\";\nimport Tabs from \"../components/common/Tabs\";\nimport {ReDirectToSmogAppDotCom, reDirectHTTPSToHTTP} from \"../utils/ReDirect\";\n\n// https://codepen.io/suman111/pen/ExmdwxP?editors=0010\n\nexport default {\n  name: \"SocioEconomic\",\n  components: {\n    NavBar,\n    Tabs,\n  },\n  data() {\n    return {\n      selectedTab: 'SocioEconomic',\n    };\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  },\n  methods: {\n    getCurrentTab() {\n      return this.selectedTab;\n    }\n  },\n  beforeCreate() {\n    ReDirectToSmogAppDotCom();\n    reDirectHTTPSToHTTP();\n  }\n};\n\n</script>\n\n<style lang=\"scss\">\n@import \"../utils/main\";\n\n</style>","import { render } from \"./SocioEconomic.vue?vue&type=template&id=25ef2b01\"\nimport script from \"./SocioEconomic.vue?vue&type=script&lang=js\"\nexport * from \"./SocioEconomic.vue?vue&type=script&lang=js\"\n\nimport \"./SocioEconomic.vue?vue&type=style&index=0&id=25ef2b01&lang=scss\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createStore} from \"vuex\";\nimport {\n    getCascaderOptions,\n    GETCountryGeojson,\n    GETLayerInfoStat,\n    PostChartDataProcessSocioEconomic, PostPopulationSummary\n} from \"../api/SocioEconomic\";\n\nexport default createStore({\n    state() {\n        return {\n            SocioEconomicObject: {\n                socioEconomicType: 'Demographic',\n                PopulationType: 'TotalPopulation',\n                popYear: '2020',\n                ShowAnimationPanel: false,\n            },\n            mapObject: null,\n            TimeSeriesLayerCollection: [],\n            WorkingVectorLayer: null,\n            // selectInteraction: null,\n            selectInteractionObj: null,\n            vectorLayerSource: null,\n            mapControlVariable: {\n                //for printing Legend Object\n                LegendObject: null,\n                LegendItemList: [],\n            },\n            PrintMapComponentData: {\n                PrintMapDialogVisible: false\n            }\n        };\n    },\n    mutations: {\n        setCascaderInventriesComparison(state, payload) {\n            state.CascaderInventriesComparison = payload;\n        }, setCascaderSectorContribution(state, payload) {\n            state.CascaderSectorContribution = payload;\n        }, setCascaderSectorShare(state, payload) {\n            state.CascaderSectorShare = payload;\n        }, setCascaderTimeSeries(state, payload) {\n            state.CascaderTimeSeries = payload;\n        }, setSelectedLayerObj(state, payload) {\n            state.SelectedLayerObj = payload;\n        },\n        // setSelectInteraction(state, payload) {\n        //     state.selectInteraction = payload;\n        // },\n        setMapObject(state, payload) {\n            state.mapObject = payload;\n        }, setWorkingVectorLayer(state, payload) {\n            state.WorkingVectorLayer = payload;\n        }, appendTimeSeriesLayerCollection(state, payload) {\n            state.TimeSeriesLayerCollection.push(payload);\n        }, setVectorLayerSource(state, payload) {\n            state.vectorLayerSource = payload;\n        }, setSelectInteractionObj(state, payload) {\n            state.selectInteractionObj = payload;\n        },\n        removeLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent('remove',payload);\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'remove',target:payload});\n\n            // state.mapControlVariable.LegendObject.removeItem(payload);\n            state.mapControlVariable.LegendObject.getItems().remove(payload);\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendObject.refresh();\n\n\n            let index = false;\n            state.mapControlVariable.LegendItemList.forEach(function (it, idx) {\n                if (it.id == payload.id) {\n                    index = idx;\n                }\n            });\n            if (index !== false) {\n                state.mapControlVariable.LegendItemList.splice(index, 1);\n            }\n\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendItemList.forEach((it) => {\n                state.mapControlVariable.LegendObject.addItem(it);\n            });\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n        addLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'add',target:payload});\n            state.mapControlVariable.LegendItemList.push(payload);\n            state.mapControlVariable.LegendObject.addItem(payload);\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n    },\n    actions: {\n        async getCascaderOptions(context) {\n            let data = await getCascaderOptions();\n            context.commit(\"setCascaderInventriesComparison\", data.InventriesComparison);\n            context.commit(\"setCascaderSectorContribution\", data.SectorContribution);\n            context.commit(\"setCascaderSectorShare\", data.SectorShare);\n            context.commit(\"setCascaderTimeSeries\", data.TimeSeries);\n            return data\n        },\n        async PostChartDataProcessSocioEconomic(context, param) {\n            let data = await PostChartDataProcessSocioEconomic(param);\n            return data;\n        }, async PostPopulationSummary(context, param) {\n            let data = await PostPopulationSummary(param);\n            return data;\n        },\n        async GetLayerStatInfo(context, param) {\n            let data = await GETLayerInfoStat(param);\n            return data;\n        },\n        async GETCountryGeojson() {\n            let data = await GETCountryGeojson();\n            return data;\n        },\n    },\n    getters: {\n        getBindedLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i];\n                } else {\n                    state.TimeSeriesLayerCollection[i].setVisibleDivBind(false);\n                }\n            }\n            return layer;\n        },\n    },\n    modules: {},\n});","import { createApp } from \"vue\";\nimport SocioEconomic from \"./views/SocioEconomic\";\nimport store from \"./store/modules/SocioEconomic\";\nimport ElementPlus from 'element-plus';\nimport 'element-plus/theme-chalk/index.css';\n\n\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nimport {faHandPointer,faTimes,faMapMarkerAlt,faDrawPolygon,faPrint,faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faHandPointer);\nlibrary.add(faTimes);\nlibrary.add(faMapMarkerAlt);\nlibrary.add(faDrawPolygon);\nlibrary.add(faPrint);\nlibrary.add(faInfoCircle);\n\n\n\nconst app = createApp(SocioEconomic);\napp.component(\"font-awesome-icon\", FontAwesomeIcon);\napp.use(store);\napp.use(ElementPlus);\napp.mount('#app');\n","import {getApiWithoutToken, getApiWithoutTokenAbsoluteURL, postApiWithoutToken} from './api';\nimport {Action} from '../actionType';\n// import {ThreddsServer} from '../../config';\n\nexport async function getCascaderOptions(){\n        const action = Action.CascaderOptions\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n\nexport async function PostChartDataProcessSocioEconomic(param){\n        const action=Action.ChartDataProcessSocioEconomic;\n        const response= await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function PostPopulationSummary(param){\n        const action=Action.GetPopulationSummary;\n        const response= await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function GETLayerInfoStat(param){\n        const action=Action.LayerInfoStat;\n        const response= await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function GETCountryGeojson(){\n        const action=Action.GeoServerBase+\"/AirQuality/ows?ID=1&service=WFS&version=1.0.0&request=GetFeature&typeName=AirQuality%3Anepal_provincial_boundary&maxFeatures=50&outputFormat=application%2Fjson&CQL_FILTER=pr_name='Bagmati'\"\n        const response= await getApiWithoutTokenAbsoluteURL(action);\n        return response;\n}","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./emission.vue?vue&type=style&index=0&id=a544b320&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapControlsEmission.vue?vue&type=style&index=0&id=359046ff&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Tabs.vue?vue&type=style&index=0&id=9d585a44&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./LayerSwitcherControl.vue?vue&type=style&index=0&id=d7895530&scoped=true&lang=css\"","<template>\n  <div class=\"all-conts\">\n    <el-container class=\"cont-outer\">\n      <el-header>\n        <NavBar></NavBar>\n      </el-header>\n      <el-container class=\"sidebar-main\">\n        <Tabs :activeTab=\"currentTab\"></Tabs>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport {ReDirectToSmogAppDotCom, reDirectHTTPSToHTTP} from '../utils/ReDirect'\nimport NavBar from \"../components/common/NavBar\";\nimport Tabs from \"../components/common/Tabs\";\n\n// import emissionTabBody from \"../components/emissionTabBody\";\n// https://codepen.io/suman111/pen/ExmdwxP?editors=0010\n\nexport default {\n  name: \"airqualityRGBProducts\",\n\n  components: {\n    NavBar,\n    Tabs,\n  },\n  data() {\n    return {\n      selectedTab: 'RGBProduct',\n    };\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  },\n  methods: {\n    getCurrentTab() {\n      return this.selectedTab;\n    }\n  },\n  beforeCreate() {\n    ReDirectToSmogAppDotCom();\n    reDirectHTTPSToHTTP();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../utils/main\";\n\n\n</style>\n","import { render } from \"./airqualityRGBProducts.vue?vue&type=template&id=13078d20\"\nimport script from \"./airqualityRGBProducts.vue?vue&type=script&lang=js\"\nexport * from \"./airqualityRGBProducts.vue?vue&type=script&lang=js\"\n\nimport \"./airqualityRGBProducts.vue?vue&type=style&index=0&id=13078d20&lang=scss\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createStore} from \"vuex\";\nimport {\n    getCascaderOptions,\n    GETCountryGeojson,\n    GETLayerInfoStat,\n    PostChartDataProcessSocioEconomic, PostPopulationSummary\n} from \"../api/SocioEconomic\";\nimport {CreateGIFMapImage, PostSlicedFromCatalog} from \"../api/airquality\";\n\nexport default createStore({\n    state() {\n        return {\n            SocioEconomicObject: {\n                socioEconomicType: 'Demographic',\n                PopulationType: 'TotalPopulation',\n                popYear: '2020',\n                ShowAnimationPanel: false,\n            },\n            mapObject: null,\n            TimeSeriesLayerCollection: [],\n            WorkingVectorLayer: null,\n            // selectInteraction: null,\n            selectInteractionObj: null,\n            vectorLayerSource: null,\n            mapControlVariable: {\n                //for printing Legend Object\n                LegendObject: null,\n                LegendItemList: [],\n            },\n            PrintMapComponentData: {\n                PrintMapDialogVisible: false\n            }\n        };\n    },\n    mutations: {\n        setCascaderInventriesComparison(state, payload) {\n            state.CascaderInventriesComparison = payload;\n        }, setCascaderSectorContribution(state, payload) {\n            state.CascaderSectorContribution = payload;\n        }, setCascaderSectorShare(state, payload) {\n            state.CascaderSectorShare = payload;\n        }, setCascaderTimeSeries(state, payload) {\n            state.CascaderTimeSeries = payload;\n        }, setSelectedLayerObj(state, payload) {\n            state.SelectedLayerObj = payload;\n        },\n        // setSelectInteraction(state, payload) {\n        //     state.selectInteraction = payload;\n        // },\n        setMapObject(state, payload) {\n            state.mapObject = payload;\n        }, setWorkingVectorLayer(state, payload) {\n            state.WorkingVectorLayer = payload;\n        }, appendTimeSeriesLayerCollection(state, payload) {\n            state.TimeSeriesLayerCollection.push(payload);\n        }, setVectorLayerSource(state, payload) {\n            state.vectorLayerSource = payload;\n        }, setSelectInteractionObj(state, payload) {\n            state.selectInteractionObj = payload;\n        },\n        removeLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent('remove',payload);\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'remove',target:payload});\n\n            // state.mapControlVariable.LegendObject.removeItem(payload);\n            state.mapControlVariable.LegendObject.getItems().remove(payload);\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendObject.refresh();\n\n\n            let index = false;\n            state.mapControlVariable.LegendItemList.forEach(function (it, idx) {\n                if (it.id == payload.id) {\n                    index = idx;\n                }\n            });\n            if (index !== false) {\n                state.mapControlVariable.LegendItemList.splice(index, 1);\n            }\n\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendItemList.forEach((it) => {\n                state.mapControlVariable.LegendObject.addItem(it);\n            });\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n        addLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'add',target:payload});\n            state.mapControlVariable.LegendItemList.push(payload);\n            state.mapControlVariable.LegendObject.addItem(payload);\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n    },\n    actions: {\n        async getCascaderOptions(context) {\n            let data = await getCascaderOptions();\n            context.commit(\"setCascaderInventriesComparison\", data.InventriesComparison);\n            context.commit(\"setCascaderSectorContribution\", data.SectorContribution);\n            context.commit(\"setCascaderSectorShare\", data.SectorShare);\n            context.commit(\"setCascaderTimeSeries\", data.TimeSeries);\n            return data\n        },\n        async PostChartDataProcessSocioEconomic(context, param) {\n            let data = await PostChartDataProcessSocioEconomic(param);\n            return data;\n        }, async PostPopulationSummary(context, param) {\n            let data = await PostPopulationSummary(param);\n            return data;\n        },\n        async GetLayerStatInfo(context, param) {\n            let data = await GETLayerInfoStat(param);\n            return data;\n        },\n        async GETCountryGeojson() {\n            let data = await GETCountryGeojson();\n            return data;\n        },\n        async PostSlicedFromCatalog(context, param) {\n            let data = await PostSlicedFromCatalog(param);\n            return data;\n        },\n        async PostCreateGIFMapImage(context, param) {\n            let data = await CreateGIFMapImage(param);\n            return data;\n        },\n    },\n    getters: {\n        getBindedLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i];\n                } else {\n                    state.TimeSeriesLayerCollection[i].setVisibleDivBind(false);\n                }\n            }\n            return layer;\n        },\n    },\n    modules: {},\n});","import { createApp } from \"vue\";\nimport airqualityRGBProducts from \"./views/airqualityRGBProducts.vue\";\nimport store from \"./store/modules/airqualityRGBProducts\";\nimport ElementPlus from 'element-plus';\nimport 'element-plus/theme-chalk/index.css';\nimport 'ol-ext/dist/ol-ext.css';\n\n// fontawesome\n\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport {faHandPointer,faTimes,faMapMarkerAlt,faDrawPolygon,faPrint,faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faHandPointer);\nlibrary.add(faTimes);\nlibrary.add(faMapMarkerAlt);\nlibrary.add(faDrawPolygon);\nlibrary.add(faPrint);\nlibrary.add(faInfoCircle);\n\n\nconst app = createApp(airqualityRGBProducts);\napp.component(\"font-awesome-icon\", FontAwesomeIcon);\napp.use(store);\napp.use(ElementPlus);\napp.mount('#app');","// import {TethysAppName} from \"../config\";\n\n\nlet BaseUrl = null;\nlet GeoServerBaseVar = null;\nif (process.env.NODE_ENV === \"production\") {\n    // BaseUrl = \"http://localhost:8000\";\n\n    BaseUrl = window.location.origin;\n    GeoServerBaseVar = 'https://smog.icimod.org/geoserver';\n} else {\n    BaseUrl = \"http://192.168.10.211:9001\";\n    // BaseUrl = \"http://localhost:8000\";\n    GeoServerBaseVar = 'http://smog.icimod.org:8080/geoserver';\n}\n\n\n\nexport let Action = {\n    Base: BaseUrl,\n    GeoServerBase: GeoServerBaseVar,\n    // Base : 'http://110.44.114.244:8001/',\n    CityData: \"apps/airquality/getCityData\",\n    Aeronet: 'apps/airquality/aeronetaodpm',\n    USEmbassyAOD: 'apps/airquality/usembassypm',\n    getGeoJSONofStations: 'apps/airquality/getGeoJSONofStations',\n    getGeoJsonForOneSatation: 'apps/airquality/getGeoJsonForOneSatation',\n    getAllStationsID: 'apps/airquality/getAllStationsID',\n\n\n    commonAPI: 'apps/airquality/getData/',\n    RegionGeojson: 'apps/airquality/geojsonregion',\n    AOIPolygon: 'apps/airquality/aoipolygon',\n    GetMapImage: 'apps/airquality/getmapimage/',\n    GetImage: 'apps/airquality/downloadImage',\n    GetAnimationImage: 'apps/airquality/downloadImage',\n    SlicedFromCatalog: 'apps/airquality/slicedfromcatalog/',\n    SliceFromCatalogForecast: 'apps/airquality/SliceFromCatalogForecast/',\n    TimeSeriesRasterQuery: 'apps/airquality/timeseriesmodeldata/',\n    trueColorLegendImage: 'apps/airquality/trueColorLegendImage/?Imagename=trueColorImage.png',\n    legendAMIDustRGB: 'apps/airquality/trueColorLegendImage/?Imagename=legendAMIDustRGB.png',\n    defaultObservationStation: 'apps/airquality/defaultobservationstation/',\n    createGIFMapImage: 'apps/airquality/creategifmapimage/',\n\n\n    //emission\n    CascaderOptions: 'apps/airquality/getCascaderData/',\n    ChartDataProcess: 'apps/airquality/getChartDataProcess/',\n    LayerInfoStat: 'apps/airquality/getLayerInfoStat/',\n\n\n    //Population\n    ChartDataProcessSocioEconomic: 'apps/airquality/getChartDataProcessSocioEconomic/',\n    GetPopulationSummary: 'apps/airquality/getPopulationSummary/',\n};\n","<template>\n  <div class=\"all-conts\">\n    <el-container class=\"cont-outer\">\n      <el-header>\n        <NavBar></NavBar>\n      </el-header>\n      <el-container class=\"sidebar-main\">\n        <Tabs :activeTab=\"currentTab\"></Tabs>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\n\nimport NavBar from \"../components/common/NavBar\";\nimport Tabs from \"../components/common/Tabs\"\nimport {ReDirectToSmogAppDotCom, reDirectHTTPSToHTTP} from \"../utils/ReDirect\";\n// import emissionTabBody from \"../components/emissionTabBody\";\n// https://codepen.io/suman111/pen/ExmdwxP?editors=0010\n\nexport default {\n  name: \"current\",\n\n  components: {\n    NavBar,\n    Tabs,\n  },\n  data() {\n    return {\n      selectedTab: 'Recent',\n    };\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  },\n  methods: {\n    getCurrentTab() {\n      return this.selectedTab;\n    }\n  },\n  beforeCreate() {\n    ReDirectToSmogAppDotCom();\n    reDirectHTTPSToHTTP();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../utils/main\";\n\n\n</style>\n","import { render } from \"./airqualitynpRecent.vue?vue&type=template&id=42ca2144\"\nimport script from \"./airqualitynpRecent.vue?vue&type=script&lang=js\"\nexport * from \"./airqualitynpRecent.vue?vue&type=script&lang=js\"\n\nimport \"./airqualitynpRecent.vue?vue&type=style&index=0&id=42ca2144&lang=scss\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createStore} from \"vuex\";\nimport {\n    getCityData,\n    PostSlicedFromCatalog,\n    getGeoJsonForOneSatation,\n    PostGetStationData,\n    PostGet2DImage, TimeSeriesRasterQuery, getDefaultGroundObservation\n} from \"../api/airquality\";\n\nexport default createStore({\n    state() {\n        return {\n            CascaderInventriesComparison: [],\n            CascaderSectorContribution: [],\n            CascaderSectorShare: [],\n            CascaderTimeSeries: [],\n            SelectedLayerObj: null,\n\n            selectInteraction: null,\n            mapObject: null,\n            TimeSeriesLayerCollection: [],\n            WorkingVectorLayer: null,\n            mapControlVariable: {\n                //for printing Legend Object\n                LegendObject: null,\n                LegendItemList: [],\n\n                data_period: 'Recent',\n                select_by: 'Parameter',\n\n                // Location parameter\n                location_by: 'default_locations',\n                default_location: '',\n                is_AOI_Feature_selected: false,\n                location_by_wktValue: '',\n                location_by_geometryType: '',\n                location_by_default_level_value: '',\n\n                location_by_pollutant_value1: [],\n                location_by_pollutant_value2: [],\n                location_by_pollutant_value3: [],\n                location_by_pollutant_value4: [],\n\n                //parameter parameter\n                radioValue: 1,\n                parameter_by_pollutant_value: '',\n                is_parameter_by_pollutant_value_stationData: true,\n\n                parameter_by_pollutant_value_stationData_val1: '',\n                parameter_by_pollutant_value_stationData_val2: '',\n                parameter_by_pollutant_value_stationData_val3: '',\n                parameter_by_pollutant_value_stationData_val4: '',\n\n                parameter_by_location__1: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__2: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__3: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__4: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n            },\n\n            PrintMapComponentData: {\n                PrintMapDialogVisible: false\n            }\n        };\n    },\n    mutations: {\n        setCascaderInventriesComparison(state, payload) {\n            state.CascaderInventriesComparison = payload;\n        }, setCascaderSectorContribution(state, payload) {\n            state.CascaderSectorContribution = payload;\n        }, setCascaderSectorShare(state, payload) {\n            state.CascaderSectorShare = payload;\n        }, setCascaderTimeSeries(state, payload) {\n            state.CascaderTimeSeries = payload;\n        }, setSelectedLayerObj(state, payload) {\n            state.SelectedLayerObj = payload;\n        }, setSelectInteraction(state, payload) {\n            state.selectInteraction = payload;\n        }, setMapObject(state, payload) {\n            state.mapObject = payload;\n        }, setWorkingVectorLayer(state, payload) {\n            state.WorkingVectorLayer = payload;\n        },\n        appendTimeSeriesLayerCollection(state, payload) {\n            state.TimeSeriesLayerCollection.push(payload);\n        },\n\n        removeLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent('remove',payload);\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'remove',target:payload});\n            // state.mapControlVariable.LegendObject.removeItem(payload);\n            state.mapControlVariable.LegendObject.getItems().remove(payload);\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendObject.refresh();\n\n\n            let index = false;\n            state.mapControlVariable.LegendItemList.forEach(function (it, idx) {\n                if (it.id == payload.id) {\n                    index = idx;\n                }\n            });\n            if (index !== false) {\n                state.mapControlVariable.LegendItemList.splice(index, 1);\n            }\n\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendItemList.forEach((it) => {\n                state.mapControlVariable.LegendObject.addItem(it);\n            });\n            state.mapControlVariable.LegendObject.refresh();\n        },\n        addLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'add',target:payload});\n            state.mapControlVariable.LegendItemList.push(payload);\n            state.mapControlVariable.LegendObject.addItem(payload);\n            state.mapControlVariable.LegendObject.refresh();\n        }\n\n    },\n    actions: {\n        async getCityData(context, param) {\n            let data = await getCityData(param);\n            return data;\n        },\n        async getGeoJsonForOneSatation(context, stringParam) {\n            let data = await getGeoJsonForOneSatation(stringParam);\n            return data;\n        },\n        async PostSlicedFromCatalog(context, param) {\n            let data = await PostSlicedFromCatalog(param);\n            return data;\n        },\n        async PostGetStationData(context, param) {\n            let data = await PostGetStationData(param);\n            return data;\n        },\n        async TimeSeriesRasterQuery(context, param) {\n            let data = await TimeSeriesRasterQuery(param);\n            return data;\n        },\n        async PostGet2DImage(context, param) {\n            let data = await PostGet2DImage(param);\n            return data;\n        },\n        async getDefaultGroundObservation(context, param) {\n            let data = await getDefaultGroundObservation(param);\n            return data;\n        },\n    },\n    getters: {\n        getLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                // console.log(TimeSeriesLayerCollection[i].getProperties().id);\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i].getLayer();\n                    break;\n                }\n            }\n            return layer;\n        }, getBindedLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i];\n                    break;\n                }\n            }\n            return layer;\n        }\n    },\n    modules: {},\n});","import { createApp } from \"vue\";\nimport emission from \"./views/airqualitynpRecent.vue\";\nimport store from \"./store/modules/airqualityRecent\";\nimport ElementPlus from 'element-plus';\nimport 'element-plus/theme-chalk/index.css';\nimport 'ol-ext/dist/ol-ext.css'\nimport {library,dom} from \"@fortawesome/fontawesome-svg-core\";\nimport {faHandPointer,faTimes,faMapMarkerAlt,faDrawPolygon,faPrint,faInfo,faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/vue-fontawesome\";\n\n\nlibrary.add(faHandPointer);\nlibrary.add(faTimes);\nlibrary.add(faMapMarkerAlt);\nlibrary.add(faDrawPolygon);\nlibrary.add(faPrint);\nlibrary.add(faInfo);\nlibrary.add(faInfoCircle);\ndom.watch();\n\n\nconst app = createApp(emission);\napp.component(\"font-awesome-icon\", FontAwesomeIcon);\napp.use(store);\napp.use(ElementPlus);\napp.mount('#app');\n\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./chartComponentArchive.vue?vue&type=style&index=0&id=faee2a24&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TabBodyArchive.vue?vue&type=style&index=0&id=c564b526&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./PrintMap.vue?vue&type=style&index=0&id=25bed18e&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./airqualitynpArchive.vue?vue&type=style&index=0&id=72c4b752&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapControlsRecent.vue?vue&type=style&index=0&id=f8ff0a68&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"static/airquality/images/logo-icimod.png\";","module.exports = __webpack_public_path__ + \"static/airquality/images/male.svg\";","module.exports = __webpack_public_path__ + \"static/airquality/images/AODAeroNet.jpg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./airqualitynpForecast.vue?vue&type=style&index=0&id=7c78a1cc&lang=scss\"","module.exports = __webpack_public_path__ + \"static/airquality/images/population.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./chartComponentRecent.vue?vue&type=style&index=0&id=102c4e27&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"static/airquality/images/legendAMIDustRGB.png\";","<template>\n  <div class=\"all-conts\">\n    <el-container class=\"cont-outer\">\n      <el-header>\n        <NavBar></NavBar>\n      </el-header>\n      <el-container class=\"sidebar-main\">\n        <Tabs :activeTab=\"currentTab\"></Tabs>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\n\nimport NavBar from \"../components/common/NavBar\";\nimport Tabs from \"../components/common/Tabs\"\nimport {ReDirectToSmogAppDotCom,reDirectHTTPSToHTTP} from \"../utils/ReDirect\";\n// import emissionTabBody from \"../components/emissionTabBody\";\n\n// https://codepen.io/suman111/pen/ExmdwxP?editors=0010\n\nexport default {\n  name: \"current\",\n\n  components: {\n    NavBar,\n    Tabs,\n  },\n\n  data() {\n    return {\n      selectedTab: 'Forecast',\n    };\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  },\n  methods: {\n    getCurrentTab() {\n      return this.selectedTab;\n    }\n  },\n  beforeCreate() {\n    ReDirectToSmogAppDotCom();\n    reDirectHTTPSToHTTP();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../utils/main\";\n\n\n</style>\n","import { render } from \"./airqualitynpForecast.vue?vue&type=template&id=7c78a1cc\"\nimport script from \"./airqualitynpForecast.vue?vue&type=script&lang=js\"\nexport * from \"./airqualitynpForecast.vue?vue&type=script&lang=js\"\n\nimport \"./airqualitynpForecast.vue?vue&type=style&index=0&id=7c78a1cc&lang=scss\"\n\nimport exportComponent from \"/home/ssanjel/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createStore} from \"vuex\";\nimport {\n    getCityData,\n    PostSlicedFromCatalog,\n    SliceFromCatalogForecast,\n    getGeoJsonForOneSatation,\n    PostGetStationData,\n    PostGet2DImage, TimeSeriesRasterQuery, CreateGIFMapImage\n} from \"../api/airquality\";\n\nexport default createStore({\n    state() {\n        return {\n            CascaderInventriesComparison: [],\n            CascaderSectorContribution: [],\n            CascaderSectorShare: [],\n            CascaderTimeSeries: [],\n            SelectedLayerObj: null,\n\n            selectInteraction: null,\n            mapObject: null,\n            TimeSeriesLayerCollection: [],\n            WorkingVectorLayer: null,\n            mapControlVariable: {\n                //for printing Legend Object\n                LegendObject: null,\n                LegendItemList: [],\n\n                data_period: 'Forecast',\n                select_by: 'Parameter',\n\n                // Location parameter\n                location_by: 'default_locations',\n                default_location: '',\n                is_AOI_Feature_selected: false,\n                location_by_wktValue: '',\n                location_by_geometryType: '',\n                location_by_default_level_value: '',\n\n                location_by_pollutant_value1: [],\n                location_by_pollutant_value2: [],\n                location_by_pollutant_value3: [],\n                location_by_pollutant_value4: [],\n\n                //parameter parameter\n                radioValue: 1,\n                parameter_by_pollutant_value: [],\n                is_parameter_by_pollutant_value_stationData: false,\n\n                parameter_by_pollutant_value_stationData_val1: '',\n                parameter_by_pollutant_value_stationData_val2: '',\n                parameter_by_pollutant_value_stationData_val3: '',\n                parameter_by_pollutant_value_stationData_val4: '',\n\n                parameter_by_location__1: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__2: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__3: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__4: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n            },\n\n            PrintMapComponentData: {\n                PrintMapDialogVisible: false\n            }\n        };\n    },\n    mutations: {\n        setCascaderInventriesComparison(state, payload) {\n            state.CascaderInventriesComparison = payload;\n        }, setCascaderSectorContribution(state, payload) {\n            state.CascaderSectorContribution = payload;\n        }, setCascaderSectorShare(state, payload) {\n            state.CascaderSectorShare = payload;\n        }, setCascaderTimeSeries(state, payload) {\n            state.CascaderTimeSeries = payload;\n        }, setSelectedLayerObj(state, payload) {\n            state.SelectedLayerObj = payload;\n        }, setSelectInteraction(state, payload) {\n            state.selectInteraction = payload;\n        }, setMapObject(state, payload) {\n            state.mapObject = payload;\n        }, setWorkingVectorLayer(state, payload) {\n            state.WorkingVectorLayer = payload;\n        },\n        appendTimeSeriesLayerCollection(state, payload) {\n            state.TimeSeriesLayerCollection.push(payload);\n        },\n\n        removeLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent('remove',payload);\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'remove',target:payload});\n\n            // state.mapControlVariable.LegendObject.removeItem(payload);\n            state.mapControlVariable.LegendObject.getItems().remove(payload);\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendObject.refresh();\n\n\n            let index = false;\n            state.mapControlVariable.LegendItemList.forEach(function (it, idx) {\n                if (it.id == payload.id) {\n                    index = idx;\n                }\n            });\n            if (index !== false) {\n                state.mapControlVariable.LegendItemList.splice(index, 1);\n            }\n\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendItemList.forEach((it) => {\n                state.mapControlVariable.LegendObject.addItem(it);\n            });\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n        addLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'add',target:payload});\n            state.mapControlVariable.LegendItemList.push(payload);\n            state.mapControlVariable.LegendObject.addItem(payload);\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n    },\n    actions: {\n        // async getCascaderOptions(context) {\n        //     let data = await getCascaderOptions();\n        //     context.commit(\"setCascaderInventriesComparison\", data.InventriesComparison)\n        //     context.commit(\"setCascaderSectorContribution\", data.SectorContribution)\n        //     context.commit(\"setCascaderSectorShare\", data.SectorShare)\n        //     context.commit(\"setCascaderTimeSeries\", data.TimeSeries)\n        //     return data\n        // },\n        // async PostChartDataProcess(context, param) {\n        //     let data = await PostChartDataProcess(param);\n        //     return data;\n        // },\n        // async GetLayerStatInfo(context, param) {\n        //     let data = await GETLayerInfoStat(param);\n        //     return data;\n        // },\n        async getCityData(context, param) {\n            let data = await getCityData(param);\n            return data;\n        },\n        async getGeoJsonForOneSatation(context, stringParam) {\n            let data = await getGeoJsonForOneSatation(stringParam);\n            return data;\n        },\n        async PostSlicedFromCatalog(context, param) {\n            let data = await PostSlicedFromCatalog(param);\n            return data;\n        }, async SliceFromCatalogForecast(context, param) {\n            let data = await SliceFromCatalogForecast(param);\n            return data;\n        },\n        async PostGetStationData(context, param) {\n            let data = await PostGetStationData(param);\n            return data;\n        },\n        async TimeSeriesRasterQuery(context, param) {\n            let data = await TimeSeriesRasterQuery(param);\n            return data;\n        },\n        async PostCreateGIFMapImage(context, param) {\n            let data = await CreateGIFMapImage(param);\n            return data;\n        },\n        async PostGet2DImage(context, param) {\n            let data = await PostGet2DImage(param);\n            return data;\n        },\n    },\n    getters: {\n        getLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                // console.log(TimeSeriesLayerCollection[i].getProperties().id);\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i].getLayer();\n                    break;\n                }\n            }\n            return layer;\n        }, getBindedLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i];\n                    break;\n                }\n            }\n            return layer;\n        }\n    },\n    modules: {},\n});","import { createApp } from \"vue\";\nimport emission from \"./views/airqualitynpForecast.vue\";\nimport store from \"./store/modules/airqualityForecast\";\nimport ElementPlus from 'element-plus';\nimport 'element-plus/theme-chalk/index.css';\nimport 'ol-ext/dist/ol-ext.css'\n\nimport {library,dom} from \"@fortawesome/fontawesome-svg-core\";\nimport {faHandPointer,faTimes,faMapMarkerAlt,faDrawPolygon,faPrint,faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nlibrary.add(faHandPointer);\nlibrary.add(faTimes);\nlibrary.add(faMapMarkerAlt);\nlibrary.add(faDrawPolygon);\nlibrary.add(faPrint);\nlibrary.add(faInfoCircle);\ndom.watch();\n\n\nconst app = createApp(emission);\napp.component(\"font-awesome-icon\", FontAwesomeIcon);\napp.use(store);\napp.use(ElementPlus);\napp.mount('#app');\n\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./NavBar.vue?vue&type=style&index=0&id=3a4430d9&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TabBodyEmission.vue?vue&type=style&index=0&id=11717ea9&scoped=true&lang=css\"","import {getApiWithoutToken,postApiWithoutToken} from './api';\nimport {Action} from '../actionType';\n// import {ThreddsServer} from '../../config';\n\nexport async function getCityData(){\n        const action = Action.CityData\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n\nexport async function getGeoJsonForOneSatation(stringParam){\n        const action = Action.getGeoJsonForOneSatation+stringParam\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n\n\nexport async function PostSlicedFromCatalog(param){\n        const action = Action.SlicedFromCatalog\n        const response = await postApiWithoutToken(action,param);\n        return response;\n}\nexport async function SliceFromCatalogForecast(param){\n        const action = Action.SliceFromCatalogForecast\n        const response = await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function PostGetStationData(param){\n        const action = Action.commonAPI\n        const response = await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function PostGet2DImage(param){\n        const action = Action.GetMapImage\n        const response = await postApiWithoutToken(action,param);\n        response.image=Action.Base+'/'+Action.GetImage+ \"?ImageName=\" + response.image\n        return response;\n}\n\nexport async function TimeSeriesRasterQuery(param){\n        const action = Action.TimeSeriesRasterQuery\n        const response = await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function CreateGIFMapImage(param){\n        const action = Action.createGIFMapImage\n        const response = await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function getDefaultGroundObservation(param){\n        const action = Action.defaultObservationStation+\"?typeName=\" + param.typeName + \"&startDate=\" + param.startDate+ \"&endDate=\" + param.endDate\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n\nexport async function GetAnimationImage(param){\n        const action = Action.GetAnimationImage+\"?ImageName=\" + param.ImageName + \"&gif=\" + param.gif\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./selectLocation.vue?vue&type=style&index=0&id=e359f4b6&lang=scss\"","module.exports = __webpack_public_path__ + \"static/airquality/images/usembassyPm2p5.jpg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapComponentForecast.vue?vue&type=style&index=0&id=9212c250&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./chartComponentEmission.vue?vue&type=style&index=0&id=00b27c66&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapComponentEmission.vue?vue&type=style&index=0&id=2f54f295&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TabBodyRGBProducts.vue?vue&type=style&index=0&id=295dfa90&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"static/airquality/images/rgblegend.jpg\";","module.exports = __webpack_public_path__ + \"static/airquality/images/child.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./LayerSwitcherControl.vue?vue&type=style&index=0&id=07ee501a&scoped=true&lang=css\""],"sourceRoot":""}