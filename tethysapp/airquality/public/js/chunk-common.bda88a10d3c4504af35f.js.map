{"version":3,"sources":["webpack:///./src/components/TabBodyForecast.vue?1d74","webpack:///./src/components/mapComponentEmission.vue?ff41","webpack:///./src/views/emission.vue?42c3","webpack:///./src/components/LayerSwitcherControl.vue?4491","webpack:///./src/store/api/api.js","webpack:///./src/views/emission.vue","webpack:///./src/views/emission.vue?f636","webpack:///./src/store/api/emission.js","webpack:///./src/store/modules/emission.js","webpack:///./src/airqualityEmission.js","webpack:///./src/components/chartComponentForecast.vue?3d3c","webpack:///./src/assets/layers.svg","webpack:///./src/views/airqualitynpArchive.vue","webpack:///./src/views/airqualitynpArchive.vue?26b5","webpack:///./src/store/modules/airqualityArchive.js","webpack:///./src/airqualityArchive.js","webpack:///./src/components/PrintMap.vue?5036","webpack:///./src/utils/ReDirect.js","webpack:///./src/components/mapComponentForecast.vue?8fed","webpack:///./src/assets/markers_default.png","webpack:///./src/components/chartComponentEmission.vue?65dd","webpack:///./src/components/TabBodyRecent.vue?25cb","webpack:///./src/components/mapLagend.vue?674b","webpack:///./src/views/airqualitynpForecast.vue?1372","webpack:///./src/views/airqualitynpArchive.vue?347d","webpack:///./src/components/TabBodyEmission.vue?2aa5","webpack:///./src/components/chartComponentRecent.vue?c15e","webpack:///./src/components/chartComponentArchive.vue?dbc8","webpack:///./src/components/mapControlsEmission.vue?c8b0","webpack:///./src/store/actionType.js","webpack:///./src/components/mapComponentRecent.vue?614d","webpack:///./src/components/mapControlsArchive.vue?3e01","webpack:///./src/views/airqualitynpRecent.vue","webpack:///./src/views/airqualitynpRecent.vue?7d50","webpack:///./src/store/modules/airqualityRecent.js","webpack:///./src/airqualityRecent.js","webpack:///./src/assets/logo-icimod.png","webpack:///./src/assets/AODAeroNet.jpg","webpack:///./src/components/Tabs.vue","webpack:///./src/config.js","webpack:///./src/components/TabBodyRecent.vue","webpack:///./src/components/LayerSwitcherControl.vue","webpack:///./src/components/LayerSwitcherControl.vue?df11","webpack:///./src/components/chartComponentRecent.vue","webpack:///./src/utils/utils.js","webpack:///./src/utils/helpers.js","webpack:///./src/utils/dataRecent.js","webpack:///./src/components/chartComponentRecent.vue?b963","webpack:///./src/components/mapControlsRecent.vue","webpack:///./src/components/selectLocation.vue","webpack:///./src/components/selectLocation.vue?6ca2","webpack:///./src/components/mapControlsRecent.vue?f68d","webpack:///./src/components/mapComponentRecent.vue","webpack:///./src/utils/customLegend.js","webpack:///./src/components/PrintMap.vue","webpack:///./src/components/mapLagend.vue","webpack:///./src/components/mapLagend.vue?2f76","webpack:///./src/components/PrintMap.vue?01eb","webpack:///./src/components/mapComponentRecent.vue?b6d2","webpack:///./src/components/TabBodyRecent.vue?5c31","webpack:///./src/components/TabBodyArchive.vue","webpack:///./src/components/chartComponentArchive.vue","webpack:///./src/utils/dataArchive.js","webpack:///./src/components/chartComponentArchive.vue?676f","webpack:///./src/components/mapControlsArchive.vue","webpack:///./src/components/mapControlsArchive.vue?cfe4","webpack:///./src/components/mapComponentArchive.vue","webpack:///./src/utils/data.js","webpack:///./src/components/mapComponentArchive.vue?9753","webpack:///./src/components/TabBodyArchive.vue?4273","webpack:///./src/components/TabBodyForecast.vue","webpack:///./src/components/chartComponentForecast.vue","webpack:///./src/utils/dataForecast.js","webpack:///./src/components/chartComponentForecast.vue?8e09","webpack:///./src/components/mapControlsForecast.vue","webpack:///./src/components/mapControlsForecast.vue?e7fc","webpack:///./src/components/mapComponentForecast.vue","webpack:///./src/components/mapComponentForecast.vue?d6bb","webpack:///./src/components/TabBodyForecast.vue?41f5","webpack:///./src/components/TabBodyEmission.vue","webpack:///./src/components/chartComponentEmission.vue","webpack:///./src/components/chartComponentEmission.vue?2a42","webpack:///./src/components/mapControlsEmission.vue","webpack:///./src/utils/dataEmission.js","webpack:///./src/components/mapControlsEmission.vue?a8ce","webpack:///./src/components/mapComponentEmission.vue","webpack:///./src/components/mapComponentEmission.vue?691a","webpack:///./src/components/EmissionStatistics.vue","webpack:///./src/components/EmissionStatistics.vue?000e","webpack:///./src/components/TabBodyEmission.vue?4e72","webpack:///./src/components/Tabs.vue?0f72","webpack:///./src/components/Tabs.vue?7a1d","webpack:///./src/components/mapControlsRecent.vue?4866","webpack:///./src/components/TabBodyArchive.vue?587b","webpack:///./src/views/airqualitynpForecast.vue","webpack:///./src/views/airqualitynpForecast.vue?d50d","webpack:///./src/store/modules/airqualityForecast.js","webpack:///./src/airqualityForecast.js","webpack:///./src/store/api/airquality.js","webpack:///./src/components/NavBar.vue","webpack:///./src/components/NavBar.vue?5ec4","webpack:///./src/assets/usembassyPm2p5.jpg","webpack:///./src/views/airqualitynpRecent.vue?bb30","webpack:///./src/components/mapControlsForecast.vue?7c82","webpack:///./src/components/NavBar.vue?8e9e","webpack:///./src/assets/rgblegend.jpg","webpack:///./src/components/mapComponentArchive.vue?ea20","webpack:///./src/components/EmissionStatistics.vue?9cde","webpack:///./src/components/selectLocation.vue?0b5f"],"names":["actionBase","axios","create","baseURL","Action","Base","postApiWithoutToken","action","param","Promise","resolve","reject","post","then","res","data","err","console","log","getApiWithoutToken","get","getApiWithoutTokenAbsoluteURL","class","activeTab","currentTab","name","components","NavBar","Tabs","selectedTab","computed","this","getCurrentTab","methods","beforeCreate","ReDirect","__exports__","render","getCascaderOptions","CascaderOptions","response","PostChartDataProcess","ChartDataProcess","GETLayerInfoStat","LayerInfoStat","GETCountryGeojson","GeoServerBase","createStore","state","CascaderInventriesComparison","CascaderSectorContribution","CascaderSectorShare","CascaderTimeSeries","selectInteractionObj","TimeSeriesLayerCollection","vectorLayerSource","mapObject","mutations","setCascaderInventriesComparison","payload","setCascaderSectorContribution","setCascaderSectorShare","setCascaderTimeSeries","setSelectInteractionObj","setVectorLayerSource","setmapObject","appendTimeSeriesLayerCollection","push","actions","context","commit","InventriesComparison","SectorContribution","SectorShare","TimeSeries","GetLayerStatInfo","getters","modules","library","add","faHandPointer","faTimes","faMapMarkerAlt","faDrawPolygon","faPrint","faInfoCircle","app","createApp","emission","component","FontAwesomeIcon","use","store","ElementPlus","mount","module","exports","SelectedLayerObj","selectInteraction","WorkingVectorLayer","mapControlVariable","LegendObject","LegendItemList","data_period","select_by","location_by","default_location","is_AOI_Feature_selected","location_by_wktValue","location_by_geometryType","location_by_default_level_value","location_by_pollutant_value1","location_by_pollutant_value2","location_by_pollutant_value3","location_by_pollutant_value4","radioValue","parameter_by_pollutant_value","is_parameter_by_pollutant_value_stationData","parameter_by_pollutant_value_stationData_val1","parameter_by_pollutant_value_stationData_val2","parameter_by_pollutant_value_stationData_val3","parameter_by_pollutant_value_stationData_val4","parameter_by_location__1","wktValue","geometryType","featureExtent","default_level_value","parameter_by_location__2","parameter_by_location__3","parameter_by_location__4","PrintMapComponentData","PrintMapDialogVisible","setSelectedLayerObj","setSelectInteraction","setMapObject","setWorkingVectorLayer","removeLegend","getItems","remove","clear","refresh","index","forEach","it","idx","id","splice","addItem","addLegend","getCityData","getGeoJsonForOneSatation","stringParam","PostSlicedFromCatalog","PostGetStationData","TimeSeriesRasterQuery","PostGet2DImage","getDefaultGroundObservation","getLayer","layer","i","length","getProperties","getBindedLayer","ReDirectToSmogAppDotCom","window","location","host","RDirect","document","createElement","href","pathname","click","reDirectHTTPSToHTTP","slice","BaseUrl","CityData","Aeronet","USEmbassyAOD","getGeoJSONofStations","getAllStationsID","commonAPI","RegionGeojson","AOIPolygon","GetMapImage","GetImage","SlicedFromCatalog","trueColorLegendImage","defaultObservationStation","faInfo","dom","watch","type","height","changePage","key","label","TethysAppName","TethysAPIAppName","threddDataSource","GeoServerHostLVar","GeoServerHost","DefaultMaskWMS","DefaultPlotInfo","colorScheme","BBOX","tickSpan","Resolution","width","span","IndexValue","ref","visualizationIn","rows","animated","downloadImage","imageInfo","src","url","$on","emitter","on","$once","once","$off","off","$emit","emit","AllMonths","0","1","2","3","4","5","6","7","8","9","10","11","MapHelper","getURLParameters","vars","split","replace","m","value","dateisoFormatForLevelFormatter__monthly","isoDate","dateObj","Date","parseISO8601","FullYear","getFullYear","toString","FullMonth","getMonth","dateisoFormatForLevelFormatter__dekad","dt","getDate","Highcharts","dateFormat","dateisoFormatForLevelFormatter__quartly","threeMonths","myApp","startDate","setDate","endDate","recentDate","checkInt","parseInt","YYYY","MM_index","DD","dObject","IndexColors","APICollection","layerData","api","constants","recent","layerId","TerraModisTrueColor","PM_AeronetAOD","PM_usembassy","GEOS_PM2p5","TerraModisAOD","O3_GEOS","O3_usembassy","SO2_GEOS","NO2_GEOS","CO_GEOS","Nep_Gov_PM1","Nep_Gov_PM10","Nep_Gov_PM2p5","Nep_Gov_tsp","AllBindedLayersList","OnlyOnce","formatDateWithHHMM","date","d","month","day","year","hour","getHours","minute","getMinutes","join","formatDate","TrueColorImage","catalog","useSLD","isTimeDimensionLayer","SLD","getStartDate","getEndDate","VisibleDivBind","threddLayerProp","title","visible","opacity","legendPath","ThreddsDataServerVersion","serverType","timeSeries","alignTimeSlider","timeSliderSize","showlegend","showControlPanel","zIndex","source","params","mask","CropOrMask","changeWMSProxy","DefaultSations","aeronetAOD","pm2p5Embassy","o3Embassy","NepalStation","cascaderObj","children","stationData","ModelClass","ModelClassDataList","typeName","defaultStation","chart","stationName","subTitle","SeriesName","YaxisLabel","XaxisLabel","plotType","layerProperties","initilize","makeRequest","method","xhr","XMLHttpRequest","open","onload","status","statusText","onerror","send","datetimePointChartObj","SeriesData","plotColor","DataPeriod","marginLeft","backgroundColor","plotBorderColor","plotBorderWidth","text","fontSize","useHTML","subtitle","series","lineWidth","marker","enabled","symbol","radius","xAxis","align","tickLength","lineColor","yAxis","rotation","offset","x","gridLineWidth","legend","credits","plotOptions","color","lang","noData","exporting","buttons","contextButton","menuItems","allowHTML","datetimeChartObj","forceDownload","fileName","responseType","urlCreator","URL","webkitURL","imageUrl","createObjectURL","tag","download","body","appendChild","removeChild","AirPollutionWatchApp","props","Number","required","downloadFileName","renderVisualization","kk","getCascaderInfoObject","ObservationDatavisualization","stationObjectValue","interestedObje","filter","obj1","obj2","stationId","setVisibleDivBind","stId","StartDate","EndDate","parsedData","stationObject","childrenData","stdata","folder_name","highchartsObj","TimeSeriesPlot","WKT","WKTType","layerBind","SourceParam","SourceURL","getCurrentLayer","getParams","val","getUrls","DATADIR","LAYER","LAYERS","wkt","chartDetail","geom","unit","created","mounted","HcObject","updateChart","style","label-position","label-width","size","prop","placeholder","options","item","disabled","cascaderData","isDisable","Select_Option_Default_Location","ObservationStationOptions","computeData","parameter_by_location","Boolean","Array","featureSelectorDeleteUpdate","wktfeaturegeom","SelectByOption","getFeatures","getLength","features","f","format","writeGeometry","getGeometry","dataProjection","featureProjection","getType","readFeature","getExtent","set","countSelectedFeature","getSource","$notify","message","SelectDefaultLocation","newVal","oldVal","selNewValObj","Feature","geoJSON","addFeature","removeFeature","SelectLocationBy","elem","$refs","defaultLocation","$el","dispatchEvent","Event","maskCoordinate","data__layer__initilize__Recent","PROXY_PREFIX","view","getView","resolution","getResolutionForExtent","getSize","zoom","getZoomForResolution","center","ol_extent","setTimeout","animate","Math","min","SetLayerOfSelectByParameterLayer","that","getStationInfoObject","AddLayerToLayerList","jj","ObservationStationOption","SelectByParameterPollutant","newPollutant","oldPollutant","Object","keys","setVisible","onChangePollutantsOnSelectByLocation","selectLocation","Param","CatalogSlicingParam","data_ext","addRasterLayerToMap","wmsList","catalogURl","slicingParam","responseData","resPonseParsed","isTrue","LegendParameter","legendWMS","isArray","encodeURIComponent","OLEXTLegendObject","typeGeom","Style","image","Icon","crossOrigin","timedimensionTilePara","SLD_BODY","Newlayer","TimeDimensionTile","AddRemoveLegendFunction","init","addThreddsLayer","l5","LayerSwitcher","properties","setCrop","setMask","COLORSCALERANGE","STYLES","JSON","stringify","IsViz","setLayerVisible","count","GeoServerWMSURL","WMSURLWithRequestParameter","lyr","le","layerObj","ImageWMS","addLayer","sd","ed","regionOrCountry","dataResponse","InitilizeStationDataOnLoad","SelectDataPeriod","sdt","edt","defalultSt","ol_legend_Legend","prototype","table","_listElement","innerHTML","margin","canvas","getCanvas","ctx","getContext","textAlign","textBaseline","ratio","ol_has_DEVICE_PIXEL_RATIO","font","_titleStyle","getFont","textWidth","_measureText","getTitle","_items","r","_textStyle","max","bind","heightAccumulator","fillStyle","ol_color_asString","getFill","getColor","_title","getElement","b","_drawText","HTextAndImage","feature","getLegendImage","test","className","row","accumulatedHeight","_style","lineHeight","pixelratio","save","vectorContext","ol_render_toContext","pixelRatio","ol_Feature","ol_geom_Point","ol_geom_LineString","ol_geom_Polygon","setProperties","getStyle","s","cx","cy","sx","sy","dySave","extent","img","getImage","imgElt","getPhoto","HTMLImageElement","naturalWidth","addEventListener","load","getAnchor","anchor","si","dx","dy","ol_extent_extend","setStyle","rect","clip","getGeometryFunction","restore","drawGeometry","before-close","handleClose","append-to-body","top","model","MapPrintValidateForm","rules","autocomplete","AccordionActiveName","accordion","CheckSelectAll","legendInfos","Cancel","submitForm","itemVisible","checked1","calculateHeightWidth","Image","imgWidth","imgHeight","LegendUIList","mapLagend","formName","validate","valid","layout","getMapPDFLayout","outputfilename","mapSize","mapResolution","getResolution","mapFrameSizePxl","legendInfos1","curObje","sort","item1","item2","copyOLMapTo","addLegendsTo","pos","legendBoxPxl","columnWidth","drawPolygon","northArrowCoordsPxl","drawScaleBar","y","strokeStyle","strokeRect","createMapPDF","setSize","setResolution","frameSize","scaling","resetForm","resetFields","backToNormal","done","target","querySelector","setTarget","deproxifyWMSLayers","DPI","mmToPixel","dim_mm","topMargin","pageWidth","pageHeight","mapWidth","mapHeight","mapHeightPxl","legendHeightPercent","legendHeightPxl","legendPosPxl","arrowBaseWidth","arrowHeight","arrowTop","arrowCenterX","northArrowCoords","pageDim","mapFrameSize","map","pt","fillRect","querySelectorAll","mapCanvas","parentNode","globalAlpha","matrix","transform","match","setTransform","drawImage","addImageProcess","setAttribute","maxHeight","offsetX","offsetY","labelHeight","getLegendBoxDimension","legendBoxWidth","legendBoxHeight","fillText","itemHeight","left","closePath","maxBoxHeight","bottomMostLegendItemY","lastLegendItemPos","reduce","prevSize","coords","beginPath","moveTo","lineTo","fill","rightBottomPos","getScaleBarInfo","rightOffset","bottomOffset","stroke","filename","pdf","undefined","setFont","setFontType","setFontSize","addImage","toDataURL","error","scaleLine","clientWidth","innerText","proxifyWMSLayers","layerobj","AllLayersList","timeDimensionLayer","currUrl","includes","setUrls","updateSize","obj","Properties","objj","deactivated","PrintMap","mapObj","HighLightedLayer","MajorBasin","AllLayers","selectedFilesOnAYear","mapInitilization","esri_world_topomap","Tile","XYZ","attributions","View","Map","layers","renderer","controls","attribution","extend","fit","legendObjectCollection","legendObjectEnabled","lObj","addGeoCodingAndInteractionBar","search","SearchNominatim","polygon","reverse","position","GeoCodingAndDrawLayer","Vector","removePreviousSearchFeature","osm_id","UpDateVectorLayerStyle","forEachFeature","StyleObj","Stroke","Fill","anchorXUnits","anchorYUnits","lineDash","Circle","addControl","e","geojson","getProjection","coordinate","getZoom","addPrintMapFunctionality","PrintButton","html","handleClick","olExtLegentItem","LayerSwitcherClick","drawer","olextPrintFunction","CanvasTitle","Text","legendCtrl","CanvasScaleLine","printControl","PrintDialog","setOrientation","orientation","print","imageWidth","imageHeight","toBlob","blob","imageType","quality","warn","beforeMount","LayerSwitcherControl","chartComponentRecent","mapControlsRecent","mapComponentRecent","filterCoodrdinate","archiveDate","bd","archive","O3_TROPOMI","SO2_TROPOMI","NO2_TROPOMI","CO_TROPOMI","CO_TROPOMI_SERVIR","NO2_AST","SO2_AST","AeronetAODStyleFun","AeronetStyle","RegularShape","points","angle","USEmbassyPM25StyleFun","USEmbassyAODStyle","PI","USEmbassyO3StyleFun","RGBComposite","aoi","createGIF","CreateGIFImage","plotInfo","assign","TimeZone","Product","Source","getForecastWMSList","result","parser","DOMParser","xmlDoc","parseFromString","interestedDate","forecastDate","DimensionTag","getElementsByTagName","DateHavingCatalog","getAttribute","result1","parser1","xmlDoc1","dataset","data__layer__initilize__Archive","data__layer__initilize__Forecast","startDateArchive","endDateArchive","forecast","LayerCollectionObjet","Recent","Archive","Forecast","cascaderObject","otherval","styleFunction","NotificationWhenAdded","mainbar","Bar","setPosition","editbar","toggleOne","group","sbar","selectCtrl","getInteraction","info","interaction","hitTolerance","bar","autoActivate","active","pedit","fedit","geometryFunction","coordinates","geometry","nbpts","setCoordinates","concat","removeLastPoint","finishDrawing","handleAddFeature","evt","coordi","getCoordinates","area","outputArea","round","li","LineString","outputLength","collapsed","getInventory","Inventory","chartComponentArchive","mapControlsArchive","mapComponentArchive","forecasteDate","WRF_Chem_PM","WRF_Chem_O3","WRF_Chem_SO2","WRF_Chem_NO2","WRF_Chem_CO","isNoData","OnlyOnceForInitialCompute","recentPollutant","changeDataPeriod","isDataThere","addVectorLayerToMap","GeoJSON","GeoJSONParse","objFeature","stationOnCascaderObject","isDatathere","legendPathImage","VectorLayer","selId","readFeatures","l3","ClearWMSWithNoDataAndVectorDatawithNodata","total","currentValue","dd","currentValue1","currentIndex","arr","enableTrueColorMap","toUpperCase","chartComponentForecast","mapControlsForecast","mapComponentForecast","gutter","PlotOptionValue","ChangePlotOption","PlotOptions","CascaderValue","RefreshChart","value1","getHCObject","ArgParam","plotBackgroundColor","plotShadow","cascaderValue","tooltip","pointFormat","accessibility","point","valueSuffix","pie","allowPointSelect","cursor","dataLabels","connectorColor","showInLegend","colorByPoint","announceNewData","borderWidth","headerFormat","TickPositioner__yyyy_func","PositionList","TickPositionerFunction","TickPositioner__yyyy","DateFormatter__dd_func","Timeseries","zoomType","dateTimeLabelFormats","tickPositioner","labels","formatter","code","hcObject","HCObject","ChartDiv","destroy","indexVal","pltOpt","casVal","form","inline","getIsInlineFormorNot","inventory","updateMapLayer","pollutants","sectors","initialYear","allYears","unshift","dataSelect","region","periodicity","periodicityOutlook","ensemble","layerList","getLayerPropObj","Invertory","pollutant","selArray","ar","propForSLD","rangeLength","RangeVal","classType","range","retObj","showLegendTitle","parameterName","isInlineForm","onSubmit","getInLineData","$store","setDefaultMap","geoJson","custom-class","drawerAppendToBody","modal","Control","element","getElementById","changeInventory","addTimeDimensionLayer","selectedLayr","checkLayer","ll","EdalSldObj","EDALSLD","WMSList","legendUrl","getEDALSLD","mm","customLegendElement","getLegendHTMLElement","lk","maxHistory","addAdminLayers","countryBoundary","provinceBoundary","DistrictBoundary","PalikaBoundary","l1","l2","l4","RefreshInformation","showStat","shadow","infoHeading","tableDataStat","label-class-name","layerIndex","InterestedLayer","cobj","ind","currentLayerIndex","currentLayerId","layerDetail","chartComponentEmission","mapControlsEmission","mapComponentEmission","EmissionStatistics","String","TabBodyRecent","TabBodyArchive","TabBodyForecast","TabBodyEmission","alt","centerDialogVisible","icon","footer","LangVal"],"mappings":"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","file":"static/airquality/js/chunk-common.bda88a10d3c4504af35f.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TabBodyForecast.vue?vue&type=style&index=0&id=2b534622&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapComponentEmission.vue?vue&type=style&index=0&id=4070f67b&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./emission.vue?vue&type=style&index=0&id=e161da38&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./LayerSwitcherControl.vue?vue&type=style&index=0&id=023fa698&scoped=true&lang=css\"","import axios from \"axios\";\nimport {Action} from \"../actionType\";\n// import eventHub from '../../utils/utils';\n// import helper from \"../../utils/helpers\";\n\n\nexport const actionBase = axios.create({\n    baseURL: Action.Base\n});\n\nexport async function postApiWithoutToken(action, param) {\n    // eventHub.$emit('before-request');\n    return await new Promise((resolve, reject) => {\n        // setXCSRFToken();\n        // param.csrfmiddlewaretoken=document.querySelector('[name=csrfmiddlewaretoken]').value;\n        actionBase.post(\"/\" + action, param).then(\n            res => {\n                // eventHub.$emit('after-response');\n                resolve(res.data);\n            },\n            err => {\n                console.log(\"error on postapi\");\n                console.log(err);\n                reject(err);\n            }\n        );\n    });\n};\n\nexport async function getApiWithoutToken(action) {\n    return await new Promise((resolve, reject) => {\n        actionBase.get(\"/\" + action).then(\n            res => {\n                resolve(res.data);\n            },\n            err => {\n                console.log(\"hello error getApiWithoutToken\");\n                console.log(err);\n                reject(err);\n            }\n        );\n    });\n};\n\nexport async function getApiWithoutTokenAbsoluteURL(action) {\n    return await new Promise((resolve, reject) => {\n        actionBase.get(action).then(\n            res => {\n                resolve(res.data);\n            },\n            err => {\n                console.log(\"hello error getApiWithoutToken\");\n                console.log(err);\n                reject(err);\n            }\n        );\n    });\n};\n\n// function getCookie(name) {\n//     let cookieValue = null;\n//     if (document.cookie && document.cookie !== '') {\n//         const cookies = document.cookie.split(';');\n//         for (let i = 0; i < cookies.length; i++) {\n//             const cookie = cookies[i].trim();\n//             // Does this cookie string begin with the name we want?\n//             if (cookie.substring(0, name.length + 1) === (name + '=')) {\n//                 cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n//                 break;\n//             }\n//         }\n//     }\n//     return cookieValue;\n// }\n//\n// function setXCSRFToken() {\n//     let csrftokenCookie = getCookie('csrftoken');\n//     actionBase.defaults.headers.common[\"X-CSRFToken\"] = csrftokenCookie;\n// }\n\n//\n// function clearXCSRFToken() {\n//     delete actionBase.defaults.headers.common[\"X-CSRFToken\"];\n// }\n","<template>\n  <div class=\"all-conts\">\n    <el-container class=\"cont-outer\">\n      <el-header>\n        <NavBar></NavBar>\n      </el-header>\n      <el-container class=\"sidebar-main\">\n        <Tabs :activeTab=\"currentTab\"></Tabs>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\n\nimport NavBar from \"../components/NavBar\";\nimport Tabs from \"../components/Tabs\";\nimport {ReDirectToSmogAppDotCom, reDirectHTTPSToHTTP} from \"../utils/ReDirect\";\n\n// https://codepen.io/suman111/pen/ExmdwxP?editors=0010\n\nexport default {\n  name: \"emission\",\n\n  components: {\n    NavBar,\n    Tabs,\n  },\n  data() {\n    return {\n      selectedTab: 'Emission',\n    };\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  },\n  methods: {\n    getCurrentTab() {\n      return this.selectedTab;\n    }\n  },\n  beforeCreate() {\n    ReDirectToSmogAppDotCom();\n    reDirectHTTPSToHTTP();\n  }\n};\n\n</script>\n\n<style lang=\"scss\">\n@import \"../utils/main\";\n\n</style>\n","import { render } from \"./emission.vue?vue&type=template&id=e161da38\"\nimport script from \"./emission.vue?vue&type=script&lang=js\"\nexport * from \"./emission.vue?vue&type=script&lang=js\"\n\nimport \"./emission.vue?vue&type=style&index=0&id=e161da38&lang=scss\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {getApiWithoutToken, getApiWithoutTokenAbsoluteURL, postApiWithoutToken} from './api';\nimport {Action} from '../actionType';\n// import {ThreddsServer} from '../../config';\n\nexport async function getCascaderOptions(){\n        const action = Action.CascaderOptions\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n\nexport async function PostChartDataProcess(param){\n        const action=Action.ChartDataProcess;\n        const response= await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function GETLayerInfoStat(param){\n        const action=Action.LayerInfoStat;\n        const response= await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function GETCountryGeojson(){\n        const action=Action.GeoServerBase+\"/AirQuality/ows?ID=1&service=WFS&version=1.0.0&request=GetFeature&typeName=AirQuality%3Anepal_provincial_boundary&maxFeatures=50&outputFormat=application%2Fjson&CQL_FILTER=pr_name='Bagmati'\"\n        const response= await getApiWithoutTokenAbsoluteURL(action);\n        return response;\n}","import {createStore} from \"vuex\";\nimport {getCascaderOptions, GETCountryGeojson, GETLayerInfoStat, PostChartDataProcess} from \"../api/emission\";\n\nexport default createStore({\n    state() {\n        return {\n            CascaderInventriesComparison: [],\n            CascaderSectorContribution: [],\n            CascaderSectorShare: [],\n            CascaderTimeSeries: [],\n            selectInteractionObj: null,\n            TimeSeriesLayerCollection: [],\n            vectorLayerSource:null,\n            mapObject:null,\n        };\n    },\n    mutations: {\n        setCascaderInventriesComparison(state, payload) {\n            state.CascaderInventriesComparison = payload;\n        }, setCascaderSectorContribution(state, payload) {\n            state.CascaderSectorContribution = payload;\n        }, setCascaderSectorShare(state, payload) {\n            state.CascaderSectorShare = payload;\n        }, setCascaderTimeSeries(state, payload) {\n            state.CascaderTimeSeries = payload;\n        }, setSelectInteractionObj(state, payload) {\n            state.selectInteractionObj = payload;\n        },setVectorLayerSource(state, payload) {\n            state.vectorLayerSource = payload;\n        },setmapObject(state, payload) {\n            state.mapObject = payload;\n        },\n        appendTimeSeriesLayerCollection(state, payload) {\n            state.TimeSeriesLayerCollection.push(payload);\n        }\n    },\n    actions: {\n        async getCascaderOptions(context) {\n            let data = await getCascaderOptions();\n            context.commit(\"setCascaderInventriesComparison\", data.InventriesComparison);\n            context.commit(\"setCascaderSectorContribution\", data.SectorContribution);\n            context.commit(\"setCascaderSectorShare\", data.SectorShare);\n            context.commit(\"setCascaderTimeSeries\", data.TimeSeries);\n            return data\n        },\n        async PostChartDataProcess(context, param) {\n            let data = await PostChartDataProcess(param);\n            return data;\n        },\n        async GetLayerStatInfo(context,param) {\n            let data = await GETLayerInfoStat(param);\n            return data;\n        },\n        async GETCountryGeojson() {\n            let data = await GETCountryGeojson();\n            return data;\n        },\n    },\n    getters: {},\n    modules: {},\n});","import { createApp } from \"vue\";\nimport emission from \"./views/emission.vue\";\nimport store from \"./store/modules/emission\";\nimport ElementPlus from 'element-plus';\nimport 'element-plus/theme-chalk/index.css';\n\n\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nimport {faHandPointer,faTimes,faMapMarkerAlt,faDrawPolygon,faPrint,faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faHandPointer);\nlibrary.add(faTimes);\nlibrary.add(faMapMarkerAlt);\nlibrary.add(faDrawPolygon);\nlibrary.add(faPrint);\nlibrary.add(faInfoCircle);\n\n\n\nconst app = createApp(emission);\napp.component(\"font-awesome-icon\", FontAwesomeIcon);\napp.use(store);\napp.use(ElementPlus);\napp.mount('#app');\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./chartComponentForecast.vue?vue&type=style&index=0&id=45972e81&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"static/airquality/images/layers.svg\";","<template>\n  <div class=\"all-conts\">\n    <el-container class=\"cont-outer\">\n      <el-header>\n        <NavBar></NavBar>\n      </el-header>\n      <el-container class=\"sidebar-main\">\n        <Tabs :activeTab=\"currentTab\"></Tabs>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport {ReDirectToSmogAppDotCom, reDirectHTTPSToHTTP} from '../utils/ReDirect'\nimport NavBar from \"../components/NavBar\";\nimport Tabs from \"../components/Tabs\";\n\n// import emissionTabBody from \"../components/emissionTabBody\";\n// https://codepen.io/suman111/pen/ExmdwxP?editors=0010\n\nexport default {\n  name: \"current\",\n\n  components: {\n    NavBar,\n    Tabs,\n  },\n  data() {\n    return {\n      selectedTab: 'Archive',\n    };\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  },\n  methods: {\n    getCurrentTab() {\n      return this.selectedTab;\n    }\n  },\n  beforeCreate() {\n    ReDirectToSmogAppDotCom();\n    reDirectHTTPSToHTTP();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../utils/main\";\n\n\n</style>\n","import { render } from \"./airqualitynpArchive.vue?vue&type=template&id=013e60c6\"\nimport script from \"./airqualitynpArchive.vue?vue&type=script&lang=js\"\nexport * from \"./airqualitynpArchive.vue?vue&type=script&lang=js\"\n\nimport \"./airqualitynpArchive.vue?vue&type=style&index=0&id=013e60c6&lang=scss\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createStore} from \"vuex\";\nimport {\n    getCityData,\n    PostSlicedFromCatalog,\n    getGeoJsonForOneSatation,\n    PostGetStationData,\n    PostGet2DImage, TimeSeriesRasterQuery, getDefaultGroundObservation\n} from \"../api/airquality\";\n\nexport default createStore({\n    state() {\n        return {\n            CascaderInventriesComparison: [],\n            CascaderSectorContribution: [],\n            CascaderSectorShare: [],\n            CascaderTimeSeries: [],\n            SelectedLayerObj: null,\n\n            selectInteraction: null,\n            mapObject: null,\n            TimeSeriesLayerCollection: [],\n            WorkingVectorLayer: null,\n            mapControlVariable: {\n                //for printing Legend Object\n                LegendObject: null,\n                LegendItemList: [],\n\n                data_period: 'Archive',\n                select_by: 'Parameter',\n\n                // Location parameter\n                location_by: 'default_locations',\n                default_location: '',\n                is_AOI_Feature_selected: false,\n                location_by_wktValue: '',\n                location_by_geometryType: '',\n                location_by_default_level_value: '',\n\n                location_by_pollutant_value1: [],\n                location_by_pollutant_value2: [],\n                location_by_pollutant_value3: [],\n                location_by_pollutant_value4: [],\n\n                //parameter parameter\n                radioValue: 1,\n                parameter_by_pollutant_value: [],\n                is_parameter_by_pollutant_value_stationData: true,\n\n                parameter_by_pollutant_value_stationData_val1: '',\n                parameter_by_pollutant_value_stationData_val2: '',\n                parameter_by_pollutant_value_stationData_val3: '',\n                parameter_by_pollutant_value_stationData_val4: '',\n\n                parameter_by_location__1: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n\n                parameter_by_location__2: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n\n                parameter_by_location__3: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n\n                parameter_by_location__4: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n\n            },\n\n            PrintMapComponentData: {\n                PrintMapDialogVisible: false\n            }\n        };\n    },\n    mutations: {\n        setCascaderInventriesComparison(state, payload) {\n            state.CascaderInventriesComparison = payload;\n        }, setCascaderSectorContribution(state, payload) {\n            state.CascaderSectorContribution = payload;\n        }, setCascaderSectorShare(state, payload) {\n            state.CascaderSectorShare = payload;\n        }, setCascaderTimeSeries(state, payload) {\n            state.CascaderTimeSeries = payload;\n        }, setSelectedLayerObj(state, payload) {\n            state.SelectedLayerObj = payload;\n        }, setSelectInteraction(state, payload) {\n            state.selectInteraction = payload;\n        }, setMapObject(state, payload) {\n            state.mapObject = payload;\n        }, setWorkingVectorLayer(state, payload) {\n            state.WorkingVectorLayer = payload;\n        },\n        appendTimeSeriesLayerCollection(state, payload) {\n            state.TimeSeriesLayerCollection.push(payload);\n        },\n\n        removeLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent('remove',payload);\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'remove',target:payload});\n\n            // state.mapControlVariable.LegendObject.removeItem(payload);\n            state.mapControlVariable.LegendObject.getItems().remove(payload);\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendObject.refresh();\n\n\n            let index = false;\n            state.mapControlVariable.LegendItemList.forEach(function (it, idx) {\n                if (it.id == payload.id) {\n                    index = idx;\n                }\n            });\n            if (index !== false) {\n                state.mapControlVariable.LegendItemList.splice(index, 1);\n            }\n\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendItemList.forEach((it) => {\n                state.mapControlVariable.LegendObject.addItem(it);\n            });\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n        addLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'add',target:payload});\n            state.mapControlVariable.LegendItemList.push(payload);\n            state.mapControlVariable.LegendObject.addItem(payload);\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n    },\n    actions: {\n        // async getCascaderOptions(context) {\n        //     let data = await getCascaderOptions();\n        //     context.commit(\"setCascaderInventriesComparison\", data.InventriesComparison)\n        //     context.commit(\"setCascaderSectorContribution\", data.SectorContribution)\n        //     context.commit(\"setCascaderSectorShare\", data.SectorShare)\n        //     context.commit(\"setCascaderTimeSeries\", data.TimeSeries)\n        //     return data\n        // },\n        // async PostChartDataProcess(context, param) {\n        //     let data = await PostChartDataProcess(param);\n        //     return data;\n        // },\n        // async GetLayerStatInfo(context, param) {\n        //     let data = await GETLayerInfoStat(param);\n        //     return data;\n        // },\n        async getCityData(context, param) {\n            let data = await getCityData(param);\n            return data;\n        },\n        async getGeoJsonForOneSatation(context, stringParam) {\n            let data = await getGeoJsonForOneSatation(stringParam);\n            return data;\n        },\n        async PostSlicedFromCatalog(context, param) {\n            let data = await PostSlicedFromCatalog(param);\n            return data;\n        },\n        async PostGetStationData(context, param) {\n            let data = await PostGetStationData(param);\n            return data;\n        },\n        async TimeSeriesRasterQuery(context, param) {\n            let data = await TimeSeriesRasterQuery(param);\n            return data;\n        },\n        async PostGet2DImage(context, param) {\n            let data = await PostGet2DImage(param);\n            return data;\n        },\n        async getDefaultGroundObservation(context, param) {\n            let data = await getDefaultGroundObservation(param);\n            return data;\n        },\n    },\n    getters: {\n        getLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                // console.log(TimeSeriesLayerCollection[i].getProperties().id);\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i].getLayer();\n                    break;\n                }\n            }\n            return layer;\n        }, getBindedLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i];\n                    break;\n                }\n            }\n            return layer;\n        }\n    },\n    modules: {},\n});","import { createApp } from \"vue\";\nimport emission from \"./views/airqualitynpArchive.vue\";\nimport store from \"./store/modules/airqualityArchive\";\nimport ElementPlus from 'element-plus';\nimport 'element-plus/theme-chalk/index.css';\nimport 'ol-ext/dist/ol-ext.css';\n\n// fontawesome\n\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport {faHandPointer,faTimes,faMapMarkerAlt,faDrawPolygon,faPrint,faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faHandPointer);\nlibrary.add(faTimes);\nlibrary.add(faMapMarkerAlt);\nlibrary.add(faDrawPolygon);\nlibrary.add(faPrint);\nlibrary.add(faInfoCircle);\n\n\nconst app = createApp(emission);\napp.component(\"font-awesome-icon\", FontAwesomeIcon);\napp.use(store);\napp.use(ElementPlus);\napp.mount('#app');","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./PrintMap.vue?vue&type=style&index=0&id=56944bf5&scoped=true&lang=css\"","export function ReDirectToSmogAppDotCom() {\n    if (window.location.host == 'smog.spatialapps.net') {\n        var RDirect = document.createElement('a');\n        RDirect.href = 'http://smog.icimod.org' + window.location.pathname;\n        RDirect.click();\n    }\n}\n\n\n\nexport function reDirectHTTPSToHTTP() {\n    if (window.location.href.slice(0, 5) == 'https') {\n        var RDirect = document.createElement('a');\n        RDirect.href = document.location.href.slice(0,4) + document.location.href.slice(5)\n        RDirect.click();\n    }\n}\n\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapComponentForecast.vue?vue&type=style&index=0&id=e9fa308c&lang=css\"","module.exports = __webpack_public_path__ + \"static/airquality/images/markers_default.png\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./chartComponentEmission.vue?vue&type=style&index=0&id=9e37318e&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TabBodyRecent.vue?vue&type=style&index=0&id=0b625034&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapLagend.vue?vue&type=style&index=0&id=625a8cfc&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./airqualitynpForecast.vue?vue&type=style&index=0&id=64de3a80&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./airqualitynpArchive.vue?vue&type=style&index=0&id=013e60c6&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TabBodyEmission.vue?vue&type=style&index=0&id=e4c71dbe&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./chartComponentRecent.vue?vue&type=style&index=0&id=7d9e56f1&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./chartComponentArchive.vue?vue&type=style&index=0&id=60bb07dd&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapControlsEmission.vue?vue&type=style&index=0&id=fb7955d2&scoped=true&lang=css\"","// import {TethysAppName} from \"../config\";\n\n\nlet BaseUrl = null;\n\nif (process.env.NODE_ENV === \"production\") {\n    // BaseUrl = \"http://localhost:8000\";\n\n    BaseUrl = 'http://smog.icimod.org';\n\n} else {\n    BaseUrl = \"http://localhost:8000\";\n}\n\nexport let Action = {\n    Base: BaseUrl,\n    GeoServerBase:'http://smog.spatialapps.net:8080/geoserver',\n    // Base : 'http://110.44.114.244:8001/',\n    CityData: \"apps/airquality/getCityData\",\n    Aeronet: 'apps/airquality/aeronetaodpm',\n    USEmbassyAOD: 'apps/airquality/usembassypm',\n    getGeoJSONofStations: 'apps/airquality/getGeoJSONofStations',\n    getGeoJsonForOneSatation: 'apps/airquality/getGeoJsonForOneSatation',\n    getAllStationsID: 'apps/airquality/getAllStationsID',\n\n\n    commonAPI: 'apps/airquality/getData/',\n    RegionGeojson: 'apps/airquality/geojsonregion',\n    AOIPolygon: 'apps/airquality/aoipolygon',\n    GetMapImage: 'apps/airquality/getmapimage/',\n    GetImage: 'apps/airquality/downloadImage',\n    SlicedFromCatalog: 'apps/airquality/slicedfromcatalog/',\n    TimeSeriesRasterQuery: 'apps/airquality/timeseriesmodeldata/',\n    trueColorLegendImage: 'apps/airquality/trueColorLegendImage/',\n    defaultObservationStation:'apps/airquality/defaultobservationstation/',\n\n\n    //emission\n    CascaderOptions:'apps/airquality/getCascaderData/',\n    ChartDataProcess:'apps/airquality/getChartDataProcess/',\n    LayerInfoStat:'apps/airquality/getLayerInfoStat/',\n\n\n};\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapComponentRecent.vue?vue&type=style&index=0&id=d0914df6&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapControlsArchive.vue?vue&type=style&index=0&id=02e95031&scoped=true&lang=css\"","<template>\n  <div class=\"all-conts\">\n    <el-container class=\"cont-outer\">\n      <el-header>\n        <NavBar></NavBar>\n      </el-header>\n      <el-container class=\"sidebar-main\">\n        <Tabs :activeTab=\"currentTab\"></Tabs>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\n\nimport NavBar from \"../components/NavBar\";\nimport Tabs from \"../components/Tabs\"\nimport {ReDirectToSmogAppDotCom, reDirectHTTPSToHTTP} from \"../utils/ReDirect\";\n// import emissionTabBody from \"../components/emissionTabBody\";\n// https://codepen.io/suman111/pen/ExmdwxP?editors=0010\n\nexport default {\n  name: \"current\",\n\n  components: {\n    NavBar,\n    Tabs,\n  },\n\n  data() {\n    return {\n      selectedTab: 'Recent',\n    };\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  },\n  methods: {\n    getCurrentTab() {\n      return this.selectedTab;\n    }\n  },\n  beforeCreate() {\n    ReDirectToSmogAppDotCom();\n    reDirectHTTPSToHTTP();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../utils/main\";\n\n\n</style>\n","import { render } from \"./airqualitynpRecent.vue?vue&type=template&id=466adae8\"\nimport script from \"./airqualitynpRecent.vue?vue&type=script&lang=js\"\nexport * from \"./airqualitynpRecent.vue?vue&type=script&lang=js\"\n\nimport \"./airqualitynpRecent.vue?vue&type=style&index=0&id=466adae8&lang=scss\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createStore} from \"vuex\";\nimport {\n    getCityData,\n    PostSlicedFromCatalog,\n    getGeoJsonForOneSatation,\n    PostGetStationData,\n    PostGet2DImage, TimeSeriesRasterQuery, getDefaultGroundObservation\n} from \"../api/airquality\";\n\nexport default createStore({\n    state() {\n        return {\n            CascaderInventriesComparison: [],\n            CascaderSectorContribution: [],\n            CascaderSectorShare: [],\n            CascaderTimeSeries: [],\n            SelectedLayerObj: null,\n\n            selectInteraction: null,\n            mapObject: null,\n            TimeSeriesLayerCollection: [],\n            WorkingVectorLayer: null,\n            mapControlVariable: {\n                //for printing Legend Object\n                LegendObject: null,\n                LegendItemList: [],\n\n                data_period: 'Recent',\n                select_by: 'Parameter',\n\n                // Location parameter\n                location_by: 'default_locations',\n                default_location: '',\n                is_AOI_Feature_selected: false,\n                location_by_wktValue: '',\n                location_by_geometryType: '',\n                location_by_default_level_value: '',\n\n                location_by_pollutant_value1: [],\n                location_by_pollutant_value2: [],\n                location_by_pollutant_value3: [],\n                location_by_pollutant_value4: [],\n\n                //parameter parameter\n                radioValue: 1,\n                parameter_by_pollutant_value: '',\n                is_parameter_by_pollutant_value_stationData: true,\n\n                parameter_by_pollutant_value_stationData_val1: '',\n                parameter_by_pollutant_value_stationData_val2: '',\n                parameter_by_pollutant_value_stationData_val3: '',\n                parameter_by_pollutant_value_stationData_val4: '',\n\n                parameter_by_location__1: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__2: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__3: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__4: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n            },\n\n            PrintMapComponentData: {\n                PrintMapDialogVisible: false\n            }\n        };\n    },\n    mutations: {\n        setCascaderInventriesComparison(state, payload) {\n            state.CascaderInventriesComparison = payload;\n        }, setCascaderSectorContribution(state, payload) {\n            state.CascaderSectorContribution = payload;\n        }, setCascaderSectorShare(state, payload) {\n            state.CascaderSectorShare = payload;\n        }, setCascaderTimeSeries(state, payload) {\n            state.CascaderTimeSeries = payload;\n        }, setSelectedLayerObj(state, payload) {\n            state.SelectedLayerObj = payload;\n        }, setSelectInteraction(state, payload) {\n            state.selectInteraction = payload;\n        }, setMapObject(state, payload) {\n            state.mapObject = payload;\n        }, setWorkingVectorLayer(state, payload) {\n            state.WorkingVectorLayer = payload;\n        },\n        appendTimeSeriesLayerCollection(state, payload) {\n            state.TimeSeriesLayerCollection.push(payload);\n        },\n\n        removeLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent('remove',payload);\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'remove',target:payload});\n            // state.mapControlVariable.LegendObject.removeItem(payload);\n            state.mapControlVariable.LegendObject.getItems().remove(payload);\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendObject.refresh();\n\n\n            let index = false;\n            state.mapControlVariable.LegendItemList.forEach(function (it, idx) {\n                if (it.id == payload.id) {\n                    index = idx;\n                }\n            });\n            if (index !== false) {\n                state.mapControlVariable.LegendItemList.splice(index, 1);\n            }\n\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendItemList.forEach((it) => {\n                state.mapControlVariable.LegendObject.addItem(it);\n            });\n            state.mapControlVariable.LegendObject.refresh();\n        },\n        addLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'add',target:payload});\n            state.mapControlVariable.LegendItemList.push(payload);\n            state.mapControlVariable.LegendObject.addItem(payload);\n            state.mapControlVariable.LegendObject.refresh();\n        }\n\n    },\n    actions: {\n        async getCityData(context, param) {\n            let data = await getCityData(param);\n            return data;\n        },\n        async getGeoJsonForOneSatation(context, stringParam) {\n            let data = await getGeoJsonForOneSatation(stringParam);\n            return data;\n        },\n        async PostSlicedFromCatalog(context, param) {\n            let data = await PostSlicedFromCatalog(param);\n            return data;\n        },\n        async PostGetStationData(context, param) {\n            let data = await PostGetStationData(param);\n            return data;\n        },\n        async TimeSeriesRasterQuery(context, param) {\n            let data = await TimeSeriesRasterQuery(param);\n            return data;\n        },\n        async PostGet2DImage(context, param) {\n            let data = await PostGet2DImage(param);\n            return data;\n        },\n        async getDefaultGroundObservation(context, param) {\n            let data = await getDefaultGroundObservation(param);\n            return data;\n        },\n    },\n    getters: {\n        getLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                // console.log(TimeSeriesLayerCollection[i].getProperties().id);\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i].getLayer();\n                    break;\n                }\n            }\n            return layer;\n        }, getBindedLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i];\n                    break;\n                }\n            }\n            return layer;\n        }\n    },\n    modules: {},\n});","import { createApp } from \"vue\";\nimport emission from \"./views/airqualitynpRecent.vue\";\nimport store from \"./store/modules/airqualityRecent\";\nimport ElementPlus from 'element-plus';\nimport 'element-plus/theme-chalk/index.css';\nimport 'ol-ext/dist/ol-ext.css'\nimport {library,dom} from \"@fortawesome/fontawesome-svg-core\";\nimport {faHandPointer,faTimes,faMapMarkerAlt,faDrawPolygon,faPrint,faInfo,faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/vue-fontawesome\";\n\n\nlibrary.add(faHandPointer);\nlibrary.add(faTimes);\nlibrary.add(faMapMarkerAlt);\nlibrary.add(faDrawPolygon);\nlibrary.add(faPrint);\nlibrary.add(faInfo);\nlibrary.add(faInfoCircle);\ndom.watch();\n\n\nconst app = createApp(emission);\napp.component(\"font-awesome-icon\", FontAwesomeIcon);\napp.use(store);\napp.use(ElementPlus);\napp.mount('#app');\n\n","module.exports = __webpack_public_path__ + \"static/airquality/images/logo-icimod.png\";","module.exports = __webpack_public_path__ + \"static/airquality/images/AODAeroNet.jpg\";","<template>\n  <el-tabs type=\"border-card\" class=\"tabs-outer\" height=\"28px\" v-model=\"currentTab\" @tab-click=\"changePage\">\n\n    <el-tab-pane key=\"Recent\" name=\"Recent\" label=\"Recent\" class=\"full-height\">\n      <TabBodyRecent v-if=\"currentTab ==='Recent'\"></TabBodyRecent>\n    </el-tab-pane>\n\n    <el-tab-pane key=\"Archive\" name=\"Archive\" label=\"Archive\" class=\"full-height\">\n      <TabBodyArchive v-if=\"currentTab ==='Archive'\"></TabBodyArchive>\n    </el-tab-pane>\n\n    <el-tab-pane key=\"Forecast\" name=\"Forecast\" label=\"Forecast\" class=\"full-height\">\n      <TabBodyForecast v-if=\"currentTab ==='Forecast'\"></TabBodyForecast>\n    </el-tab-pane>\n\n    <el-tab-pane key=\"Forecast\" name=\"Emission\" label=\"Emission\" class=\"full-height\">\n      <TabBodyEmission v-if=\"currentTab ==='Emission'\"></TabBodyEmission>\n    </el-tab-pane>\n  </el-tabs>\n</template>\n\n<script>\nimport {TethysAppName} from \"../config\";\n// import outlookTabBody from \"./outlookTabBody\";\n\nimport TabBodyRecent from \"./TabBodyRecent\";\nimport TabBodyArchive from \"./TabBodyArchive\";\nimport TabBodyForecast from \"./TabBodyForecast\";\nimport TabBodyEmission from \"./TabBodyEmission\";\n\nexport default {\n  name: \"Tabs\",\n  props: {\n    activeTab: {\n      type: String,\n      required: true\n    },\n  },\n  components: {\n    TabBodyRecent,\n    TabBodyArchive,\n    TabBodyForecast,\n    TabBodyEmission,\n  },\n  data() {\n    return {selectedTab: 'emission'}\n  },\n  methods: {\n    changePage(evt) {\n      var download = document.createElement('a');\n      if (evt.props.name === \"Recent\") {\n        download.href = \"/apps/\" + TethysAppName + \"/recent/\";\n      } else if (evt.props.name === \"Archive\") {\n        download.href = \"/apps/\" + TethysAppName + \"/archive/\";\n      } else if (evt.props.name === \"Forecast\") {\n        download.href = \"/apps/\" + TethysAppName + \"/forecast/\";\n      } else {\n        download.href = \"/apps/\" + TethysAppName + \"/emission/\";\n      }\n      // }\n      download.click();\n    },\n    getCurrentTab() {\n      return this.activeTab\n    }\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.tabs-outer {\n  width: 100%;\n}\n\n\n.tabs-outer .el-tabs__nav-scroll, .tabs-outer .el-tabs__nav.is-top, .el-tabs__item {\n  height: 28px;\n}\n\n.el-tabs__item.is-active {\n  height: 29px;\n}\n\n.el-tabs__nav-scroll {\n  color: white;\n}\n\n.el-tabs--border-card {\n  border: 0px solid #DCDFE6;\n}\n\n.tabs-outer .el-tabs__item {\n  color: white !important;\n}\n\n.el-tabs__item.is-active {\n  background-color: #9cb4be !important;\n  border-right-color: #9cb4be !important;\n  border-left-color: #9cb4be !important;\n}\n\n.el-tabs__content {\n  background-color: #9cb4be !important;\n}\n\n.el-tabs__item {\n  line-height: 32px\n}\n\n.el-tabs__content {\n  height: calc(100% - 28px);\n  padding: 0px !important;\n}\n\n.full-height {\n  height: 100%;\n}\n</style>","export var TethysAppName = \"airquality\";\n\nexport var TethysAPIAppName = \"airquality\";\n\nexport let threddDataSource = 'http://smog.spatialapps.net:8080/thredds/';\n\nlet GeoServerHostLVar = null;\n\nif (process.env.NODE_ENV === \"production\") {\n    GeoServerHostLVar = 'http://smog.spatialapps.net:8080';\n} else {\n    GeoServerHostLVar = 'http://smog.spatialapps.net:8080';\n}\n\nexport let GeoServerHost = GeoServerHostLVar;\n\nexport var DefaultMaskWMS = false;\n\nexport var DefaultPlotInfo = {\n    colorScheme: 'jet',\n    BBOX: [60, 15, 110, 40],\n    tickSpan: 10,\n    Resolution: 600,\n    width: 12,\n    height: 9\n}\n","<template>\n  <el-row class=\"airquality\">\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapControlsRecent></mapControlsRecent>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-10 padding-top-5 padding-right-5\">\n            <chartComponentRecent  :IndexValue=\"1\"></chartComponentRecent>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"12\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapComponentRecent></mapComponentRecent>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentRecent  :IndexValue=\"2\"></chartComponentRecent>\n        </el-col>\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentRecent  :IndexValue=\"3\"></chartComponentRecent>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-10\">\n                    <LayerSwitcherControl></LayerSwitcherControl>\n\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-10\">\n          <chartComponentRecent  :IndexValue=\"4\"></chartComponentRecent>\n        </el-col>\n      </el-row>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n\nimport LayerSwitcherControl from './LayerSwitcherControl';\n\n// import about from \"./about\";\nimport chartComponentRecent from \"./chartComponentRecent\";\nimport mapControlsRecent from \"./mapControlsRecent\";\nimport mapComponentRecent from \"./mapComponentRecent\";\n// import {mapActions} from \"vuex\";\n\nexport default {\n  name: \"TabBodyRecent\",\n  components: {\n    LayerSwitcherControl,\n    chartComponentRecent,\n    mapControlsRecent,\n    mapComponentRecent,\n  },\n  methods: {\n    // ...mapActions([\"getCascaderOptions\"]),\n  },\n  async mounted() {\n    // let data = await this.getCascaderOptions();\n    // console.log(data);\n  }\n}\n</script>\n\n<style scoped>\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n.full-height {\n  height: 100%;\n}\n.second-row div{\n  /*height: calc(100% - 12.5px);*/\n}\n</style>\n","<template>\n  <div class=\"card-box full-height full-width layer-collection-div1\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Layer Control\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n        <div class=\"layerCollection\"></div>\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"LayerSwitcherControl\",\n}\n</script>\n\n<style scoped>\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.pollutant-cascader:not(:last-child) {\n  padding-bottom: 10px;\n}\n\n.body-container {\n  height: calc(100% - 50px);\n}\n\n.layer-collection-div1 .body-container{\n    padding: 0px;\n}\n\n\n\n</style>","import { render } from \"./LayerSwitcherControl.vue?vue&type=template&id=023fa698&scoped=true\"\nimport script from \"./LayerSwitcherControl.vue?vue&type=script&lang=js\"\nexport * from \"./LayerSwitcherControl.vue?vue&type=script&lang=js\"\n\nimport \"./LayerSwitcherControl.vue?vue&type=style&index=0&id=023fa698&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-023fa698\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\" ref=\"outerViz\">\n    <div v-if=\"visualizationIn =='chart'\" class=\"chart-div\" :id=\"'chart'+IndexValue\" ref=\"ChartDiv\">\n      <div class=\"flex-center-vertically\">\n        <!--        Please select a layer and draw a feature to view the chart-->\n        <el-skeleton :rows=\"5\" animated/>\n      </div>\n    </div>\n\n    <div v-if=\"visualizationIn =='2Dimage'\" class=\"position-relative  full-width full-height\" ref=\"Image2D\">\n      <div class=\"download-map-Image\" @click=\"downloadImage()\">\n        <i class=\"fas fa-download\"></i>\n      </div>\n      <div class=\"vertically-center\">\n        <img class=\"generated-image\" :width=\"imageInfo.width\" :src=\"imageInfo.url\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport eventHub from \"../utils/utils\"\n\nimport Highcharts from 'highcharts';\n\n// Alternatively, this is how to load Highstock. Highmaps is similar.\n// import Highcharts from 'highcharts/highstock';\n\n// Load the exporting module.\nimport Exporting from 'highcharts/modules/exporting';\nimport ExportData from 'highcharts/modules/export-data';\nimport NOdata from 'highcharts/modules/no-data-to-display'\nimport MoreHighcharts from 'highcharts/highcharts-more';\n\n// Initialize exporting module.\nExporting(Highcharts);\nNOdata(Highcharts);\nMoreHighcharts(Highcharts);\nExportData(Highcharts);\n\n// window.Highcharts = Highcharts;\nimport {AirPollutionWatchApp} from \"../utils/dataRecent\";\nimport {mapActions, mapState, mapGetters} from 'vuex';\n\n\nexport default {\n  name: \"chartComponent\",\n  props: {\n    IndexValue: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      visualizationIn: 'chart',\n      imageInfo: {\n        url: '',\n        downloadFileName: '',\n        width: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"PostGetStationData\", \"PostGet2DImage\", \"TimeSeriesRasterQuery\"]),\n    async renderVisualization() {\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n\n          let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"parameter_by_pollutant_value_stationData_val\" + this.IndexValue]);\n          } else {\n            console.log(\"\");\n            // let Extent = [];\n            // this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].featureExtent.forEach(function (ext1) {\n            //   Extent.push(parseFloat(ext1.toFixed(6)))\n            // });\n            // console.log(Extent);\n            // let layer = await this.getBindedLayer(kk.layerId);\n            // layer.setVisibleDivBind(true);\n            // // let NewMapObj = myApp.CreateMapObject(WorkingIndex);\n            // let layerPropertiesObject = await this.getLayer(kk.layerId).getCurrentLayer().getProperties();\n            // let layerSourceParam = layerPropertiesObject.source.getParams();\n            // // let layerUrl = layerPropertiesObject.source.getUrls()[0].split('wms')[1];\n            // let plotProp = layerPropertiesObject.plotInfo();\n            // plotProp.wmsList = layerPropertiesObject.wmsList;\n            // plotProp.LAYER = layerSourceParam.LAYERS;\n            // plotProp.TIME = layerSourceParam.TIME;\n            // plotProp.COLORSCALERANGE = layerSourceParam.COLORSCALERANGE;\n            // plotProp.BBOX = Extent;\n            // let date = new Date(layerSourceParam.TIME);\n            // let dateTimeFormat = new Intl.DateTimeFormat('en', {year: 'numeric', month: 'short', day: '2-digit'});\n            // let [{value: month}, , {value: day}, , {value: year}] = dateTimeFormat.formatToParts(date)\n            // let completeDateLabel = `${day} ${month} ${year}`;\n            // plotProp.labelName = completeDateLabel + layerPropertiesObject.plotInfo().LabelTitleTime;\n            // this.visualizationIn = '2Dimage';\n            // let w = this.$refs.outerViz.clientWidth;\n            // let h = this.$refs.outerViz.clientHeight;\n            // let width = w / 96;\n            // let height = h / 96;\n            // plotProp.width = width.toFixed(3);\n            // plotProp.height = height.toFixed(3);\n            // plotProp.rid = 0;\n            // let ParseJson = await this.PostGet2DImage(plotProp);\n            // this.imageInfo.url = ParseJson.image;\n            // this.imageInfo.downloadFileName = plotProp.title + '.png';\n            // this.imageInfo.width = w;\n          }\n        } else {\n          //by location\n          let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][2]);\n          }\n        }\n\n    },\n    getCascaderInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    async ObservationDatavisualization(kk, stationId) {\n      let layer = this.getBindedLayer(kk.layerId);\n      layer.setVisibleDivBind(true);\n      let param = {\n        stId: stationId,\n        ModelClass: kk.ModelClass,\n        ModelClassDataList: kk.ModelClassDataList,\n        typeName: kk.typeName,\n        StartDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate),\n        EndDate: this.AirPollutionWatchApp.formatDateWithHHMM(AirPollutionWatchApp.endDate)\n      };\n      let parsedData = await this.PostGetStationData(param);\n      this.visualizationIn = 'chart'\n      var stationObject = kk.childrenData.filter((stdata) => {\n        return stdata.value == stationId\n      })[0]\n\n      let stationName = stationObject.folder_name;\n\n      let title;\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate));\n      } else {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate), this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate));\n      }\n      // debugger;\n      let XaxisLabel = kk.chart.XaxisLabel();\n      let plotType = kk.chart.plotType;\n      let highchartsObj = null;\n      if (plotType === 'point') {\n        highchartsObj = this.AirPollutionWatchApp.datetimePointChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      } else {\n        highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      }\n      Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n\n    },\n    downloadImage() {\n      this.AirPollutionWatchApp.forceDownload(this.imageInfo.url, this.imageInfo.downloadFileName);\n    },\n    async TimeSeriesPlot(kk, WKT, WKTType,default_level_value) {\n\n      let layerBind = this.getBindedLayer(kk.layerId);\n      let layer = layerBind.getLayer();\n\n      let SourceParam = null;\n      let SourceURL = null;\n      let layerProperties = null;\n\n      if (layer.getProperties().ThreddsDataServerVersion) {\n        layerProperties = layer.getProperties();\n        SourceParam = layer.getCurrentLayer().getProperties().source.getParams();\n        SourceURL = [];\n        layerProperties.source.url.forEach(function (val) {\n          SourceURL.push(val.split('/wms/')[1]);\n        });\n\n      } else {\n        layerProperties = layer.getProperties();\n        SourceParam = layer.source.getParams();\n        SourceURL = layer.source.getUrls()[0].split('wms')[1];\n      }\n      let param = {\n        DATADIR: SourceURL,\n        LAYER: SourceParam.LAYERS,\n        wkt: WKT,\n        type: WKTType\n      };\n\n      let parsedData = await this.TimeSeriesRasterQuery(param);\n      if (parsedData.status === 200) {\n        let title = layerProperties.chartDetail.title + \" values\";\n        let subTitle;\n        if (default_level_value) {\n          subTitle = default_level_value;\n        } else {\n          subTitle = parsedData.geom;\n        }\n        let YaxisLabel = layerProperties.chartDetail.unit;\n        let SeriesName = layerProperties.chartDetail.SeriesName;\n        let highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, subTitle, parsedData.SeriesData, SeriesName, YaxisLabel, parsedData.XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1])\n        Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n      }\n    }\n  },\n  computed: {\n    ...mapState([\"mapControlVariable\", \"TimeSeriesLayerCollection\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n  },\n  created() {\n    eventHub.$on(\"getVisualization\", () => {\n      this.renderVisualization();\n    });\n  },\n  async mounted() {\n\n    // Generate the chart\n//     Highcharts.chart('chart', {\n//       credits: {\n//         enabled: false\n//       },\n//       title: {\n//         align: \"center\",\n//         text: \"Select Indices to Display Chart\",\n//       },\n//       series: [{\n//         data: [],\n//       }],\n//       chart: {\n//         backgroundColor: 'rgba(255,255,255,0)',\n//         style: {\n//           \"fontFamily\": \"Lato,\\\"Lucida Grande\\\", \\\"Lucida Sans Unicode\\\", Verdana, Arial, Helvetica, sans-serif\",\n//           \"fontSize\": \"12px\"\n//         },\n//\n//         animation: true,\n//         zoomType: 'x',\n// //        borderColor: '#000000',\n// //        borderWidth: 2,\n//         type: 'area',\n//       },\n//       noData: {\n//         style: {\n//           fontWeight: 'bold',\n//           fontSize: '15px',\n//           color: '#303030'\n//         }\n//       },\n//     });\n    eventHub.$on('UpdateChart', (HcObject) => {\n      this.updateChart(HcObject);\n    });\n  },\n};\n</script>\n\n<style scoped>\n\n.chart-option .el-row {\n  margin-left: 5px !important;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-right: 8px !important;\n}\n\n.chart-option {\n  border-bottom: solid 1px #e2e2e2;\n}\n\n.chart-div {\n  height: 100%;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n.center-content-parent {\n  position: relative;\n}\n\n.center-content-child {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  margin: -70px 0 0 -170px;\n}\n\n.flex-center-vertically {\n  padding: 20px;\n  justify-content: center;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  height: 100%;\n}\n\n.plotSelection {\n  display: block;\n}\n\n.sync-chart .el-button {\n  width: 100%;\n}\n\n.position-relative {\n  position: relative !important;\n}\n\n.download-map-Image {\n  z-index: 1000;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  color: #afacac;\n  cursor: pointer;\n}\n\n.vertically-center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</style>\n","import emitter from 'tiny-emitter/instance';\n\nexport default {\n  $on: (...args) => emitter.on(...args),\n  $once: (...args) => emitter.once(...args),\n  $off: (...args) => emitter.off(...args),\n  $emit: (...args) => emitter.emit(...args),\n}","import Highcharts from 'highcharts';\nlet AllMonths = {\n    0: \"January\",\n    1: \"February\",\n    2: \"March\",\n    3: \"April\",\n    4: \"May\",\n    5: \"June\",\n    6: \"July\",\n    7: \"August\",\n    8: \"September\",\n    9: \"October\",\n    10: \"November\",\n    11: \"December\"\n}\n\n\nvar chartHelperObj = {};\nchartHelperObj.DateTickInterval__monthly = 30 * 24 * 3600 * 1000; //Month\nchartHelperObj.DateTickInterval__quartly = 30 * 24 * 3600 * 1000; //Month\nchartHelperObj.DateTickInterval__dekad = 10 * 24 * 3600 * 1000; //10 days\n\nchartHelperObj.DateFormatter__monthly = function () {\n    return Highcharts.dateFormat('%Y-%b', this.value);\n};\nchartHelperObj.DateFormatter__quartly = function () {\n    let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    var dt = new Date(this.value);\n    var str = dt.getFullYear().toString() + \"-\";\n    str += monthNames[dt.getMonth()][0];\n    dt.setDate(1);\n    dt.setMonth(dt.getMonth() + 1);\n    str += monthNames[dt.getMonth()][0];\n    dt.setMonth(dt.getMonth() + 1);\n    str += monthNames[dt.getMonth()][0];\n    return str;\n    // return Highcharts.dateFormat('%Y-%b', this.value)\n};\nchartHelperObj.DateFormatter__dekad = function () {\n    var dt = new Date(this.value);\n    if (dt.getDate() <= 10) {\n        return Highcharts.dateFormat('%Y-%b-D1', this.value);\n    } else if (dt.getDate() <= 20) {\n        return Highcharts.dateFormat('%Y-%b-D2', this.value);\n    } else {\n        return Highcharts.dateFormat('%Y-%b-D3', this.value);\n    }\n};\n\nchartHelperObj.TickPositioner__monthly = function () {\n    return undefined;\n};\nchartHelperObj.TickPositioner__quartly = function () {\n    return undefined;\n};\nchartHelperObj.TickPositioner__dekad = function (data) {\n    let PositionList = [];\n    data.forEach(function (val) {\n        PositionList.push(val[0]);\n    });\n    let TickPositionerFunction = function () {\n        return PositionList;\n    };\n    return TickPositionerFunction;\n};\n\nchartHelperObj.TooltipFormater__dekad = function () {\n    let funn = function () {\n        var dt = new Date(this.x);\n        let customDate = '';\n        if (dt.getDate() <= 10) {\n            customDate = Highcharts.dateFormat('%Y-%b-D1', this.x);\n        } else if (dt.getDate() <= 20) {\n            customDate = Highcharts.dateFormat('%Y-%b-D2', this.x);\n        } else {\n            customDate = Highcharts.dateFormat('%Y-%b-D3', this.x);\n        }\n        let htmlStr = customDate + '<br/>';\n        this.points.forEach((val) => {\n            let aa = '<span style=\"color:' + val.color + '\">●</span> ' + val.series.name + ': <b>' + val.y + val.series.tooltipOptions.valueSuffix + '</b><br/>';\n            htmlStr = htmlStr + aa;\n        });\n        return htmlStr;\n    }\n    return funn;\n};\nchartHelperObj.TooltipFormater__monthly = function () {\n    let funn = function () {\n        let customDate = Highcharts.dateFormat('%Y-%b', this.x);\n        let htmlStr = customDate + '<br/>';\n        this.points.forEach((val) => {\n            let aa = '<span style=\"color:' + val.color + '\">●</span> ' + val.series.name + ': <b>' + val.y + val.series.tooltipOptions.valueSuffix + '</b><br/>';\n            htmlStr = htmlStr + aa;\n        });\n        return htmlStr;\n    }\n    return funn;\n};\nchartHelperObj.TooltipFormater__quartly = function () {\n    let funn = function () {\n        let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        var dt = new Date(this.x);\n        dt.setDate(1);\n        // dt.setMonth(dt.getMonth() + 1);\n        var str = dt.getFullYear().toString() + \"-\";\n        str += monthNames[dt.getMonth()][0];\n        dt.setDate(1);\n        dt.setMonth(dt.getMonth() + 1);\n        str += monthNames[dt.getMonth()][0];\n        dt.setMonth(dt.getMonth() + 1);\n        str += monthNames[dt.getMonth()][0];\n        let customDate = str;\n        let htmlStr = customDate + '<br/>';\n        this.points.forEach((val) => {\n            let aa = '<span style=\"color:' + val.color + '\">●</span> ' + val.series.name + ': <b>' + val.y + val.series.tooltipOptions.valueSuffix + '</b><br/>';\n            htmlStr = htmlStr + aa;\n        });\n        return htmlStr;\n    };\n    return funn;\n};\n\nvar MapHelper = {};\nMapHelper.dateisoFormatForLevelFormatter__monthly = function (isoDate) {\n    let dateObj = Date.parseISO8601(isoDate);\n    let FullYear = dateObj.getFullYear().toString();\n    let FullMonth = dateObj.getMonth();\n    return FullYear + '-' + AllMonths[FullMonth];\n};\n\nMapHelper.dateisoFormatForLevelFormatter__dekad = function (isoDate) {\n    var dt = new Date(isoDate);\n    if (dt.getDate() <= 10) {\n        return Highcharts.dateFormat('%Y-%b-D1', dt)\n    } else if (dt.getDate() <= 20) {\n        return Highcharts.dateFormat('%Y-%b-D2', dt)\n    } else {\n        return Highcharts.dateFormat('%Y-%b-D3', dt)\n    }\n};\n\nMapHelper.dateisoFormatForLevelFormatter__quartly = function (isoDate) {\n        let dateObj = Date.parseISO8601(isoDate);\n        let FullYear = dateObj.getFullYear().toString();\n        let FullMonth = dateObj.getMonth();\n        let threeMonths = '';\n        if (FullMonth === 11) {\n            threeMonths = AllMonths[FullMonth].slice(0, 1) + AllMonths[0].slice(0, 1) + AllMonths[1].slice(0, 1);\n        } else if (FullMonth === 10) {\n            threeMonths = AllMonths[FullMonth].slice(0, 1) + AllMonths[FullMonth + 1].slice(0, 1) + AllMonths[0].slice(0, 1);\n        } else {\n            threeMonths = AllMonths[FullMonth].slice(0, 1) + AllMonths[FullMonth + 1].slice(0, 1) + AllMonths[FullMonth + 2].slice(0, 1);\n        }\n        return FullYear + '-' + threeMonths;\n    };\n\n\nexport function CollectHighchartRequiredInfo(dataPeriod, mean_data) {\n    let tickInterval = chartHelperObj[\"DateTickInterval__\" + dataPeriod];\n    let Dateformater = chartHelperObj[\"DateFormatter__\" + dataPeriod];\n    let TickPositioner = chartHelperObj[\"TickPositioner__\" + dataPeriod](mean_data);\n    let TootTipFormatter = chartHelperObj[\"TooltipFormater__\" + dataPeriod]();\n    return {tickInterval, Dateformater, TickPositioner, TootTipFormatter};\n}\nexport function CustomTimeDimensionalLayerDateLabel(dataPeriod){\n    return MapHelper[\"dateisoFormatForLevelFormatter__\"+dataPeriod];\n}\n\nexport function CurrentDateFormat(){\n        var d = new Date(),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nexport function getURLParameters() {\n    var vars = {};\n\n    window.location.href.split('#')[0].replace(/[?&]+([^=&]+)=([^&]*)/gi,\n        function (m, key, value) {\n            vars[key] = value;\n        });\n    return vars;\n}\n\n\n\n\nexport function updateURLParameter(url, param, paramVal) {\n    var TheAnchor = null;\n    var newAdditionalURL = \"\";\n    var tempArray = url.split(\"?\");\n    var baseURL = tempArray[0];\n    var additionalURL = tempArray[1];\n    var temp = \"\";\n    let tmpAnchor = '';\n    let TheParams = '';\n    if (additionalURL) {\n        tmpAnchor = additionalURL.split(\"#\");\n        TheParams = tmpAnchor[0];\n        TheAnchor = tmpAnchor[1];\n        if (TheAnchor)\n            additionalURL = TheParams;\n\n        tempArray = additionalURL.split(\"&\");\n\n        for (var i = 0; i < tempArray.length; i++) {\n            if (tempArray[i].split('=')[0] != param) {\n                newAdditionalURL += temp + tempArray[i];\n                temp = \"&\";\n            }\n        }\n    } else {\n        tmpAnchor = baseURL.split(\"#\");\n        TheParams = tmpAnchor[0];\n        TheAnchor = tmpAnchor[1];\n\n        if (TheParams)\n            baseURL = TheParams;\n    }\n\n    if (TheAnchor)\n        paramVal += \"#\" + TheAnchor;\n\n    var rows_txt = temp + \"\" + param + \"=\" + paramVal;\n    return baseURL + \"?\" + newAdditionalURL + rows_txt;\n}","import {DefaultMaskWMS, TethysAPIAppName} from \"../config\";\n// import {Icon} from \"ol/style\";\nimport {Action} from \"../store/actionType\";\nimport {getURLParameters} from \"./helpers\";\n\n\nvar myApp = {};\n// First need to initilize\n\n\nmyApp.startDate = new Date();\nmyApp.startDate.setDate(myApp.startDate.getDate() - 1);\nmyApp.endDate = new Date();\n\n\nlet recentDate = getURLParameters()['date'];\nif (recentDate) {\n    if (recentDate.length == 8) {\n        let checkInt = parseInt(recentDate);\n        if (checkInt) {\n            // Number with valid\n            let YYYY = parseInt(recentDate.slice(0, 4));\n            let MM_index = parseInt(recentDate.slice(4, 6)) - 1;\n            let DD = parseInt(recentDate.slice(6, 8));\n            let dObject = new Date(YYYY, MM_index, DD);\n            myApp.startDate = dObject;\n            myApp.endDate = new Date(YYYY, MM_index, DD);\n            myApp.endDate.setDate(myApp.endDate.getDate() + 1);\n        }\n    }\n}\n\n\n\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\n\n\nmyApp.APICollection = {\n    layerData: {\n        Aeronet: '/apps/' + TethysAPIAppName + '/aeronetaodpm/',\n        USEmbassyAOD: '/apps/' + TethysAPIAppName + '/usembassypm/',\n        getGeoJSONofStations: '/apps/' + TethysAPIAppName + '/getGeoJSONofStations/',\n        getGeoJsonForOneSatation: '/apps/' + TethysAPIAppName + '/getGeoJsonForOneSatation/',\n        getAllStationsID: '/apps/' + TethysAPIAppName + '/getAllStationsID/',\n    },\n    api: {\n        commonAPI: '/apps/' + TethysAPIAppName + '/getData/',\n        RegionGeojson: '/apps/' + TethysAPIAppName + '/geojsonregion/',\n        AOIPolygon: '/apps/' + TethysAPIAppName + '/aoipolygon/',\n        GetMapImage: '/apps/' + TethysAPIAppName + '/getmapimage/',\n        GetImage: '/apps/' + TethysAPIAppName + '/downloadImage/',\n        SlicedFromCatalog: '/apps/' + TethysAPIAppName + '/slicedfromcatalog/'\n    }\n};\n\n\nmyApp.constants = {\n    recent: {\n        layerId: {\n            TerraModisTrueColor: 'Recent__TerraModisTrueColor',\n            PM_AeronetAOD: 'Recent__aeronet',\n            PM_usembassy: 'Recent__usembassy',\n            GEOS_PM2p5: 'Recent__GEOS_PM2p5',\n            TerraModisAOD: 'Recent__TerraModisAOD',\n            O3_GEOS: 'Recent__GEOS_O3',\n            O3_usembassy: 'Recent__usembassy_O3',\n            SO2_GEOS: 'Recent__GEOS_SO2',\n            NO2_GEOS: 'Recent__GEOS_NO2',\n            CO_GEOS: 'Recent__GEOS_CO',\n            Nep_Gov_PM1:'Nep_Gov_PM1',\n            Nep_Gov_PM10:'Nep_Gov_PM10',\n            Nep_Gov_PM2p5:'Nep_Gov_PM2p5',\n            Nep_Gov_tsp:'Nep_Gov_tsp',\n        }\n    }\n};\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\nmyApp.AllBindedLayersList = [];\nmyApp.OnlyOnce = true;\n\nmyApp.getLayer = function (id) {\n    // console.log(id)\n    var layer;\n    for (let i = 0; i < myApp.AllBindedLayersList.length; i++) {\n        // console.log(myApp.AllBindedLayersList[i].getProperties().id);\n        if (id == myApp.AllBindedLayersList[i].getProperties().id) { ///popDensityLayer.getProperties().id\n            layer = myApp.AllBindedLayersList[i].getLayer();\n            break;\n        }\n    }\n    return layer;\n};\n\n\n\n\nmyApp.formatDateWithHHMM = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear(),\n        hour =''+d.getHours(),\n    minute = ''+d.getMinutes()\n\n    if (month.length < 2)\n        month = '0' + month;\n\n    if (day.length < 2)\n        day = '0' + day;\n\n    if (hour.length<2)\n        hour='0'+hour\n\n    if(minute.length<2)\n        minute='0'+minute\n\n    return [year, month, day,hour,minute].join('-');\n};\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n    return [year, month, day].join('-');\n};\nmyApp.TrueColorImage = {\n    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/TerraMODIS-TrueColor1km/catalog.xml',\n    useSLD: true,\n    isTimeDimensionLayer: true,\n    SLD: `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"\n                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"\n                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:resc=\"http://www.resc.reading.ac.uk\">\n    <NamedLayer>\n     <se:Name>red</se:Name>\n        <UserStyle>\n            <se:Name>Thesholded colour scheme</se:Name>\n            <se:CoverageStyle>\n                <se:Rule>\n                    <resc:RasterRGBSymbolizer>\n                        <se:Opacity>1.0</se:Opacity>\n                        <se:ColorMap>\n                            <resc:RedBand>\n                                <resc:BandName>red</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:RedBand>\n                            <resc:GreenBand>\n                                <resc:BandName>green</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:GreenBand>\n                            <resc:BlueBand>\n                                <resc:BandName>blue</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>1</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                    <resc:Spacing>linear</resc:Spacing>\n                                </resc:Range>\n                            </resc:BlueBand>\n                        </se:ColorMap>\n                    </resc:RasterRGBSymbolizer>\n                </se:Rule>\n            </se:CoverageStyle>\n        </UserStyle>\n    </NamedLayer>\n</StyledLayerDescriptor>\n`,\n    getStartDate: function () {\n        return myApp.formatDate(myApp.startDate)\n    },\n    getEndDate: function () {\n        return myApp.formatDate(myApp.startDate)\n    },\n    VisibleDivBind: true,\n    threddLayerProp: {\n        id: myApp.constants.recent.layerId.TerraModisTrueColor,\n        title: 'TerraModis-TrueColor (' + myApp.formatDate(myApp.startDate) + ')',\n        visible: true,\n        opacity: 0.5,\n        legendPath: Action.Base + '/' + Action.trueColorLegendImage,\n        ThreddsDataServerVersion: 5,\n        serverType: 'TDS',\n        timeSeries: false,\n        alignTimeSlider: 'left',\n        timeSliderSize: 'small',\n        showlegend: false,\n        showControlPanel: false,\n        zIndex: 10,\n        source: {\n            url: [],\n            params: {\n                'LAYERS': 'red',\n                'transparent': true\n            }\n        },\n        mask: DefaultMaskWMS,\n        CropOrMask: 'crop',\n        changeWMSProxy: true,\n    }\n};\n\nmyApp.DefaultSations = {\n    aeronetAOD: [2, 5, 3, 6],\n    pm2p5Embassy: [6, 7, 6, 7],\n    o3Embassy: [6, 7, 6, 7],\n    NepalStation: [57,11,15,71]\n};\n\nmyApp.cascaderObj = [\n    {\n        label: 'PM',\n        value: 1,\n        children: [\n            {\n                label: 'Surface Observation-AOD (AERONET)',\n                value: 11,\n                layerId: myApp.constants.recent.layerId.PM_AeronetAOD,\n                stationData: true,\n                ModelClass: 'AeronetAod',\n                ModelClassDataList: 'AeronetDataList',\n                typeName: 'aod',\n                defaultStation: myApp.DefaultSations.aeronetAOD,\n                chart: {\n                    title: function (stationName) {\n                        return stationName + ' (' + 'Last 24 hours' + ')';\n                    },\n                    subTitle: 'AERONET level 1.5 data measured at 500nm',\n                    SeriesName: 'SeriesName',\n                    YaxisLabel: 'AOD (500nm)',\n                    XaxisLabel: function () {\n                        return 'Time (UTC)'\n                    },\n                    plotType: 'point'\n                },\n                layerProperties: {\n                    initilize: false,\n                    id: myApp.constants.recent.layerId.PM_AeronetAOD,\n                    title: 'Surface Observation-AOD (AERONET)',\n                    visible: false,\n                    opacity: 1,\n                    zIndex: 5,\n                    layer: 'AirQuality:aeronet_aod',\n                },\n            },\n            {\n                label: 'Ground Observation-PM2.5 (AirNow)',\n                layerId: myApp.constants.recent.layerId.PM_usembassy,\n                value: 12,\n                stationData: true,\n                ModelClass: 'UsEmbassyPm',\n                ModelClassDataList: 'UsEmbassyDataList',\n                typeName: 'pm',\n                defaultStation: myApp.DefaultSations.pm2p5Embassy,\n                chart: {\n                    title: function (stationName) {\n                        return stationName + ' (' + 'Last 24 hours' + ')';\n                    },\n                    subTitle: 'source: AirNow',\n                    SeriesName: 'PM2.5',\n                    YaxisLabel: 'PM<sub>2.5</sub>(μg/m<sup>3</sup>)',\n                    XaxisLabel: function () {\n                        return 'Time (UTC)';\n                    }\n                },\n                layerProperties: {\n                    initilize: false,\n                    id: myApp.constants.recent.layerId.PM_usembassy,\n                    title: 'Ground Observation-PM2.5',\n                    visible: false,\n                    opacity: 1,\n                    zIndex: 6,\n                    layer: 'AirQuality:us_embassy_pm2p5',\n                },\n            },\n        ]\n    },\n    // {\n    //     label: 'O3',\n    //     value: 2,\n    //     children: [\n    //         {\n    //             label: 'Surface Observation-O3',\n    //             layerId: myApp.constants.recent.layerId.O3_usembassy,\n    //             value: 23,\n    //             stationData: true,\n    //             ModelClass: 'UsEmbassyPm',\n    //             ModelClassDataList: 'UsEmbassyDataList',\n    //             typeName: 'O3',\n    //             defaultStation: myApp.DefaultSations.o3Embassy,\n    //             chart: {\n    //                 title: function (stationName) {\n    //                     return stationName + ' (' + sd + ')';\n    //                 },\n    //                 subTitle: 'source: AirNow',\n    //                 SeriesName: 'O3',\n    //                 YaxisLabel: 'O<sub>3</sub>(ppb)',\n    //                 XaxisLabel: function () {\n    //                     return 'Time (UTC)'\n    //                 }\n    //             },\n    //             layerProperties: {\n    //                 initilize: false,\n    //                 id: myApp.constants.recent.layerId.O3_usembassy,\n    //                 title: 'Surface Observation-O3',\n    //                 visible: false,\n    //                 opacity: 1,\n    //                 zIndex: 7,\n    //                 layer: 'AirQuality:us_embassy_o3',\n    //             },\n    //         },\n    //     ]\n    // }\n    ];\n\n\nmyApp.makeRequest = function (method, url) {\n    return new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(method, url);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                resolve(xhr.response);\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n};\n\nmyApp.datetimePointChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n            chart: {\n                marginLeft: 65,\n                /* marginRight: 0, */\n                /* spacingLeft: 0, */\n                /* spacingRight: 0 */\n                backgroundColor: 'transparent',\n                plotBorderColor: '#afafaf',\n                plotBorderWidth: 1,\n            },\n            title: {\n                text: title,\n                fontSize: '10px',\n                useHTML: true\n            },\n            subtitle: {\n                text: subTitle,\n                fontSize: '8px'\n            },\n            series: [{\n                name: SeriesName,\n                data: SeriesData,\n                lineWidth: 0,\n                marker: {\n                    enabled: true,\n                    symbol: 'diamond',\n                    radius: 2\n                },\n            }],\n            xAxis: {\n                type: 'datetime',\n                title: {\n                    text: XaxisLabel,\n                    align: 'high',\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0\n            },\n            yAxis: {\n                title: {\n                    text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                    useHTML: true,\n                    rotation: 0,\n                    // align: 'high',\n                    offset: 0,\n                    x: -50\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0,\n                gridLineWidth: 0\n            },\n            legend: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    color: plotColor\n                }\n            },\n            lang: {\n                noData: DataPeriod + 'data not available for this station.'\n            },\n            exporting: {\n                buttons: {\n                    contextButton: {\n                        menuItems: [\"printChart\",\n                            \"separator\",\n                            \"downloadPNG\",\n                            \"downloadJPEG\",\n                            \"downloadPDF\",\n                            \"downloadSVG\",\n                            \"separator\",\n                            \"downloadCSV\",\n                            \"downloadXLS\",\n                            //\"viewData\",\n                            \"openInCloud\"]\n                    }\n                },\n                // chartOptions: {\n                //     title: {\n                //         text: title,\n                //         fontSize: '10px',\n                //         useHTML: true\n                //     }, yAxis: {\n                //         title: {\n                //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                //             useHTML: true,\n                //             rotation: 250\n                //         }\n                //     },\n                // },\n                allowHTML: true,\n                // fallbackToExportServer: false,\n                // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n            }\n        }\n    ;\n    return data\n};\n\nmyApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n        chart: {\n            marginLeft: 65,\n            /* marginRight: 0, */\n            /* spacingLeft: 0, */\n            /* spacingRight: 0 */\n            backgroundColor: 'transparent',\n            plotBorderColor: '#afafaf',\n            plotBorderWidth: 1,\n        },\n        title: {\n            text: title,\n            fontSize: '10px',\n            useHTML: true\n        },\n        subtitle: {\n            text: subTitle,\n            fontSize: '8px'\n        },\n        series: [{\n            name: SeriesName,\n            data: SeriesData,\n            // marker: {\n            //     enabled: true,\n            //     symbol: 'diamond',\n            //     radius: 3\n            // },\n        }],\n        xAxis: {\n            type: 'datetime',\n            title: {\n                text: XaxisLabel,\n                align: 'high',\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0\n        },\n        lang: {\n            noData: DataPeriod + 'data not available for this station.'\n        },\n        yAxis: {\n            title: {\n                text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                useHTML: true,\n                rotation: 0,\n                // align: 'high',\n                offset: 0,\n                x: -50\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0,\n            gridLineWidth: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                color: plotColor\n            }\n        },\n        exporting: {\n            buttons: {\n                contextButton: {\n                    menuItems: [\"printChart\",\n                        \"separator\",\n                        \"downloadPNG\",\n                        \"downloadJPEG\",\n                        \"downloadPDF\",\n                        \"downloadSVG\",\n                        \"separator\",\n                        \"downloadCSV\",\n                        \"downloadXLS\",\n                        //\"viewData\",\n                        \"openInCloud\"]\n                }\n            },\n            // chartOptions: {\n            //     title: {\n            //         text: title,\n            //         fontSize: '10px',\n            //         useHTML: true\n            //     }, yAxis: {\n            //         title: {\n            //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n            //             useHTML: true,\n            //             rotation: 250\n            //         }\n            //     },\n            // },\n            allowHTML: true,\n            // fallbackToExportServer: false,\n            // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n        }\n    };\n    return data\n};\n\nmyApp.forceDownload = function (url, fileName) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        var urlCreator = window.URL || window.webkitURL;\n        var imageUrl = urlCreator.createObjectURL(this.response);\n        var tag = document.createElement('a');\n        tag.href = imageUrl;\n        tag.download = fileName;\n        document.body.appendChild(tag);\n        tag.click();\n        document.body.removeChild(tag);\n    }\n    xhr.send();\n}\n\n\nexport var AirPollutionWatchApp = myApp;\n","import { render } from \"./chartComponentRecent.vue?vue&type=template&id=7d9e56f1&scoped=true\"\nimport script from \"./chartComponentRecent.vue?vue&type=script&lang=js\"\nexport * from \"./chartComponentRecent.vue?vue&type=script&lang=js\"\n\nimport \"./chartComponentRecent.vue?vue&type=style&index=0&id=7d9e56f1&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7d9e56f1\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Map Controls\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n        <el-form\n            label-position=\"left\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n        >\n          <el-form-item label=\"Select By\" prop=\"select_by\">\n            <el-select v-model=\"mapControlVariable.select_by\" placeholder=\"Select By\" style=\"width: 100%\">\n              <el-option\n                  v-for=\"item in options.select_by\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                  :disabled=\"item.disabled\"\n              >\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n        </el-form>\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n            v-if=\"mapControlVariable.select_by ==='Location'\"\n        >\n\n          <el-form-item v-show=\"mapControlVariable.data_period !=='Recent'\" label=\"Select Location\"\n                        prop=\"Select Location\">\n\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-model=\"mapControlVariable.location_by\" placeholder=\"Select Location\" style=\"width: 100%\">\n                <el-option\n                    v-for=\"item in options.location_by\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n\n              </el-select>\n            </el-col>\n            <el-col :span=\"2\" style=\"width: 100%\">\n              <div class=\"\" style=\"width: 100%;text-align: center;\">\n                -\n              </div>\n            </el-col>\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-show=\"mapControlVariable.location_by ==='default_locations'\"\n                         v-model=\"mapControlVariable.default_location\"\n                         placeholder=\"Select Location\" style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.default_location\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n              <div class=\"\" v-show=\"mapControlVariable.location_by ==='AOI'\">\n                <div class=\"feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===true\">Feature\n                  selected\n                </div>\n                <div class=\"no-feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===false\">No Feature\n                  selected\n                </div>\n              </div>\n            </el-col>\n\n          </el-form-item>\n\n          <el-form-item label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value1\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value2\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value3\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value4\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n\n        >\n          <el-form-item v-show=\"mapControlVariable.select_by ==='Parameter'\" label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n\n              <el-cascader\n                  v-model=\"mapControlVariable.parameter_by_pollutant_value\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n\n            </div>\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===false\"\n              label=\"Select Locations\" prop=\"Locations\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--                                                            -->\n            <!--            </el-radio-group>-->\n\n            <el-radio-group v-model=\"mapControlVariable.radioValue\">\n              <el-radio :label=\"1\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='1'?false:true\"\n\n                                :IndexValue=\"1\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"2\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='2'?false:true\"\n                                :IndexValue=\"2\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"3\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='3'?false:true\"\n                                :IndexValue=\"3\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"4\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='4'?false:true\"\n                                :IndexValue=\"4\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n            </el-radio-group>\n\n\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===true\"\n              label=\"Select Stations\" prop=\"station\">\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val1\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val2\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val3\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val4\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n        <el-button class=\"compute-now\" type=\"primary\" size=\"mini\" style=\"width: 100%\" @click=\"computeData\">compute\n        </el-button>\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n<script>\n\nimport {mapActions, mapGetters, mapMutations, mapState} from \"vuex\";\nimport OLWKT from \"ol/format/WKT\";\nimport selectLocation from \"./selectLocation\";\n// import {threddDataSource} from \"../config\"\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\nimport {AirPollutionWatchApp} from \"../utils/dataRecent\";\n// import OlVectorLayer from \"ol/layer/Vector\";\n// import OlVectorSource from \"ol/source/Vector\";\nimport OlGeoJSON from \"ol/format/GeoJSON\";\nimport {getCenter as ol_extent_getCenter} from \"ol/extent\";\nimport eventHub from \"../utils/utils\";\n\n// import {ElLoading} from 'element-plus';\n// import rgbLegend from '../assets/rgblegend.jpg';\n// import usembassyPm2p5 from '../assets/usembassyPm2p5.jpg';\n// import AODAeroNet from '../assets/AODAeroNet.jpg';\nimport {Action} from \"../store/actionType\";\nimport {Image as ImageLayer} from \"ol/layer\";\nimport ImageWMS from \"ol/source/ImageWMS\";\nimport {GeoServerHost, threddDataSource} from \"../config\";\n// import rgbLegend from \"../assets/rgblegend.jpg\";\nimport TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport Style from \"ol/style/Style\";\nimport {Icon} from \"ol/style\";\n// import ol_legend_Item from 'ol-ext/legend/Item';\n\nexport default {\n  name: \"mapControlsRecent\",\n  data() {\n    return {\n      maskCoordinate: null,\n      data__layer__initilize__Recent: false,\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      options: {\n        select_by: [\n          {\n            value: 'Location',\n            label: 'Location',\n          },\n          {\n            value: 'Parameter',\n            label: 'Parameter',\n          }\n        ],\n        location_by: [\n          {\n            value: 'default_locations',\n            label: 'Major Cities',\n          },\n          {\n            value: 'AOI',\n            label: 'Select on map',\n          }\n        ],\n        default_location: [],\n        ObservationStationOptions: []\n      },\n      PROXY_PREFIX: Action.Base + '/apps/airqualitynp/WMSProxy/',\n    }\n  },\n  watch: {\n    SelectDefaultLocation(newVal, oldVal) {\n      if (newVal) {\n        // add it to vectorLayer\n        let selNewValObj = this.options.default_location.filter(function (x) {\n          return newVal == x.value\n        })[0];\n\n        let Feature = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        Feature.set(\"SelectBy\", \"Location\");\n        Feature.set(\"LocationBy\", \"default_location\");\n        this.WorkingVectorLayer.getSource().addFeature(Feature);\n\n        var view = this.mapObject.getView();\n        var resolution = view.getResolutionForExtent(Feature.getGeometry().getExtent(), this.mapObject.getSize());\n        var zoom = view.getZoomForResolution(resolution);\n        var center = ol_extent_getCenter(Feature.getGeometry().getExtent());\n        // redraw before zoom\n        setTimeout(function () {\n          view.animate({\n            center: center,\n            zoom: Math.min(zoom, 11)\n          });\n        }, 100);\n\n        var format = new OLWKT();\n        var wktfeaturegeom = format.writeGeometry(Feature.getGeometry(), {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        var geometryType = Feature.getGeometry().getType();\n\n        // let featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n\n        // let featureForExtent = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        // featureExtent = featureExtent.getGeometry().getExtent();\n\n        this.mapControlVariable.location_by_wktValue = wktfeaturegeom;\n        this.mapControlVariable.location_by_geometryType = geometryType;\n        this.mapControlVariable.location_by_default_level_value = selNewValObj.label;\n\n      } else {\n        this.mapControlVariable.location_by_wktValue = '';\n        this.mapControlVariable.location_by_geometryType = '';\n        this.mapControlVariable.location_by_default_level_value = '';\n      }\n\n      if (oldVal) {\n        // remove it from vector layer\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Location\" && f.get(\"LocationBy\") == \"default_location\" && f.get(\"id\") == oldVal) {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n      }\n    },\n    SelectLocationBy() {\n      this.mapControlVariable.default_location = '';\n    },\n    async SelectByOption() {\n\n      if (this.mapControlVariable.select_by == \"Location\") {\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"default_location\") {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n\n        //remove the layers which are on select by parameter\n        this.SetLayerOfSelectByParameterLayer(false);\n\n        let that = this;\n        console.log(that);\n\n        // debugger;\n\n        let kk = this.getStationInfoObject(11);\n        await this.AddLayerToLayerList(kk);\n\n        let jj = this.getStationInfoObject(12);\n        await this.AddLayerToLayerList(jj);\n\n\n        // clear parameter\n        this.mapControlVariable.parameter_by_pollutant_value = [];\n\n        this.mapControlVariable.location_by_pollutant_value1 = [1, 11, 2];\n        this.mapControlVariable.location_by_pollutant_value2 = [1, 11, 5];\n        this.mapControlVariable.location_by_pollutant_value3 = [1, 12, 6];\n        this.mapControlVariable.location_by_pollutant_value4 = [1, 12, 7];\n\n      } else {\n\n        //clear Location\n        this.mapControlVariable.location_by_pollutant_value1 = [];\n        this.mapControlVariable.location_by_pollutant_value2 = [];\n        this.mapControlVariable.location_by_pollutant_value3 = [];\n        this.mapControlVariable.location_by_pollutant_value4 = [];\n\n        this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n\n        // no single default location on parameter\n        this.mapControlVariable.default_location = '';\n        this.SetLayerOfSelectByParameterLayer(true);\n      }\n      this.ObservationStationOption();\n    },\n    async SelectByParameterPollutant(newPollutant, oldPollutant) {\n\n      if (oldPollutant) {\n        if (oldPollutant.length) {\n          let kk = this.getStationInfoObject(oldPollutant[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n      let kk = this.getStationInfoObject(newPollutant[1]);\n\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        await this.AddLayerToLayerList(kk);\n        let layer = this.getBindedLayer(kk.layerId);\n        // console.log(layer.getProperties().OLEXTLegendObject);\n        // this.addLegend(layer.getProperties().OLEXTLegendObject);\n        layer.setVisibleDivBind(true);\n        layer.setVisible(false);\n        layer.setVisible(true);\n\n        if (kk.stationData) {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = true;\n          this.options.ObservationStationOptions = kk.childrenData;\n        } else {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = false;\n          this.options.ObservationStationOptions = [];\n        }\n      }\n      // check if there is selected pollutant first\n      if (Object.keys(kk).length) {\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = kk.defaultStation[0];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = kk.defaultStation[1];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = kk.defaultStation[2];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = kk.defaultStation[3];\n      }\n    },\n    location_by_pollutant_value1(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value2(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value3(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value4(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n  },\n  components: {selectLocation},\n  methods: {\n    ...mapActions([\"getCityData\", \"PostSlicedFromCatalog\", \"getGeoJsonForOneSatation\", \"getDefaultGroundObservation\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\", \"addLegend\", \"removeLegend\"]),\n    featureSelectorDeleteUpdate() {\n      var wktfeaturegeom, geometryType;\n      if (this.selectInteraction) {\n        if (this.selectInteraction.getFeatures().getLength()) {\n          var features = this.selectInteraction.getFeatures();\n          features.forEach(function (f) {\n            var format = new OLWKT();\n            wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            });\n            geometryType = f.getGeometry().getType();\n          });\n          let Param = {\n            geometryType: geometryType,\n            wkt: wktfeaturegeom,\n          };\n          console.log(Param);\n          if (this.mapControlVariable.location_by == 'AOI') {\n            this.mapControlVariable.is_AOI_Feature_selected = true;\n            this.parameter_by_location.wktValue = wktfeaturegeom;\n            this.parameter_by_location.geometryType = geometryType;\n          }\n        } else {\n          if (this.mapControlVariable.location_by == 'AOI') {\n            this.mapControlVariable.is_AOI_Feature_selected = false;\n            this.parameter_by_location.wktValue = '';\n            this.parameter_by_location.geometryType = '';\n            this.parameter_by_location.location_by_default_level_value = '';\n          }\n        }\n      }\n    },\n    CatalogSlicingParam(url, startDate, endDate) {\n      let param = {\n        url: url,\n        data_ext: '.nc',\n        startDate: startDate,\n        endDate: endDate,\n      }\n      return param\n    },\n    async addRasterLayerToMap(kk) {\n      let slicingParam, responseData, resPonseParsed, wmsList = [], isTrue;\n      let catalogURl = threddDataSource + kk.catalog;\n      slicingParam = this.CatalogSlicingParam(catalogURl, kk.getStartDate(), kk.getEndDate());\n      responseData = await this.PostSlicedFromCatalog(slicingParam);\n      resPonseParsed = responseData;\n      isTrue = resPonseParsed.data.length;\n      if (isTrue) {\n        resPonseParsed.data.forEach(function (fileName) {\n          let url = catalogURl.replace(\"/catalog/\", \"/wms/\").replace(\"catalog.xml\", fileName);\n          wmsList.push(url)\n        });\n      }\n      var Newlayer;\n      if (kk.isTimeDimensionLayer) {\n        if (kk.useSLD) {\n          let SLD = kk.SLD.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n          let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&SLD_BODY=';\n          let legendWMS = '';\n          if (!kk.legendPath) {\n            if (Array.isArray(wmsList)) {\n              legendWMS = wmsList[0] + LegendParameter + encodeURIComponent(SLD).toString();\n            } else {\n              legendWMS = wmsList + LegendParameter + encodeURIComponent(SLD).toString();\n            }\n          } else {\n            legendWMS = kk.legendPath\n          }\n          console.log(legendWMS);\n\n          let OLEXTLegendObject = {\n            id: kk.threddLayerProp.id,\n            title: kk.threddLayerProp.title,\n            typeGeom: 'Point',\n            style: new Style({\n              image: new Icon({\n                src: kk.threddLayerProp.legendPath,\n                crossOrigin: 'anonymous', // Enable print\n              })\n            }),\n            size: [60, 30]\n          };\n\n          let timedimensionTilePara = kk.threddLayerProp;\n          timedimensionTilePara.source.params.SLD_BODY = SLD;\n          timedimensionTilePara.source.url = wmsList;\n          // timedimensionTilePara.legendPath = rgbLegend;\n          timedimensionTilePara.wmsList = wmsList;\n          timedimensionTilePara.changeWMSProxy = true;\n          timedimensionTilePara.OLEXTLegendObject = OLEXTLegendObject;\n          // timedimensionTilePara.showAnimationButton = true;\n          // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n          Newlayer = new TimeDimensionTile(timedimensionTilePara);\n\n          let AddRemoveLegendFunction = function () {\n            if (this.getProperties().visible) {\n              that.addLegend(this.getProperties().OLEXTLegendObject);\n            } else {\n              that.removeLegend(this.getProperties().OLEXTLegendObject);\n            }\n          };\n\n          let that = this;\n          Newlayer.on('change:visible', AddRemoveLegendFunction);\n\n          await Newlayer.init().then(() => {\n            this.mapObject.addThreddsLayer(Newlayer);\n            let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true, 'withOpacityChange');\n            l5.setVisibleDivBind(false);\n            l5.setVisibleDivBind(true);\n            l5.setVisibleDivBind(kk.VisibleDivBind);\n            let properties = Newlayer.getProperties();\n            if (properties.mask) {\n              console.log(properties);\n              if (properties.CropOrMask == 'crop') {\n                Newlayer.setCrop(this.maskCoordinate);\n              } else {\n                Newlayer.setMask(this.maskCoordinate);\n              }\n            }\n            this.appendTimeSeriesLayerCollection(l5);\n            // myApp.AllBindedLayersList.push(l5);\n          });\n\n        } else {\n          let timedimensionTilePara = kk.threddLayerProp;\n          let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&LAYERS=' + timedimensionTilePara.source.params.LAYERS + '&COLORSCALERANGE=' + timedimensionTilePara.source.params.COLORSCALERANGE + '&STYLES=' + timedimensionTilePara.source.params.STYLES;\n          let legendWMS = '';\n          if (!kk.legendPath) {\n            if (Array.isArray(wmsList)) {\n              legendWMS = wmsList[0] + LegendParameter;\n            } else {\n              legendWMS = wmsList + LegendParameter;\n            }\n          } else {\n            legendWMS = kk.legendPath\n          }\n          timedimensionTilePara.source.url = wmsList;\n          timedimensionTilePara.legendPath = this.PROXY_PREFIX + legendWMS;\n          timedimensionTilePara.wmsList = wmsList;\n          timedimensionTilePara.changeWMSProxy = true;\n          // timedimensionTilePara.showAnimationButton = true;\n          // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n          console.log(JSON.stringify(timedimensionTilePara));\n          Newlayer = new TimeDimensionTile(timedimensionTilePara);\n\n          await Newlayer.init().then(() => {\n            this.mapObject.addThreddsLayer(Newlayer);\n            // myApp.map.addThreddsLayer(val);\n            let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true);\n            l5.setVisibleDivBind(kk.VisibleDivBind);\n            let properties = Newlayer.getProperties()\n            if (properties.mask) {\n              if (properties.CropOrMask == 'crop') {\n                Newlayer.setCrop(this.maskCoordinate);\n              } else {\n                Newlayer.setMask(this.maskCoordinate);\n              }\n            }\n            this.appendTimeSeriesLayerCollection(l5);\n            // myApp.AllBindedLayersList.push(l5);\n          });\n\n        }\n      }\n    },\n\n    computeData() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n          let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            if (this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val4) {\n              eventHub.$emit('getVisualization');\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select station on all dropdown menu.',\n                type: 'warning'\n              });\n            }\n          } else {\n            if (this.mapControlVariable.parameter_by_location__1.wktValue && this.mapControlVariable.parameter_by_location__2.wktValue && this.mapControlVariable.parameter_by_location__3.wktValue && this.mapControlVariable.parameter_by_location__4.wktValue) {\n              eventHub.$emit('getVisualization');\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select locations on all dropdown menu.',\n                type: 'warning'\n              });\n            }\n          }\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please Select a pollutant',\n            type: 'warning'\n          });\n        }\n      } else {\n        if (this.location_by_pollutant_value1.length > 0 && this.location_by_pollutant_value2.length > 0 && this.location_by_pollutant_value3.length > 0 && this.location_by_pollutant_value4.length > 0) {\n          eventHub.$emit('getVisualization');\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please select pollutants on all dropdown menu.',\n            type: 'warning'\n          });\n        }\n      }\n    },\n    ObservationStationOption() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.children) {\n              delete obj2.children;\n            }\n          });\n        });\n      } else {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.childrenData) {\n              obj2.children = obj2.childrenData;\n            }\n          });\n        });\n      }\n    },\n    getStationInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    SetLayerOfSelectByParameterLayer(IsViz) {\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n        let layer = this.getBindedLayer(kk.layerId);\n        if (IsViz) {\n          layer.setVisibleDivBind(IsViz);\n        } else {\n          layer.setVisibleDivBind(IsViz);\n        }\n      }\n    },\n    setLayerVisible(layerId, IsViz) {\n      let layer = this.getBindedLayer(layerId);\n      if (IsViz) {\n        layer.setVisible(IsViz);\n      } else {\n        layer.setVisibleDivBind(IsViz);\n      }\n    },\n    async onChangePollutantsOnSelectByLocation(newVal, oldVal) {\n      if (newVal.length) {\n        let kk = this.getStationInfoObject(newVal[1]);\n        if (Object.keys(kk).length != 0) {\n          await this.AddLayerToLayerList(kk);\n          let layer = this.getBindedLayer(kk.layerId);\n          layer.setVisibleDivBind(true);\n        }\n      }\n      if (oldVal.length) {\n        let count = 0;\n        if (this.location_by_pollutant_value1.length) {\n          if (this.location_by_pollutant_value1[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value2.length) {\n          if (this.location_by_pollutant_value2[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value3.length) {\n          if (this.location_by_pollutant_value3[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value4.length) {\n          if (this.location_by_pollutant_value4[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (count === 0) {\n          let kk = this.getStationInfoObject(oldVal[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n    },\n    async AddLayerToLayerList(kk) {\n      console.log(kk)\n      if (kk.layerProperties.initilize == false) {\n        kk.layerProperties.initilize = true;\n        if (kk.stationData == true) {\n          let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n          let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n          let lyr = kk.layerProperties.layer;\n          let le = {\n            id: kk.layerProperties.id,\n            title: kk.layerProperties.title,\n            typeGeom: 'Point',\n            style: new Style({\n              image: new Icon({\n                src: WMSURLWithRequestParameter + lyr,\n                crossOrigin: 'anonymous' // Enable print\n              })\n            }),\n               size: [60, 30]\n          };\n          let layerObj = new ImageLayer({\n            id: kk.layerProperties.id,\n            title: kk.layerProperties.title,\n            visible: kk.layerProperties.visible,\n            legendPath: WMSURLWithRequestParameter + lyr,\n            zIndex: kk.layerProperties.zIndex,\n            OLEXTLegendObject: le,\n            opacity: kk.layerProperties.opacity,\n            source: new ImageWMS({\n              url: GeoServerWMSURL,\n              crossOrigin: 'anonymous',\n              params: {'LAYERS': lyr},\n              serverType: 'geoserver',\n            }),\n          });\n\n          let AddRemoveLegendFunction = function () {\n            if (this.getProperties().visible) {\n              that.addLegend(this.getProperties().OLEXTLegendObject);\n            } else {\n              that.removeLegend(this.getProperties().OLEXTLegendObject);\n            }\n          };\n\n          let that = this;\n          layerObj.on('change:visible', AddRemoveLegendFunction);\n\n          this.mapObject.addLayer(layerObj);\n          let l5 = new LayerSwitcher(\".layerCollection\", layerObj, false, false);\n          this.appendTimeSeriesLayerCollection(l5);\n          l5.setVisibleDivBind(kk.layerProperties.visible);\n          let sd = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n          let ed = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.endDate);\n          let regionOrCountry = 0;\n          let Param = '?ModelClass=' + kk.ModelClass + \"&ModelClassDataList=\" + kk.ModelClassDataList + '&typeName=' + kk.typeName + '&StartDate=' + sd + '&EndDate=' + ed + '&rid=' + regionOrCountry\n          let dataResponse = await this.getGeoJsonForOneSatation(Param);\n          kk.childrenData = dataResponse.data;\n        } else {\n          console.log(kk);\n        }\n      }\n    },\n    InitilizeStationDataOnLoad() {\n      this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n        obj1.children.forEach((obj2) => {\n          if (obj2.stationData) {\n            this.AddLayerToLayerList(obj2);\n          }\n        });\n      });\n    }\n  },\n  computed: {\n    ...mapState([\"selectInteraction\", \"mapObject\", \"TimeSeriesLayerCollection\", \"WorkingVectorLayer\", \"mapControlVariable\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n    cascaderData() {\n      return this.AirPollutionWatchApp.cascaderObj;\n    },\n    SelectDefaultLocation() {\n      return this.mapControlVariable.default_location;\n    },\n    SelectLocationBy() {\n      return this.mapControlVariable.location_by;\n    },\n    SelectByOption() {\n      return this.mapControlVariable.select_by;\n    },\n    SelectDataPeriod() {\n      return this.mapControlVariable.data_period;\n    },\n    SelectByParameterPollutant() {\n      return this.mapControlVariable.parameter_by_pollutant_value;\n    },\n    location_by_pollutant_value1() {\n      return this.mapControlVariable.location_by_pollutant_value1;\n    },\n    location_by_pollutant_value2() {\n      return this.mapControlVariable.location_by_pollutant_value2;\n    },\n    location_by_pollutant_value3() {\n      return this.mapControlVariable.location_by_pollutant_value3;\n    },\n    location_by_pollutant_value4() {\n      return this.mapControlVariable.location_by_pollutant_value4;\n    },\n  },\n  async mounted() {\n    // load city location Data\n\n\n    setTimeout(() => {\n      this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n    }, 500);\n\n    this.addRasterLayerToMap(this.AirPollutionWatchApp.TrueColorImage);\n\n    // let OLEXTLegendObject = {\n    //   id: this.AirPollutionWatchApp.TrueColorImage.threddLayerProp.id,\n    //   title: this.AirPollutionWatchApp.TrueColorImage.threddLayerProp.title,\n    //   typeGeom: 'Point',\n    //   style: new Style({\n    //     image: new Icon({\n    //       src: this.AirPollutionWatchApp.TrueColorImage.threddLayerProp.legendPath,\n    //       crossOrigin: 'anonymous', // Enable print\n    //     })\n    //   })\n    // };\n    // this.AirPollutionWatchApp.TrueColorImage.threddLayerProp.OLEXTLegendObject = OLEXTLegendObject;\n    // this.addLegend(OLEXTLegendObject);\n    // console.log(OLEXTLegendObject);\n    // console.log(\"OLEXTLegendObject--------------\");\n    // this.selectInteraction.on('select', () => {\n    //   this.featureSelectorDeleteUpdate();\n    // });\n\n    setTimeout(() => {\n      this.computeData();\n      this.InitilizeStationDataOnLoad();\n    }, 2500);\n\n  },\n  async created() {\n    let sdt = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n    let edt = this.AirPollutionWatchApp.formatDateWithHHMM(this.AirPollutionWatchApp.endDate);\n\n    let defalultSt = await this.getDefaultGroundObservation({\n      typeName: 'pm',\n      startDate: sdt,\n      endDate: edt,\n    });\n\n    this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n      obj1.children.forEach((obj2) => {\n        if (obj2.ModelClass == 'UsEmbassyPm') {\n          obj2.defaultStation = defalultSt.defaultStation\n        }\n      })\n    });\n\n    let defaultLocation = await this.getCityData();\n    this.options.default_location = defaultLocation.data;\n\n  },\n  async beforeCreate() {\n\n  }\n}\n</script>\n\n<style scoped>\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.pollutant-cascader:not(:last-child) {\n  padding-bottom: 10px;\n}\n\n.body-container {\n  height: calc(100% - 50px);\n}\n\nbutton.el-button.el-button--primary.el-button--mini.compute-now, button.el-button.el-button--primary.el-button--mini.compute-now:focus, button.el-button.el-button--primary.el-button--mini.compute-now:hover {\n  background-color: #66b1ff;\n  border-color: #66b1ff;\n}\n\n</style>","<template>\n  <el-row style=\"width: 100%\">\n    <el-col :span=\"11\" style=\"width: 100%\">\n      <el-select :disabled=\"isDisable\" v-model=\"parameter_by_location.location_by\" placeholder=\"Select Location\"\n                 style=\"width: 100%\">\n        <el-option\n            v-for=\"item in options.location_by\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n            :disabled=\"item.disabled\"\n        >\n        </el-option>\n\n      </el-select>\n    </el-col>\n    <el-col :span=\"2\" style=\"width: 100%\">\n      <div class=\"\" style=\"width: 100%;text-align: center;\">\n        -\n      </div>\n    </el-col>\n    <el-col :span=\"11\" style=\"width: 100%\">\n      <el-select :disabled=\"isDisable\" v-show=\"parameter_by_location.location_by ==='default_locations'\"\n                 v-model=\"parameter_by_location.default_location\"\n                 placeholder=\"Select Location\" style=\"width: 100%\" ref=\"defaultLocation\">\n        <el-option\n            v-for=\"item in Select_Option_Default_Location\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n        >\n        </el-option>\n      </el-select>\n\n      <div class=\"\" v-show=\"parameter_by_location.location_by ==='AOI'\">\n        <div class=\"feature-selected\" v-show=\"parameter_by_location.is_AOI_Feature_selected ===true\">Feature selected\n        </div>\n        <div class=\"no-feature-selected\" v-show=\"parameter_by_location.is_AOI_Feature_selected ===false\">No Feature\n          selected\n        </div>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n\nimport {mapActions, mapState} from \"vuex\";\nimport OLWKT from \"ol/format/WKT\";\nimport OlGeoJSON from \"ol/format/GeoJSON\";\nimport eventHub from \"../utils/utils\";\n\nexport default {\n  name: 'selectLocation',\n  props: {\n    isDisable: {\n      type: Boolean,\n      required: true\n    }, IndexValue: {\n      type: Number,\n      required: true\n    }, Select_Option_Default_Location: {\n      type: Array,\n      required: true\n    },\n  },\n  data() {\n    return {\n      options: {\n        location_by: [\n          {\n            value: 'default_locations',\n            label: 'Major Cities',\n          },\n          {\n            value: 'AOI',\n            label: 'Select on map',\n          }\n        ],\n      }\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    ...mapActions([\"getCityData\"]),\n    featureSelectorDeleteUpdate() {\n\n      var wktfeaturegeom, geometryType, featureExtent;\n\n\n      if (this.selectInteraction) {\n        if (this.SelectByOption == 'Parameter') {\n          if (this.parameter_by_location.location_by == \"AOI\") {\n            if (this.selectInteraction.getFeatures().getLength()) {\n              var features = this.selectInteraction.getFeatures();\n              features.forEach((f) => {\n                var format = new OLWKT();\n                wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n                  dataProjection: 'EPSG:4326',\n                  featureProjection: 'EPSG:3857'\n                });\n                geometryType = f.getGeometry().getType();\n\n                featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n                featureExtent = featureExtent.getGeometry().getExtent();\n                f.set(\"SelectBy\", \"Parameter\");\n                f.set(\"LocationBy\", \"AOI\");\n                f.set(\"IndexValue\", this.radioValue);\n              });\n            }\n\n            let countSelectedFeature = 0;\n            this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n              if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"AOI\" && f.get(\"IndexValue\") == this.IndexValue) {\n                countSelectedFeature += 1;\n              }\n            });\n            console.log(countSelectedFeature + \" | \" + this.radioValue + \" | \" + this.IndexValue);\n            if (this.IndexValue == this.radioValue) {\n              if (countSelectedFeature) {\n                this.parameter_by_location.is_AOI_Feature_selected = true;\n                this.parameter_by_location.wktValue = wktfeaturegeom;\n                this.parameter_by_location.geometryType = geometryType;\n                this.parameter_by_location.featureExtent = featureExtent;\n              } else {\n                this.parameter_by_location.is_AOI_Feature_selected = false;\n                this.parameter_by_location.wktValue = '';\n                this.parameter_by_location.geometryType = '';\n                this.parameter_by_location.featureExtent = '';\n              }\n            }\n          } else {\n            if (this.radioValue == this.IndexValue) {\n              this.selectInteraction.getFeatures().clear();\n              this.$notify({\n                title: 'Warning',\n                message: \"To select this feature you need to select 'Select on map' from drop down menu\",\n                type: 'warning'\n              });\n            }\n          }\n        }\n      }\n    }\n  },\n  watch: {\n    SelectDefaultLocation(newVal, oldVal) {\n\n      if (newVal) {\n        // add it to vectorLayer\n        let selNewValObj = this.Select_Option_Default_Location.filter(function (x) {\n          return newVal == x.value\n        })[0];\n\n        let Feature = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        Feature.set(\"SelectBy\", \"Parameter\");\n        Feature.set(\"LocationBy\", \"default_location\");\n        Feature.set(\"IndexValue\", this.IndexValue);\n        this.WorkingVectorLayer.getSource().addFeature(Feature);\n\n        var format = new OLWKT();\n        var wktfeaturegeom = format.writeGeometry(Feature.getGeometry(), {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        var geometryType = Feature.getGeometry().getType();\n\n        let featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n\n        // let featureForExtent = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        featureExtent = featureExtent.getGeometry().getExtent();\n        this.parameter_by_location.wktValue = wktfeaturegeom;\n        this.parameter_by_location.geometryType = geometryType;\n        this.parameter_by_location.featureExtent = [featureExtent[0] - 5, featureExtent[1] - 3, featureExtent[2] + 5, featureExtent[3] + 3];\n        this.parameter_by_location.default_level_value = selNewValObj.label;\n      } else {\n        this.parameter_by_location.wktValue = '';\n        this.parameter_by_location.geometryType = '';\n        this.parameter_by_location.featureExtent = '';\n        this.parameter_by_location.default_level_value = '';\n      }\n      if (oldVal) {\n        // remove it from vector layer\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"default_location\" && f.get(\"id\") == oldVal && f.get(\"IndexValue\") == this.IndexValue) {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n      }\n    },\n    SelectLocationBy() {\n      this.parameter_by_location.default_location = '';\n    }\n  },\n  computed: {\n    ...mapState([\"selectInteraction\", \"mapObject\", \"WorkingVectorLayer\", \"mapControlVariable\"]),\n    SelectDefaultLocation() {\n      return this.parameter_by_location.default_location\n    }, SelectLocationBy() {\n      return this.parameter_by_location.location_by\n    },\n    parameter_by_location() {\n      return this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue.toString()];\n    }, radioValue() {\n      return this.mapControlVariable.radioValue;\n    }, SelectByOption() {\n      return this.mapControlVariable.select_by;\n    }\n  },\n  beforeCreate() {\n    eventHub.$once(\"runFeatureInteractionCode\", () => {\n\n      this.selectInteraction.on('select', () => {\n        this.featureSelectorDeleteUpdate();\n      });\n    });\n\n    eventHub.$on(\"SelectByParameterDefaultLocation\", () => {\n      console.log(\"okok\")\n      var elem = this.$refs.defaultLocation.$el // Element to fire on\n      // debugger;\n      elem.dispatchEvent(new Event(\"change\")); // Fire event\n    });\n\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n</style>","import { render } from \"./selectLocation.vue?vue&type=template&id=26900d22\"\nimport script from \"./selectLocation.vue?vue&type=script&lang=js\"\nexport * from \"./selectLocation.vue?vue&type=script&lang=js\"\n\nimport \"./selectLocation.vue?vue&type=style&index=0&id=26900d22&lang=scss\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./mapControlsRecent.vue?vue&type=template&id=0005bb3c&scoped=true\"\nimport script from \"./mapControlsRecent.vue?vue&type=script&lang=js\"\nexport * from \"./mapControlsRecent.vue?vue&type=script&lang=js\"\n\nimport \"./mapControlsRecent.vue?vue&type=style&index=0&id=0005bb3c&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0005bb3c\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div id=\"map-container2\" ref=\"LayerSelectorDropdown\">\n    </div>\n    <!--    <div id=\"layerSwitcherDiv\" class=\"ol-unselectable ol-control\" @click=\"LayerSwitcherClick()\">-->\n    <!--      <button>-->\n    <!--        <img src=\"@/assets/layers.svg\" style=\"height: 20px;width: 20px;\">-->\n    <!--      </button>-->\n    <!--    </div>-->\n\n    <!--    <el-drawer-->\n    <!--        title=\"Layers\"-->\n    <!--        v-model=\"drawer\"-->\n    <!--        custom-class=\"drawerCustomCSS\"-->\n    <!--        :append-to-body=\"drawerAppendToBody\"-->\n    <!--        :modal=\"false\"-->\n    <!--        :modal-class=\"'drawerForLayersList'\"-->\n    <!--    >-->\n    <!--      <span>-->\n    <!--        <div class=\"layerCollection\"></div>-->\n    <!--          </span>-->\n    <!--    </el-drawer>-->\n    <PrintMap></PrintMap>\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\n// import Control from \"ol/control/Control\"\n// import OSM from \"ol/source/OSM\";\nimport XYZ from 'ol/source/XYZ';\n// import {Image as ImageLayer, Tile as TileLayer} from 'ol/layer';\nimport { Tile as TileLayer} from 'ol/layer';\n// import TileWMS from \"ol/source/TileWMS\";\n// import ImageWMS from 'ol/source/ImageWMS';\nimport View from \"ol/View\";\n// import {dataSelect} from \"../utils/data\";\n// import eventHub from \"../utils/utils\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import EDALSLD from 'ol-plus/sld/EDALSLD';\n// import {ThreddsServer} from '../config';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n// import {lineString, lineDistance, area as turfArea,polygon as turfPolygon, length as turfLength} from '@turf/turf';\n// import {getArea, getLength,} from 'ol/sphere';\n// import LineString from 'ol/geom/LineString';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n\n// import {MajorBasinExtent, BasinExtent, mbasin, dataSelect, WMSSLD, legendImage} from \"../utils/data\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import {ThreddsServer} from \"../utils/config\";\n\n\n// import 'ol-ext/control/Search.css';\nimport SearchNominatim from 'ol-ext/control/SearchNominatim';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nimport Text from \"ol/style/Text\";\nimport {Icon} from 'ol/style';\nimport {toSize} from 'ol/size';\nimport ImageIcon from '../assets/markers_default.png';\nimport {getCenter as ol_extent_getCenter} from 'ol/extent';\nimport GeoJSON from \"ol/format/GeoJSON\";\n// import Legend from \"ol-ext/legend/Legend\";\nimport Legend from \"../utils/customLegend\"\nimport LegendControl from \"ol-ext/control/Legend\";\nimport CanvasScaleLine from \"ol-ext/control/CanvasScaleLine\";\nimport PrintDialog from \"ol-ext/control/PrintDialog\";\n\n// import OLPolygon from 'ol/geom/Polygon';\n// import OlSelect from 'ol/interaction/Select';\n// import OlDraw from 'ol/interaction/Draw';\n// import OlExtTextButton from 'ol-ext/control/TextButton';\n// import Bar from 'ol-ext/control/Bar';\nimport OlExtButton from 'ol-ext/control/Button';\n// import OlExtToggle from 'ol-ext/control/Toggle';\n// import 'ol-ext/control/Bar.css'\nimport CircleStyle from \"ol/style/Circle\";\n// import ScaleLine from \"ol/control/ScaleLine\";\nimport CanvasTitle from \"ol-ext/control/CanvasTitle\";\nimport {defaults} from \"ol/control\";\n\nimport {saveAs} from 'file-saver';\nimport {jsPDF} from \"jspdf\";\n\nimport {mapMutations, mapState} from 'vuex';\n\nimport PrintMap from \"./PrintMap\";\n\n// import {GeoServerHost} from \"../config\";\n// import ol_legend_Item from 'ol-ext/legend/Item';\n// import ol_legend_Legend from \"ol-ext/legend/Legend\";\n\n// ol_legend_Legend.prototype.removeItem = function (item) {\n//   let index = false;\n//   this._items.array_.forEach(function (it, idx) {\n//     if (it.getProperties().id == item.id) {\n//       index = idx;\n//     }\n//   });\n//   console.log(\"index\");\n//   console.log(index);\n//   if (index !== false) {\n//     this._items.array_.splice(index, 1);\n//   }\n// };\nexport default {\n  name: \"mapComponentRecent\",\n  components: {PrintMap},\n  data() {\n    return {\n      // drawerAppendToBody: true,\n      mapObj: '',\n      HighLightedLayer: '',\n      view: '',\n      mapObject: '',\n      MajorBasin: '',\n      AllLayers: '',\n      selectedFilesOnAYear: [],\n      // drawer: true,\n    }\n  },\n  created() {\n    this.mapControlVariable.LegendObject = new Legend({\n      title: 'Legend',\n      margin: 3,\n      // items: legendItems,\n      // size:[40, 25]\n      size:[60,30]\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSelectedLayerObj\", \"appendTimeSeriesLayerCollection\", \"setSelectInteraction\", \"setMapObject\", \"setWorkingVectorLayer\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\", \"addLegend\", \"removeLegend\"]),\n    mapInitilization() {\n\n      // let osm = new TileLayer({\n      //   source: new OSM({attributions: [],}),\n      //   // visible:false\n      // });\n\n      let esri_world_topomap = new TileLayer({\n        visible: true,\n        zIndex: 1,\n        source: new XYZ({\n          attributions: [],\n          url:\n              'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n              'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n          crossOrigin: \"Anonymous\"\n        }),\n      });\n\n      let view = new View({\n        center: [9388155.512006583, 3291367.8109067543],\n        zoom: 4,\n        extent: [6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793]\n\n      });\n      // let ScaleControl = new ScaleLine({\n      //   units: 'metric'\n      // });\n      //\n      var map = new Map({\n        layers: [],\n        // target: this.$refs['map-root'],\n        renderer: 'canvas',\n        target: 'map-container2',\n        controls: defaults({\n          attribution: false\n        }).extend([]),\n        view: view,\n      });\n      // map.addLayer(osm);\n      map.addLayer(esri_world_topomap);\n      this.mapObject = map;\n      window.mapObject = map;\n      this.view = view;\n\n      // this.mapObject.addControl(\n      //     new Control({\n      //       element: document.getElementById('layerSwitcherDiv')\n      //     })\n      // );\n      map.getView().fit([6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793], map.getView());\n      this.setMapObject(this.mapObject);\n    },\n    legendObjectCollection() {\n      let legendObjectEnabled = [];\n      this.TimeSeriesLayerCollection.forEach(function (layerObj) {\n        let Properties = layerObj.getProperties();\n        console.log(Properties.legendPath);\n        let lObj = {\n          title: Properties.title,\n          // typeGeom: 'Point',\n          style: new Style({\n            image: new Icon({\n              src: Properties.legendPath,\n              crossOrigin: 'anonymous' // Enable print\n            })\n          })\n        };\n        legendObjectEnabled.push(lObj)\n      });\n      return legendObjectEnabled;\n    },\n    addGeoCodingAndInteractionBar() {\n      var map = this.mapObject;\n\n// Set the control grid reference\n      var search = new SearchNominatim({\n        polygon: true,\n        reverse: false,\n        position: true,\t// Search, with priority to geo position,\n        // maxHistory: -1,\n        className: 'OSMBasedGeocodingEmissionPage',\n      });\n\n// search.set('copy', false)\n\n      var GeoCodingAndDrawLayer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 999\n      });\n\n      this.setWorkingVectorLayer(GeoCodingAndDrawLayer);\n\n      map.addLayer(GeoCodingAndDrawLayer);\n\n      map.addControl(search);\n\n\n      function removePreviousSearchFeature() {\n        var features = GeoCodingAndDrawLayer.getSource().getFeatures();\n        features.forEach(function (f) {\n          if (f.getProperties().osm_id) {\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          }\n        });\n        // console.log(features);\n      }\n\n      function UpDateVectorLayerStyle() {\n        GeoCodingAndDrawLayer.getSource().forEachFeature(function (feature) {\n          let StyleObj = null;\n          if (feature.getProperties().osm_id) {\n            StyleObj = [\n              new Style({\n                stroke: new Stroke({\n                  color: [0, 0, 0, 0],\n                  opacity: 1,\n                  width: 3\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff00'\n                })\n                // Commented to only see the lines\n                //,fill: new ol.style.Stroke ({\n                //  color: [155, 155, 155, 0.4]\n                //})\n              }),\n              // Dash white lines (second style, on the top)\n              new Style({\n                image: new Icon({\n                  anchor: [0.5, 46],\n                  anchorXUnits: 'fraction',\n                  anchorYUnits: 'pixels',\n                  src: ImageIcon,\n                  size: toSize([40, 45]),\n                  // offset:[20,20]\n                }),\n                stroke: new Stroke({\n                  color: [0, 0, 255, 1.0],\n                  opacity: 1,\n                  width: 3,\n                  lineDash: [4, 8, 4, 8]\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff40'\n                })\n              })\n            ];\n\n          } else {\n            StyleObj = new Style({\n              image: new CircleStyle({\n                radius: 5,\n                stroke: new Stroke({\n                  color: [255, 0, 0, 1],\n                  opacity: 1,\n                  width: 2\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff50'\n                }),\n              }),\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              })\n              // Commented to only see the lines\n              //,fill: new ol.style.Stroke ({\n              //  color: [155, 155, 155, 0.4]\n              //})\n            });\n\n          }\n          feature.setStyle(StyleObj);\n\n        });\n      }\n\n\n// Select feature when click on the reference index\n      search.on('select', function (e) {\n        // console.log(e);\n        // GeoCodingAndDrawLayer.getSource().clear();\n        removePreviousSearchFeature();\n        // Check if we get a geojson to describe the search\n        if (e.search.geojson) {\n          var format = new GeoJSON();\n          var f = format.readFeature(e.search.geojson, {\n            dataProjection: \"EPSG:4326\",\n            featureProjection: map.getView().getProjection()\n          });\n          delete e.search.geojson;\n          f.setProperties(e.search);\n          GeoCodingAndDrawLayer.getSource().addFeature(f);\n          var view = map.getView();\n          var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n          var zoom = view.getZoomForResolution(resolution);\n          var center = ol_extent_getCenter(f.getGeometry().getExtent());\n          // redraw before zoom\n          setTimeout(function () {\n            view.animate({\n              center: center,\n              zoom: Math.min(zoom, 16)\n            });\n          }, 100);\n        } else {\n          map.getView().animate({\n            center: e.coordinate,\n            zoom: Math.max(map.getView().getZoom(), 16)\n          });\n        }\n        UpDateVectorLayerStyle();\n      });\n\n\n//\n//       // this is for selection and create new feature\n//       // Main control bar\n//       var mainbar = new Bar();\n//       mainbar.setPosition('top-left');\n//\n//       map.addControl(mainbar);\n//\n// // Edit control bar\n//       var editbar = new Bar({\n//         toggleOne: true,\t// one control active at the same time\n//         group: false\t\t\t// group controls together\n//       });\n//       mainbar.addControl(editbar);\n//\n// // Add selection tool:\n// //  1- a toggle control with a select interaction\n// //  2- an option bar to delete / get information on the selected feature\n//       var sbar = new Bar();\n//       sbar.addControl(new OlExtButton({\n//         html: '<i class=\"fa fa-times\"></i>',\n//         title: \"Delete\",\n//         handleClick: function () {\n//           var features = selectCtrl.getInteraction().getFeatures();\n//           if (!features.getLength()) info(\"Select an object first...\");\n//           else info(features.getLength() + \" object(s) deleted.\");\n//\n//           features.forEach(function (f) {\n//             console.log(f);\n//             GeoCodingAndDrawLayer.getSource().removeFeature(f);\n//           });\n//           selectCtrl.getInteraction().getFeatures().clear();\n//           selectCtrl.getInteraction().dispatchEvent({type: 'select'});\n//         }\n//       }));\n//\n//\n//       var selectCtrl = new OlExtToggle({\n//         html: '<i class=\"fa fa-hand-pointer\"></i>',\n//         title: \"Select\",\n//         interaction: new OlSelect({\n//           hitTolerance: 2,\n//           style: new Style({\n//             image: new CircleStyle({\n//               radius: 5,\n//               stroke: new Stroke({\n//                 color: [255, 0, 0, 1],\n//                 opacity: 1,\n//                 width: 2\n//               }),\n//               fill: new Fill({\n//                 color: '#e5e5ff50'\n//               }),\n//             }),\n//             stroke: new Stroke({\n//               color: [255, 0, 0, 1],\n//               opacity: 1,\n//               width: 2\n//             }),\n//             fill: new Fill({\n//               color: '#e5e5ff50'\n//             })\n//             // Commented to only see the lines\n//             //,fill: new ol.style.Stroke ({\n//             //  color: [155, 155, 155, 0.4]\n//             //})\n//           }),\n//           layers: [GeoCodingAndDrawLayer]\n//         }),\n//         bar: sbar,\n//         autoActivate: true,\n//         active: true\n//       });\n//       this.setSelectInteraction(selectCtrl.getInteraction());\n//\n//       editbar.addControl(selectCtrl);\n//       this.setSelectedLayerObj(selectCtrl.getInteraction());\n// // Add editing tools\n//       var pedit = new OlExtToggle({\n//         html: '<i class=\"fa fa-map-marker-alt\" ></i>',\n//         title: 'Point',\n//         interaction: new OlDraw({\n//           type: 'Point',\n//           source: GeoCodingAndDrawLayer.getSource()\n//         })\n//       });\n//       editbar.addControl(pedit);\n//       var fedit = new OlExtToggle({\n//         html: '<i class=\"fa fa-draw-polygon\" ></i>',\n//         title: 'Polygon',\n//         interaction: new OlDraw({\n//           type: 'Polygon',\n//           source: GeoCodingAndDrawLayer.getSource(),\n//           // Count inserted points\n//           geometryFunction: function (coordinates, geometry) {\n//             this.nbpts = coordinates[0].length;\n//             if (geometry) geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n//             else geometry = new OLPolygon(coordinates);\n//             return geometry;\n//           }\n//         }),\n//         // Options bar ssociated with the control\n//         bar: new Bar({\n//           controls: [new OlExtTextButton({\n//             html: 'undo',//'<i class=\"fa fa-mail-reply\"></i>',\n//             title: \"undo last point\",\n//             handleClick: function () {\n//               if (fedit.getInteraction().nbpts > 1) fedit.getInteraction().removeLastPoint();\n//             }\n//           }),\n//             new OlExtTextButton({\n//               html: 'finish',\n//               title: \"finish\",\n//               handleClick: function () {\n//                 // Prevent null objects on finishDrawing\n//                 if (fedit.getInteraction().nbpts > 3) fedit.getInteraction().finishDrawing();\n//               }\n//             })\n//           ]\n//         })\n//       });\n//       editbar.addControl(fedit);\n//\n//\n//       // fedit.getInteraction().on('drawend', function (e) {\n//       //\n//       //   console.log(e.feature);\n//       //   console.log(e.feature);\n//       //\n//       //   // GeoCodingAndDrawLayer.getSource().removeFeature(e.feature);\n//       //\n//       //\n//       // });\n//\n//       fedit.getInteraction().on('drawstart', function () {\n//         GeoCodingAndDrawLayer.getSource().once('addfeature', handleAddFeature);\n//       });\n//\n//       function handleAddFeature(evt) {\n//         let coordi = evt.feature.getGeometry().getCoordinates();\n//\n//         const area = getArea(evt.feature.getGeometry());\n//         // Sq.Km\n//         let outputArea = Math.round((area / 1000000) * 100) / 100;\n//         console.log(outputArea);\n//\n//         let li = new LineString(coordi);\n//         const length = getLength(li);\n//         // In Km\n//         let outputLength = Math.round((length / 1000) * 100) / 100;\n//         console.log(outputLength);\n//         // GeoCodingAndDrawLayer.getSource().removeFeature(evt.feature);\n//       }\n//\n// // Show info\n//       function info(i) {\n//         console.log(i);\n//         // document.querySelector(\"#info\").innerHTML(i || \"\");\n//       }\n//\n//\n//\n//       console.log(\"second\");\n//       eventHub.$emit('runFeatureInteractionCode');\n    },\n    addPrintMapFunctionality() {\n      // Add a custom push button with onToggle function\n      // let that = this;\n      var PrintButton = new OlExtButton({\n        html: '<i class=\"fas fa-print\"></i>',\n        className: \"PrintMap\",\n        title: \"Print map\",\n        handleClick: () => {\n          // that.PrintMapComponentData.PrintMapDialogVisible = true;\n          // setTimeout(() => {\n          //   eventHub.$emit('OpenDialogOfPrintAndProxyfy');\n          // }, 500);\n        }\n      });\n\n      this.mapObject.addControl(PrintButton);\n    },\n    olExtLegentItem(title, id, legend) {\n      return {\n        id: id,\n        title: title,\n        typeGeom: 'Point',\n        style: new Style({\n          image: new Icon({\n            src: legend,\n            crossOrigin: 'anonymous' // Enable print\n          })\n        })\n      };\n    },\n    LayerSwitcherClick() {\n      this.drawer = true;\n    },\n    handleClose(done, e) {\n      console.log(e);\n\n    },\n    olextPrintFunction() {\n      // Add a title control\n      this.mapObject.addControl(new CanvasTitle({\n        title: 'my title',\n        visible: false,\n        style: new Style({text: new Text({font: '20px \"Lucida Grande\",Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif'})})\n      }));\n      // let legendItems=[];\n      // Add a legend to the print\n      var legendCtrl = new LegendControl({legend: this.mapControlVariable.LegendObject});\n      this.mapObject.addControl(legendCtrl);\n\n      // Add a ScaleLine control\n      this.mapObject.addControl(new CanvasScaleLine());\n\n      // Print control\n      var printControl = new PrintDialog({lang: 'en'});\n      printControl.setSize('A4');\n      printControl.setOrientation('landscape');\n      this.mapObject.addControl(printControl);\n\n      /* On print > save image file */\n      printControl.on(['print', 'error'], (e) => {\n        // let LegendImageArray = this.legendObjectCollection();\n        // LegendImageArray.forEach(function (ii) {\n        //   console.log(ii);\n        //   legendd.addItem(ii);\n        // });\n        // // legendItems = LegendImageArray;\n        // console.log(LegendImageArray);\n\n        // Print success\n        if (e.image) {\n          if (e.pdf) {\n            // Export pdf using the print info\n            var pdf = new jsPDF({\n              orientation: e.print.orientation,\n              unit: e.print.unit,\n              format: e.print.size\n            });\n            pdf.addImage(e.image, 'JPEG', e.print.position[0], e.print.position[0], e.print.imageWidth, e.print.imageHeight);\n            pdf.save(e.print.legend ? 'legend.pdf' : 'map.pdf');\n          } else {\n            // Save image as file\n            e.canvas.toBlob(function (blob) {\n              var name = (e.print.legend ? 'legend.' : 'map.') + e.imageType.replace('image/', '');\n              saveAs(blob, name);\n            }, e.imageType, e.quality);\n          }\n        } else {\n          console.warn('No canvas to export');\n        }\n      });\n    },\n  },\n  computed: {\n    ...mapState([\"TimeSeriesLayerCollection\", \"PrintMapComponentData\", \"mapControlVariable\"]),\n    // getInventory() {\n    //   return dataSelect.Inventory;\n    // },\n  },\n\n  beforeMount() {\n  },\n  mounted() {\n    console.log(this.mapControlVariable);\n    this.mapInitilization();\n    // this.addGeoCoding();\n    this.addGeoCodingAndInteractionBar();\n    // this.addPrintMapFunctionality();\n\n    this.olextPrintFunction();\n    //\n    // let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n    // let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n    //\n    //\n    // let AddRemoveLegendFunction = function () {\n    //\n    //   if (this.getProperties().visible) {\n    //     that.addLegend(this.getProperties().OLEXTLegendObject);\n    //   } else {\n    //     that.removeLegend(this.getProperties().OLEXTLegendObject);\n    //   }\n    // };\n    //\n    // let le1 = this.olExtLegentItem('Country Outline', 'Country_Outline', WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry')\n    //\n    // // this.drawer = false;\n    // let countryBoundary = new ImageLayer({\n    //   id: 'Country_Outline',\n    //   title: 'Country Outline',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry',\n    //   zIndex: 6,\n    //   OLEXTLegendObject: le1,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_country_boundry'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le2 = this.olExtLegentItem('Province', 'Province', WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary')\n    //\n    // let provinceBoundary = new ImageLayer({\n    //   id: 'Province',\n    //   title: 'Province',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary',\n    //   zIndex: 5,\n    //   OLEXTLegendObject: le2,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_provincial_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le3 = this.olExtLegentItem('District', 'District', WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary')\n    //\n    // let DistrictBoundary = new ImageLayer({\n    //   id: 'District',\n    //   title: 'District',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary',\n    //   zIndex: 4,\n    //   OLEXTLegendObject: le3,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_district_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le4 = this.olExtLegentItem('Palika', 'Palika', WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary')\n    //\n    // let PalikaBoundary = new ImageLayer({\n    //   id: 'Palika',\n    //   title: 'Palika',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary',\n    //   zIndex: 3,\n    //   OLEXTLegendObject: le4,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_palika_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    //\n    // let that = this;\n    // countryBoundary.on('change:visible', AddRemoveLegendFunction);\n    // provinceBoundary.on('change:visible', AddRemoveLegendFunction);\n    // DistrictBoundary.on('change:visible', AddRemoveLegendFunction);\n    // PalikaBoundary.on('change:visible', AddRemoveLegendFunction);\n    // this.mapObject.addLayer(countryBoundary);\n    // this.mapObject.addLayer(provinceBoundary);\n    // this.mapObject.addLayer(DistrictBoundary);\n    // this.mapObject.addLayer(PalikaBoundary);\n    //\n    // let l1 = new LayerSwitcher(\".layerCollection\", countryBoundary, false, false);\n    // let l2 = new LayerSwitcher(\".layerCollection\", provinceBoundary, false, false);\n    // let l3 = new LayerSwitcher(\".layerCollection\", DistrictBoundary, false, false);\n    // let l4 = new LayerSwitcher(\".layerCollection\", PalikaBoundary, false, false);\n    //\n    // l1.setVisible(true);\n    // l2.setVisible(true);\n    // l3.setVisible(true);\n    // l4.setVisible(true);\n    //\n    // this.appendTimeSeriesLayerCollection(l1);\n    // this.appendTimeSeriesLayerCollection(l2);\n    // this.appendTimeSeriesLayerCollection(l3);\n    // this.appendTimeSeriesLayerCollection(l4);\n    //\n    //\n  },\n}\n</script>\n\n<style>\n#map-container2 {\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n}\n\n#map-container2 .ol-viewport {\n  border-radius: 5px;\n}\n\n#layerSwitcherDiv {\n  right: 0.5em;\n  top: 0.5em;\n  position: absolute;\n}\n\n#layerSwitcherDiv button {\n  line-height: unset;\n  border-radius: 1px;\n}\n\n\n.drawerForLayersList {\n  position: initial !important;\n}\n\n/* OSM Based Geocoding*/\n.ol-search ul li {\n  border-bottom: 1px solid lightgray;\n\n  padding: 10px 5px 10px 5px !important;\n  flex: 1;\n  max-width: 608px;\n  white-space: normal !important;\n  overflow: unset;\n  flex-grow: 1;\n  text-overflow: ellipsis;\n}\n\n.ol-search ul li:last-child {\n  border-bottom: none;\n  border-radius: 0px;\n}\n\n.ol-search ul {\n  list-style: none;\n  cursor: pointer;\n  padding: 0px 5px 0px 5px !important;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  clear: both;\n  cursor: pointer;\n  max-width: 618px;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #fff;\n  font-size: 13px;\n}\n\n.ol-search {\n  z-index: 999;\n}\n\n.ol-search {\n  top: 4.1em;\n  left: 0.5em;\n  /*width: 500px;*/\n}\n\n.ol-search input {\n  width: 600px;\n}\n\n\n.ol-control.ol-bar {\n  left: 3.2em;\n  top: 6em;\n}\n\n.ol-control.ol-bar.ol-top.ol-left, .ol-control.ol-bar.ol-top.ol-right {\n  top: 6.5em;\n  transform: none;\n}\n\n.PrintMap.ol-button.ol-unselectable.ol-control {\n  top: 12em;\n  left: 0.5em;\n}\n\n.LayerDiv {\n  margin-top: 10px;\n}\n\n.withOpacityChange {\n  margin-bottom: 18px;\n}\n\n.ol-scale-line {\n  right: 0;\n  left: auto;\n  bottom: 2em;\n}\n</style>","import {DEVICE_PIXEL_RATIO as ol_has_DEVICE_PIXEL_RATIO} from \"ol/has\";\nimport {asString as ol_color_asString} from \"ol/color\";\nimport {toContext as ol_render_toContext} from \"ol/render\";\nimport ol_Feature from \"ol/Feature\";\nimport ol_geom_Point from \"ol/geom/Point\";\nimport ol_geom_LineString from \"ol/geom/LineString\";\nimport ol_geom_Polygon from \"ol/geom/Polygon\";\nimport {extend as ol_extent_extend} from \"ol/extent\";\nimport ol_legend_Legend from \"ol-ext/legend/Legend\";\n\n/** Refresh the legend\n */\nol_legend_Legend.prototype.refresh = function () {\n    var table = this._listElement;\n    table.innerHTML = '';\n    var margin = this.get('margin');\n    var width = this.get('size')[0] + 2 * margin;\n    var height = this.get('lineHeight') || this.get('size')[1] + 2 * margin;\n\n    var canvas = this.getCanvas();\n    var ctx = canvas.getContext('2d');\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    var ratio = ol_has_DEVICE_PIXEL_RATIO;\n\n    // Calculate width\n    ctx.font = this._titleStyle.getFont();\n    var textWidth = this._measureText(ctx, this.getTitle('title')).width;\n    // get longest width from this loop\n    this._items.forEach(function (r) {\n        if (r.get('feature') || r.get('typeGeom')) {\n            ctx.font = r.get('textStyle') ? r.get('textStyle').getFont() : this._textStyle.getFont();\n            textWidth = Math.max(textWidth, this._measureText(ctx, r.get('title')).width + width);\n        } else {\n            ctx.font = r.get('textStyle') ? r.get('textStyle').getFont() : this._titleStyle.getFont();\n            textWidth = Math.max(textWidth, this._measureText(ctx, r.get('title')).width);\n        }\n    }.bind(this));\n\n    let heightAccumulator = height;\n    //custom calculation of height\n    this._items.forEach(function (r) {\n        heightAccumulator = heightAccumulator + 6 + r.getProperties().size[1];\n    });\n\n    canvas.width = (textWidth + 2 * margin) * ratio;\n    canvas.height = heightAccumulator;\n    canvas.style.height = heightAccumulator;\n\n    //getLength gives the number of array on _items\n    // canvas.height = (this._items.getLength() + 1) * height * ratio;\n    // canvas.style.height = ((this._items.getLength() + 1) * height) + 'px';\n\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = ol_color_asString(this._textStyle.getFill().getColor());\n\n    // Add Title\n    if (this.getTitle()) {\n        table.appendChild(this._title.getElement([width, height], function (b) {\n            this.dispatchEvent({\n                type: 'select',\n                index: -1,\n                symbol: b,\n                item: this._title\n            });\n        }.bind(this)));\n        ctx.font = this._titleStyle.getFont();\n        ctx.textAlign = 'center';\n        this._drawText(ctx, this.getTitle(), canvas.width / ratio / 2, height / 2);\n    }\n    let HTextAndImage = height + height * 0.5;\n    // Add items\n    this._items.forEach(function (r, i) {\n        var index = i + (this.getTitle() ? 1 : 0);\n        table.appendChild(r.getElement([width, height], function (b) {\n            this.dispatchEvent({\n                type: 'select',\n                index: i,\n                symbol: b,\n                item: r\n            });\n        }.bind(this)));\n        var item = r.getProperties();\n        ctx.textAlign = 'left';\n        if (item.feature || item.typeGeom) {\n            canvas = this.getLegendImage(item, canvas, index, HTextAndImage);\n            ctx.font = r.get('textStyle') ? r.get('textStyle').getFont() : this._textStyle.getFont();\n            this._drawText(ctx, r.get('title'), width + margin, HTextAndImage);\n\n            // this._drawText(ctx, r.get('title'), width + margin, (i + 1.5) * height);\n            HTextAndImage = HTextAndImage + 6 + r.getProperties().size[1];\n        } else {\n            ctx.font = r.get('textStyle') ? r.get('textStyle').getFont() : this._titleStyle.getFont();\n            if (/\\bcenter\\b/.test(item.className)) {\n                ctx.textAlign = 'center';\n                this._drawText(ctx, r.get('title'), canvas.width / ratio / 2, (i + 1.5) * height);\n            } else {\n                this._drawText(ctx, r.get('title'), margin, (i + 1.5) * height);\n            }\n        }\n    }.bind(this));\n\n    console.log(\"loop complete\")\n\n    // Done\n    this.dispatchEvent({\n        type: 'refresh',\n        width: width,\n        height: (this._items.length + 1) * height\n    });\n};\n\n/** Get the image for a style\n * @param {olLegendItemOptions} item\n * @param {Canvas|undefined} canvas a canvas to draw in, if none creat one\n * @param {int|undefined} row row number to draw in canvas, default 0\n * @return {CanvasElement}\n */\nol_legend_Legend.prototype.getLegendImage = function (options, canvas, row, accumulatedHeight) {\n    options = options || {};\n    return ol_legend_Legend.getLegendImage({\n        className: options.className,\n        feature: options.feature,\n        typeGeom: options.typeGeom,\n        style: options.style || this._style,\n        properties: options.properties,\n        margin: options.margin || this.get('margin'),\n        size: options.size || this.get('size'),\n        accumulatedHeight: accumulatedHeight,\n        lineHeight: options.lineHeight || this.get('lineHeight'),\n        onload: function () {\n            // Force refresh\n            this.refresh();\n        }.bind(this)\n    }, canvas, row);\n};\n\n/** Get a symbol image for a given legend item\n * @param {olLegendItemOptions} item\n * @param {Canvas|undefined} canvas a canvas to draw in, if none creat one\n * @param {int|undefined} row row number to draw in canvas, default 0\n */\nol_legend_Legend.getLegendImage = function (item, canvas, row) {\n    item = item || {};\n    if (typeof (item.margin) === 'undefined') item.margin = 10;\n    var size = item.size || [40, 25];\n    item.onload = item.onload || function () {\n        setTimeout(function () {\n            ol_legend_Legend.getLegendImage(item, canvas, row);\n        }, 100);\n    };\n    var width = size[0] + 2 * item.margin;\n    var height = item.lineHeight || (size[1] + 2 * item.margin);\n    var ratio = item.pixelratio || ol_has_DEVICE_PIXEL_RATIO;\n    if (!canvas) {\n        row = 0;\n        canvas = document.createElement('canvas');\n        canvas.width = width * ratio;\n        canvas.height = height * ratio;\n    }\n\n    var ctx = canvas.getContext('2d');\n    ctx.save();\n    var vectorContext = ol_render_toContext(ctx, {pixelRatio: ratio});\n\n    var typeGeom = item.typeGeom;\n    var style;\n    var feature = item.feature;\n    if (!feature && typeGeom) {\n        if (/Point/.test(typeGeom)) feature = new ol_Feature(new ol_geom_Point([0, 0]));\n        else if (/LineString/.test(typeGeom)) feature = new ol_Feature(new ol_geom_LineString([0, 0]));\n        else feature = new ol_Feature(new ol_geom_Polygon([[0, 0]]));\n        if (item.properties) feature.setProperties(item.properties);\n    }\n    if (feature) {\n        style = feature.getStyle();\n        if (typeof (style) === 'function') style = style(feature);\n        if (!style) {\n            style = typeof (item.style) === 'function' ? item.style(feature) : item.style || [];\n        }\n        typeGeom = feature.getGeometry().getType();\n    } else {\n        style = [];\n    }\n    if (!(style instanceof Array)) style = [style];\n\n    var cx = width / 2;\n    var cy = height / 2;\n    var sx = size[0] / 2;\n    var sy = size[1] / 2;\n    var dySave = 10;\n\n    var i, s;\n    // Get point offset\n    if (typeGeom === 'Point') {\n        var extent = null;\n        for (i = 0; style[i]; i++) {\n            s = style[i]\n            var img = s.getImage();\n            // Refresh legend on image load\n            if (img) {\n                var imgElt = img.getPhoto ? img.getPhoto() : img.getImage();\n                // Check image is loaded\n                if (imgElt && imgElt instanceof HTMLImageElement && !imgElt.naturalWidth) {\n                    if (typeof (item.onload) === 'function') {\n                        imgElt.addEventListener('load', function () {\n                            setTimeout(function () {\n                                item.onload()\n                            }, 100);\n                        });\n                    }\n                    img.load();\n                }\n                // Check anchor to center the image\n                if (img.getAnchor) {\n                    var anchor = img.getAnchor();\n                    if (anchor) {\n                        var si = img.getSize();\n                        var dx = anchor[0] - si[0];\n                        var dy = anchor[1] - si[1];\n                        dySave = anchor[1];\n                        if (!extent) {\n                            extent = [dx, dy, dx + si[0], dy + si[1]];\n                        } else {\n                            ol_extent_extend(extent, [dx, dy, dx + si[0], dy + si[1]]);\n                        }\n                    }\n                }\n            }\n        }\n        if (extent) {\n            cx = cx + (extent[2] + extent[0]) / 2;\n            cy = cy + (extent[3] + extent[1]) / 2;\n        }\n    }\n\n    // Draw image\n    cy += (row * height) || 0;\n    cy = item.accumulatedHeight + dySave - 10;\n    for (i = 0; style[i]; i++) {\n        s = style[i]\n        vectorContext.setStyle(s);\n        ctx.save();\n        var geom;\n        switch (typeGeom) {\n            case ol_geom_Point:\n            case 'Point':\n            case 'MultiPoint': {\n                geom = new ol_geom_Point([cx, cy]);\n                break;\n            }\n            case ol_geom_LineString:\n            case 'LineString':\n            case 'MultiLineString': {\n                // Clip lines\n                ctx.rect(item.margin * ratio, 0, size[0] * ratio, canvas.height);\n                ctx.clip();\n                geom = new ol_geom_LineString([[cx - sx, cy], [cx + sx, cy]]);\n                break;\n            }\n            case ol_geom_Polygon:\n            case 'Polygon':\n            case 'MultiPolygon': {\n                geom = new ol_geom_Polygon([[[cx - sx, cy - sy], [cx + sx, cy - sy], [cx + sx, cy + sy], [cx - sx, cy + sy], [cx - sx, cy - sy]]]);\n                break;\n            }\n        }\n        // Geometry function?\n        if (s.getGeometryFunction()) {\n            geom = s.getGeometryFunction()(new ol_Feature(geom));\n            ctx.restore();\n            vectorContext.drawGeometry(geom);\n        } else {\n            vectorContext.drawGeometry(geom);\n            ctx.restore();\n        }\n    }\n\n    ctx.restore();\n\n    return canvas;\n};\n\n\nexport default ol_legend_Legend","<template>\n  <div class=\"\">\n    <el-dialog\n        v-model=\"PrintMapComponentData.PrintMapDialogVisible\"\n        title=\"Print Map\"\n        width=\"95%\"\n        :before-close=\"handleClose\"\n        :append-to-body=\"true\"\n        :top=\"'3vh'\"\n    >\n      <el-row>\n        <el-col :span=\"8\" class=\"printing-control\">\n\n          <el-form\n              ref=\"MapPrintValidateForm\"\n              :model=\"MapPrintValidateForm\"\n              label-width=\"100px\"\n              class=\"demo-ruleForm\"\n              size=\"mini\"\n              label-position=\"top\"\n          >\n\n            <el-form-item\n                label=\"Map Title\"\n                prop=\"title\"\n                :rules=\"[\n        { required: true, message: 'Map title is required' },\n        { type: 'string', message: 'Map title must be string' },\n      ]\"\n            >\n              <el-input\n                  v-model.number=\"MapPrintValidateForm.title\"\n                  type=\"age\"\n                  autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n\n            <el-form-item\n                label=\"Output File Name\"\n                prop=\"fileName\"\n                :rules=\"[\n        { required: true, message: 'Map title is required' },\n        { type: 'string', message: 'Output File Name must be string' },\n      ]\"\n            >\n              <el-input\n                  v-model.number=\"MapPrintValidateForm.fileName\"\n                  type=\"fileName\"\n                  autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n\n            <el-form-item>\n              <el-collapse v-model=\"AccordionActiveName\" accordion>\n                <el-collapse-item name=\"1\">\n\n                  <template #title>\n                    <el-checkbox v-model=\"CheckSelectAll\" label=\"Select legend all items\"\n                                 class=\"selectAllLegend\"></el-checkbox>\n                  </template>\n                  <mapLagend\n                      v-for=\"item in legendInfos\"\n                      :key=\"item.id\"\n                      :item=\"item\"\n                  />\n\n                </el-collapse-item>\n              </el-collapse>\n            </el-form-item>\n            <el-form-item>\n\n              <el-button @click=\"Cancel\">Cancel</el-button>\n\n              <el-button type=\"primary\" @click=\"submitForm('MapPrintValidateForm')\"\n              >Export map\n              </el-button\n              >\n            </el-form-item>\n\n\n          </el-form>\n\n\n        </el-col>\n        <el-col :span=\"16\">\n          <div class=\"map-print-controls\">\n            <div class=\"muted-text\">Adjust the map extent as per your requirement.</div>\n            <div class=\"grid-content bg-purple-light\" id=\"map-control-printing\">\n            </div>\n\n          </div>\n        </el-col>\n      </el-row>\n\n    </el-dialog>\n  </div>\n\n</template>\n\n<script>\nimport {mapState} from \"vuex\";\nimport jsPDF from \"jspdf/dist/jspdf.min\";\n\nimport eventHub from \"../utils/utils\";\nimport mapLagend from \"./mapLagend\";\nimport {Action} from \"../store/actionType\";\n\nexport default {\n  name: \"PrintMap\",\n  data() {\n    return {\n      MapPrintValidateForm: {\n        title: '',\n        fileName: ''\n      },\n      AccordionActiveName: '',\n      CheckSelectAll: false,\n      PROXY_PREFIX: Action.Base + '/apps/airqualitynp/WMSProxy/',\n      legendInfos: [],\n      LegendUIList: []\n    };\n  },\n  components: {mapLagend},\n  watch: {\n    CheckSelectAll(newVal) {\n\n      this.legendInfos.forEach(function (obj1) {\n        obj1.visible = newVal\n      });\n\n\n    }\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n            if (valid) {\n              console.log(\"test\");\n\n              const layout = this.getMapPDFLayout();\n              const title = this.MapPrintValidateForm.title;\n              const outputfilename = this.MapPrintValidateForm.fileName;\n\n              const mapSize = this.mapObject.getSize();\n              const mapResolution = this.mapObject.getView().getResolution();\n              this.mapObject.once(\"rendercomplete\", async () => {\n                    // setting up the canvas\n                    const canvas = document.createElement(\"canvas\");\n                    canvas.width = layout.mapFrameSizePxl[0];\n                    canvas.height = layout.mapFrameSizePxl[1];\n                    const context = canvas.getContext(\"2d\");\n\n                    // sort the legend by height\n                    let legendInfos1 = this.legendInfos.filter(function (curObje) {\n                      return curObje.visible === true;\n                    }).sort((item1, item2) => item1.imgHeight - item2.imgHeight);\n\n                    this.copyOLMapTo(context);\n\n                    if (legendInfos1.length || false) {\n                      await this.addLegendsTo(context, {\n                        legendInfos: legendInfos1,\n                        pos: layout.legendBoxPxl.pos,\n                        columnWidth: layout.legendBoxPxl.columnWidth,\n                        height: layout.legendBoxPxl.height,\n                      });\n                    }\n\n                    this.drawPolygon(context, \"black\", layout.northArrowCoordsPxl)\n                    this.drawScaleBar(context, {x: canvas.width, y: canvas.height})\n                    context.strokeStyle = \"black\";\n                    context.strokeRect(0, 0, canvas.width, canvas.height) // map frame border\n\n                    this.createMapPDF(title, outputfilename, canvas, layout)\n                    // reset original map size\n                    this.mapObject.setSize(mapSize);\n                    this.mapObject.getView().setResolution(mapResolution);\n                  }\n              );\n              // set map size to print frame size\n              const frameSize = layout.mapFrameSizePxl;\n              this.mapObject.setSize(frameSize);\n              const scaling = Math.min(frameSize[0] / mapSize[0], frameSize[1] / mapSize[1]);\n              this.mapObject.getView().setResolution(mapResolution / scaling);\n\n            } else {\n              console.log('error submit!!');\n              return false\n            }\n          }\n      )\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    Cancel() {\n      this.PrintMapComponentData.PrintMapDialogVisible = false;\n      this.backToNormal();\n    },\n    handleClose(done) {\n      done();\n      this.backToNormal();\n    },\n    backToNormal() {\n      let target = document.querySelector('#map-container2');\n      this.mapObject.setTarget(target);\n      this.deproxifyWMSLayers();\n\n    },\n    getMapPDFLayout() {\n      const DPI = 120; // pdf's dpi\n      const mmToPixel = dim_mm => dim_mm * DPI / 25.4; // 1 inch = 25.4 mm\n      // all measurements are in mm if not suffixed by pxl\n      const margin = 10;\n      const topMargin = 15;\n      const pageWidth = 297;\n      const pageHeight = 210;\n      const mapWidth = pageWidth - 2 * margin; // 272\n      const mapHeight = pageHeight - topMargin - margin; // 180\n      const mapHeightPxl = mmToPixel(mapHeight);\n      // legend positions are relative to mapframe\n      let legendHeightPercent = 0.42;\n      let legendHeightPxl = mapHeightPxl * legendHeightPercent;\n      let legendPosPxl = {\n        x: mmToPixel(2),\n        y: mapHeightPxl * (1 - legendHeightPercent) - mmToPixel(2)\n      }\n      // northArrow Coords: also relative to mapFrame\n      const arrowBaseWidth = 9;\n      const arrowHeight = 12;\n      const arrowTop = 6;\n      const arrowCenterX = mapWidth - (6 + arrowBaseWidth / 2);\n      const northArrowCoords = [\n        [arrowCenterX, arrowTop], // top coordinate\n        [arrowCenterX + arrowBaseWidth / 2, arrowTop + arrowHeight], // rightCoordinate\n        [arrowCenterX, arrowTop + 2 * arrowHeight / 3], // middleCoordinate\n        [arrowCenterX - arrowBaseWidth / 2, arrowTop + arrowHeight], // leftCoordinate\n      ];\n      return {\n        format: \"a4\",\n        pageDim: [pageWidth, pageHeight],\n        margin,\n        topMargin,\n        mapFrameSize: [mapWidth, mapHeight],\n        mapFrameSizePxl: [mmToPixel(mapWidth), mapHeightPxl],\n        northArrowCoordsPxl: northArrowCoords.map(pt => pt.map(mmToPixel)),\n        legendBoxPxl: {\n          pos: legendPosPxl,\n          height: legendHeightPxl,\n          columnWidth: 260\n        },\n      };\n    },\n    copyOLMapTo(context) {\n      context.fillStyle = \"white\";\n      context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n      document.querySelectorAll(\".ol-layer canvas\").forEach(mapCanvas => {\n        if (mapCanvas.width > 0) {\n          const opacity = mapCanvas.parentNode.style.opacity;\n          console.log(\"-------\");\n          console.log(opacity);\n          console.log(\"-------\");\n          context.globalAlpha = opacity === \"\" ? 1 : Number(opacity);\n          // get the map's transform parameters from the style's transform matrix\n          const matrix = (mapCanvas.style.transform).match(/^matrix\\((.*)\\)$/)[1].split(\",\").map(Number);\n          // apply the transform to the exporting temp canvas's context\n          context.setTransform(...matrix);\n          context.drawImage(mapCanvas, 0, 0);\n        }\n      });\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    },\n    async addImageProcess(src) {\n      return new Promise((resolve, reject) => {\n        let img = new Image()\n        img.onload = () => resolve(img)\n        img.onerror = reject\n        img.setAttribute('crossorigin', 'anonymous');\n        img.src = src\n      })\n    },\n    async addLegendsTo(context, {legendInfos, pos, columnWidth, height: maxHeight}) {\n      // debugger;\n      const margin = 10;\n      let offsetX = margin;\n      let offsetY = margin;\n      const labelHeight = 22;\n      const [legendBoxWidth, legendBoxHeight] = this.getLegendBoxDimension(margin, labelHeight, columnWidth, legendInfos, maxHeight);\n      // re-adjust pos y according to legend Box Height\n      pos.y += maxHeight - legendBoxHeight;\n      // write legend title\n      context.textBaseline = \"bottom\";\n      context.fillStyle = \"black\";\n      context.font = \"bold 25px Times\";\n      context.fillText(\"Legends\", pos.x + margin, pos.y - margin);\n      // create white canvas on legendbox\n      context.globalAlpha   = 1;\n      context.fillStyle = \"black\";\n      // context.zIndex = 2000000000000;\n      context.fillRect(pos.x, pos.y, legendBoxWidth, legendBoxHeight);\n      // configure text style\n      context.fillStyle =  \"rgba(255, 255, 255, 0.5)\";\n      context.fillStyle = \"black\";\n      context.font = \"18px Times\";\n\n      for (let legend of legendInfos) {\n\n        await this.addImageProcess(legend.legendPath).then(img => {\n          const itemHeight = legend.imgHeight + labelHeight + margin;\n          if (offsetY + itemHeight > maxHeight) {\n            offsetX += margin + columnWidth;\n            offsetY = margin;\n          }\n          const left = pos.x + offsetX;\n          const top = pos.y + offsetY;\n\n          context.fillText(legend.title, left, top + labelHeight);\n          context.drawImage(img, left, top + labelHeight, legend.imgWidth, legend.imgHeight);\n          // update to offsetY\n          offsetY += itemHeight;\n          console.log(img);\n          console.log(\"img\");\n        })\n      }\n\n      console.log(\"after img----\");\n\n      // legendInfos.forEach(async legend => {\n      //\n      //   const itemHeight = legend.imgHeight + labelHeight + margin;\n      //   if (offsetY + itemHeight > maxHeight) {\n      //     offsetX += margin + columnWidth;\n      //     offsetY = margin;\n      //   }\n      //   const left = pos.x + offsetX;\n      //   const top = pos.y + offsetY;\n      //\n      //   var img = document.createElement(\"img\");\n      //   // var img = new Image();\n      //   // img.onload = function () {\n      //   //   context.fillText(legend.title, left, top + labelHeight);\n      //   //   context.drawImage(img, left, top + labelHeight, legend.imgWidth, legend.imgHeight);\n      //   //   // update to offsetY\n      //   //   offsetY += itemHeight;\n      //   //   console.log(img);\n      //   // };\n      //\n      //   img.setAttribute('crossorigin', 'anonymous');\n      //   img.setAttribute(\"src\", legend.legendPath);\n      //   // img.src = legend.legendPath;\n      //\n      //\n      //   context.fillText(legend.title, left, top + labelHeight);\n      //   context.drawImage(img, left, top + labelHeight, legend.imgWidth, legend.imgHeight);\n      //   // update to offsetY\n      //   offsetY += itemHeight;\n      // });\n      context.lineWidth = 1;\n      context.closePath();\n      context.strokeRect(pos.x, pos.y, legendBoxWidth, legendBoxHeight);\n    },\n    getLegendBoxDimension(margin, labelHeight, columnWidth, legendInfos, maxBoxHeight) {\n      let bottomMostLegendItemY = 0;\n      const lastLegendItemPos = legendInfos.reduce((prevSize, legend) => {\n        const itemHeight = legend.imgHeight + labelHeight + margin;\n        if (prevSize.y + itemHeight > maxBoxHeight) {\n          prevSize.x += margin + columnWidth;\n          prevSize.y = margin;\n        }\n        prevSize.y += itemHeight;\n        if (bottomMostLegendItemY < prevSize.y) bottomMostLegendItemY = prevSize.y;\n        return prevSize;\n      }, {x: margin, y: margin});\n      const width = lastLegendItemPos.x + columnWidth + margin;\n      const height = bottomMostLegendItemY;\n      return [width, height];\n    },\n    drawPolygon(context, color, coords) {\n      context.lineWidth = 2;\n      context.fillStyle = color;\n      context.beginPath();\n      context.moveTo(...coords[0]);\n      for (let i = 1; i < coords.length; i++) {\n        context.lineTo(...coords[i]);\n      }\n      context.closePath();\n      context.fill();\n    },\n    drawScaleBar(context, rightBottomPos) {\n      const {width, text} = this.getScaleBarInfo();\n      const height = 30;\n      const margin = 8;\n      const rightOffset = 15;\n      const bottomOffset = 15;\n      const pos = {\n        x: rightBottomPos.x - (width + margin * 2) - rightOffset,\n        y: rightBottomPos.y - (height + margin * 2) - bottomOffset\n      };\n      // draw background\n      context.globalAlpha = 0.75;\n      context.fillStyle = \"grey\";\n      context.fillRect(pos.x, pos.y, width + margin * 2, height + margin * 2)\n      context.globalAlpha = 1;\n      context.lineWidth = 1.5;\n      context.closePath()\n      context.strokeStyle = \"white\";\n      // draw the scale line shape\n      const x = pos.x + margin;\n      const y = pos.y + margin;\n      context.beginPath()\n      context.moveTo(x, y);\n      context.lineTo(x, y + height)\n      context.lineTo(x + width, y + height)\n      context.lineTo(x + width, y);\n      context.stroke()\n      // write length text below the legend box\n      context.textBaseline = \"bottom\";\n      context.textAlign = \"center\"\n      context.fillStyle = \"white\";\n      context.font = \"15px Times\";\n      context.fillText(text, x + width / 2, y + height - margin);\n    },\n    createMapPDF(title, filename, mapCanvas, {margin, topMargin, mapFrameSize, pageDim, format}) {\n      const pdf = new jsPDF(\"landscape\", undefined, format);\n      pdf.setFont(\"Times\").setFontType(\"bold\").setFontSize(15);\n      pdf.text(title, parseInt(pageDim[0] / 2), 9, null, null, \"center\");\n      try {\n        pdf.addImage(mapCanvas.toDataURL(\"image/png\"), \"JPEG\", margin, topMargin, mapFrameSize[0], mapFrameSize[1]);\n        pdf.save(`${filename}.pdf`);\n      } catch (error) {\n        // showErrorToast(\"Error Occurred! Please try it again.\");\n        console.log(error);\n      }\n    },\n    getScaleBarInfo() {\n      const scaleLine = document.querySelector(\".ol-scale-line-inner\");\n\n      return {width: scaleLine.clientWidth, text: scaleLine.innerText};\n    },\n\n    proxifyWMSLayers() {\n      this.TimeSeriesLayerCollection.forEach((layerobj) => {\n        let properties = layerobj.getProperties();\n        if (properties.changeWMSProxy) {\n          let layer = layerobj.getLayer();\n          if (properties.ThreddsDataServerVersion) {\n            layer.AllLayersList.forEach((timeDimensionLayer) => {\n              const source = timeDimensionLayer.getSource();\n              const currUrl = source.getUrls()[0];\n              source.setProperties({'crossOrigin': 'Anonymous'})\n              currUrl.includes(this.PROXY_PREFIX) || source.setUrls([this.PROXY_PREFIX + currUrl]);\n            });\n          }\n        }\n      });\n    },\n\n    deproxifyWMSLayers() {\n      console.log('--------deproxy');\n      this.TimeSeriesLayerCollection.forEach((layerobj) => {\n        let properties = layerobj.getProperties();\n        if (properties.changeWMSProxy) {\n          let layer = layerobj.getLayer();\n          if (properties.ThreddsDataServerVersion) {\n            layer.AllLayersList.forEach((timeDimensionLayer) => {\n              const source = timeDimensionLayer.getSource();\n              source.setUrls([source.getUrls()[0].replace(this.PROXY_PREFIX, \"\")]);\n            });\n          }\n        }\n      });\n    },\n  },\n  computed: {\n    ...\n        mapState([\"PrintMapComponentData\", \"TimeSeriesLayerCollection\", \"mapObject\"]),\n  },\n  mounted() {\n    console.log(\"---------------------------------mounted----------------------------------\");\n  },\n  beforeCreate() {\n    eventHub.$on(\"OpenDialogOfPrintAndProxyfy\", () => {\n      let target = document.querySelector('#map-control-printing');\n      this.mapObject.setTarget(target);\n      console.log('this looks ok');\n      this.mapObject.updateSize();\n      this.CheckSelectAll = false;\n      this.legendInfos = [];\n      this.LegendUIList = [];\n      this.proxifyWMSLayers();\n      this.TimeSeriesLayerCollection.filter((obj) => {\n        let Properties = obj.getProperties();\n        if (Properties.visible === true) {\n          let prop = obj.getProperties();\n          let objj = {\n            id: prop.id,\n            visible: false,\n            title: prop.title,\n            legendPath: prop.legendPath\n          }\n          this.legendInfos.push(objj);\n        }\n        return true;\n      });\n\n    });\n  },\n  deactivated() {\n    console.log(\"---------------------------------deactivated----------------------------------\");\n  }\n}\n</script>\n\n\n<style scoped>\n\n#map-control-printing {\n  height: 700px;\n  width: 100%;\n  border: 1px solid grey;\n  border-radius: 4px;\n}\n\n.muted-text {\n  font-size: 80%;\n  font-weight: 400;\n  text-align: center;\n}\n\n.printing-control {\n  padding-right: 20px;\n}\n\n</style>","<template>\n  <div class=\"layer-legend-item\">\n    <el-checkbox v-model=\"itemVisible.visible\" :label=\"item.title\"></el-checkbox>\n    <br>\n    <img class=\"legend-image\"\n         :src=\"item.legendPath\">\n  </div>\n\n</template>\n<script>\n\n\nexport default {\n  name: \"mapLagend\",\n  data() {\n    return {\n      checked1: true,\n    };\n  },\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n  },\n  methods: {\n    calculateHeightWidth() {\n      //    height calculation\n      const img = new Image();\n      img.src = this.item.legendPath;\n      let that = this.item\n      img.onload = function () {\n        that.imgWidth = this.width;\n        that.imgHeight = this.height;\n      }\n    }\n  },\n  computed: {\n    itemVisible() {\n      return this.item;\n    }\n\n  },\n  mounted() {\n    this.calculateHeightWidth();\n  },\n  beforeCreate() {\n\n  },\n\n}\n</script>\n\n\n<style scoped>\n.layer-legend-item {\n  border: 0.5px solid rgb(173, 173, 173);\n  box-shadow: 0 0 2px rgba(34, 34, 34, 0.397);\n  border-radius: 2px;\n  margin: 2px 8px;\n  padding: 2px 6px;\n  min-width: 240px;\n}\n\n</style>","import { render } from \"./mapLagend.vue?vue&type=template&id=625a8cfc&scoped=true\"\nimport script from \"./mapLagend.vue?vue&type=script&lang=js\"\nexport * from \"./mapLagend.vue?vue&type=script&lang=js\"\n\nimport \"./mapLagend.vue?vue&type=style&index=0&id=625a8cfc&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-625a8cfc\"]])\n\nexport default __exports__","import { render } from \"./PrintMap.vue?vue&type=template&id=56944bf5&scoped=true\"\nimport script from \"./PrintMap.vue?vue&type=script&lang=js\"\nexport * from \"./PrintMap.vue?vue&type=script&lang=js\"\n\nimport \"./PrintMap.vue?vue&type=style&index=0&id=56944bf5&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56944bf5\"]])\n\nexport default __exports__","import { render } from \"./mapComponentRecent.vue?vue&type=template&id=d0914df6\"\nimport script from \"./mapComponentRecent.vue?vue&type=script&lang=js\"\nexport * from \"./mapComponentRecent.vue?vue&type=script&lang=js\"\n\nimport \"./mapComponentRecent.vue?vue&type=style&index=0&id=d0914df6&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TabBodyRecent.vue?vue&type=template&id=0b625034&scoped=true\"\nimport script from \"./TabBodyRecent.vue?vue&type=script&lang=js\"\nexport * from \"./TabBodyRecent.vue?vue&type=script&lang=js\"\n\nimport \"./TabBodyRecent.vue?vue&type=style&index=0&id=0b625034&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0b625034\"]])\n\nexport default __exports__","<template>\n  <el-row class=\"airquality\">\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapControlsArchive></mapControlsArchive>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-10 padding-top-5 padding-right-5\">\n            <chartComponentArchive  :IndexValue=\"1\"></chartComponentArchive>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"12\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapComponentArchive></mapComponentArchive>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentArchive  :IndexValue=\"2\"></chartComponentArchive>\n        </el-col>\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentArchive  :IndexValue=\"3\"></chartComponentArchive>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-10\">\n                    <LayerSwitcherControl></LayerSwitcherControl>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-10\">\n          <chartComponentArchive  :IndexValue=\"4\"></chartComponentArchive>\n        </el-col>\n      </el-row>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport LayerSwitcherControl from './LayerSwitcherControl';\n\n// import about from \"./about\";\nimport chartComponentArchive from \"./chartComponentArchive\";\nimport mapControlsArchive from \"./mapControlsArchive\";\nimport mapComponentArchive from \"./mapComponentArchive\";\n\n// import {mapActions} from \"vuex\";\n\nexport default {\n  name: \"emissionTabBody\",\n  components: {\n    LayerSwitcherControl,\n    chartComponentArchive,\n    mapControlsArchive,\n    mapComponentArchive,\n  },\n  methods: {\n    // ...mapActions([\"getCascaderOptions\"]),\n  },\n  async mounted() {\n    // let data = await this.getCascaderOptions();\n    // console.log(data);\n  }\n}\n</script>\n\n<style scoped>\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n.full-height {\n  height: 100%;\n}\n.second-row div{\n  /*height: calc(100% - 12.5px);*/\n}\n</style>\n","<template>\n  <div class=\"card-box full-height full-width about-div\" ref=\"outerViz\">\n    <div v-if=\"visualizationIn =='chart'\" class=\"chart-div\" :id=\"'chart'+IndexValue\" ref=\"ChartDiv\">\n      <div class=\"flex-center-vertically\">\n        <!--        Please select a layer and draw a feature to view the chart-->\n        <el-skeleton :rows=\"5\" animated/>\n      </div>\n    </div>\n\n    <div v-if=\"visualizationIn =='2Dimage'\" class=\"position-relative  full-width full-height\" ref=\"Image2D\">\n      <div class=\"download-map-Image\" @click=\"downloadImage()\">\n        <i class=\"fas fa-download\"></i>\n      </div>\n      <div class=\"vertically-center\">\n        <img class=\"generated-image\" :width=\"imageInfo.width\" :src=\"imageInfo.url\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport eventHub from \"../utils/utils\"\n\nimport Highcharts from 'highcharts';\n// Alternatively, this is how to load Highstock. Highmaps is similar.\n// import Highcharts from 'highcharts/highstock';\n\n// Load the exporting module.\nimport Exporting from 'highcharts/modules/exporting';\nimport ExportData from 'highcharts/modules/export-data';\nimport NOdata from 'highcharts/modules/no-data-to-display'\nimport MoreHighcharts from 'highcharts/highcharts-more';\n\n// Initialize exporting module.\nExporting(Highcharts);\nNOdata(Highcharts);\nMoreHighcharts(Highcharts);\nExportData(Highcharts);\n\n// window.Highcharts = Highcharts;\nimport {AirPollutionWatchApp} from \"../utils/dataArchive\";\nimport {mapActions, mapState, mapGetters} from 'vuex';\n\n\nexport default {\n  name: \"chartComponent\",\n  props: {\n    IndexValue: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      visualizationIn: 'chart',\n      imageInfo: {\n        url: '',\n        downloadFileName: '',\n        width: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"PostGetStationData\", \"PostGet2DImage\", \"TimeSeriesRasterQuery\"]),\n    async renderVisualization() {\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n\n          let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"parameter_by_pollutant_value_stationData_val\" + this.IndexValue]);\n          } else {\n            console.log(\"\");\n            // let Extent = [];\n            // this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].featureExtent.forEach(function (ext1) {\n            //   Extent.push(parseFloat(ext1.toFixed(6)))\n            // });\n            // console.log(Extent);\n            // let layer = await this.getBindedLayer(kk.layerId);\n            // layer.setVisibleDivBind(true);\n            // // let NewMapObj = myApp.CreateMapObject(WorkingIndex);\n            // let layerPropertiesObject = await this.getLayer(kk.layerId).getCurrentLayer().getProperties();\n            // let layerSourceParam = layerPropertiesObject.source.getParams();\n            // // let layerUrl = layerPropertiesObject.source.getUrls()[0].split('wms')[1];\n            // let plotProp = layerPropertiesObject.plotInfo();\n            // plotProp.wmsList = layerPropertiesObject.wmsList;\n            // plotProp.LAYER = layerSourceParam.LAYERS;\n            // plotProp.TIME = layerSourceParam.TIME;\n            // plotProp.COLORSCALERANGE = layerSourceParam.COLORSCALERANGE;\n            // plotProp.BBOX = Extent;\n            // let date = new Date(layerSourceParam.TIME);\n            // let dateTimeFormat = new Intl.DateTimeFormat('en', {year: 'numeric', month: 'short', day: '2-digit'});\n            // let [{value: month}, , {value: day}, , {value: year}] = dateTimeFormat.formatToParts(date)\n            // let completeDateLabel = `${day} ${month} ${year}`;\n            // plotProp.labelName = completeDateLabel + layerPropertiesObject.plotInfo().LabelTitleTime;\n            // this.visualizationIn = '2Dimage';\n            // let w = this.$refs.outerViz.clientWidth;\n            // let h = this.$refs.outerViz.clientHeight;\n            // let width = w / 96;\n            // let height = h / 96;\n            // plotProp.width = width.toFixed(3);\n            // plotProp.height = height.toFixed(3);\n            // plotProp.rid = 0;\n            // let ParseJson = await this.PostGet2DImage(plotProp);\n            // this.imageInfo.url = ParseJson.image;\n            // this.imageInfo.downloadFileName = plotProp.title + '.png';\n            // this.imageInfo.width = w;\n          }\n        } else {\n          //by location\n          let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][2]);\n          }\n        }\n      } else if (this.mapControlVariable.data_period == \"Archive\") {\n\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n          let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"parameter_by_pollutant_value_stationData_val\" + this.IndexValue]);\n          } else {\n            this.TimeSeriesPlot(kk, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].wktValue, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].geometryType,this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].default_level_value);\n          }\n        } else {\n          //by location\n          let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n          if (kk.stationData) {\n            this.ObservationDatavisualization(kk, this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][2]);\n          } else {\n            if (this.mapControlVariable.location_by_wktValue) {\n              this.TimeSeriesPlot(kk, this.mapControlVariable.location_by_wktValue, this.mapControlVariable.location_by_geometryType,this.mapControlVariable.location_by_default_level_value);\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select a location on map for time series visualization of ' + kk.label,\n                type: 'warning'\n              });\n            }\n          }\n        }\n      } else {\n        if (this.mapControlVariable.select_by == \"Parameter\") {\n          let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          this.TimeSeriesPlot(kk, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].wktValue, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].geometryType,this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].default_level_value);\n        } else {\n          //by location\n          let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n          this.TimeSeriesPlot(kk, this.mapControlVariable.location_by_wktValue, this.mapControlVariable.location_by_geometryType,this.mapControlVariable.location_by_default_level_value);\n        }\n      }\n\n      // else if (this.mapControlVariable.data_period == \"Archive\") {\n      //\n      // } else if (this.mapControlVariable.data_period == \"Forecast\") {\n      //\n      // }\n\n    },\n    getCascaderInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    async ObservationDatavisualization(kk, stationId) {\n      let layer = this.getBindedLayer(kk.layerId);\n      layer.setVisibleDivBind(true);\n      let param = {\n        stId: stationId,\n        ModelClass: kk.ModelClass,\n        ModelClassDataList: kk.ModelClassDataList,\n        typeName: kk.typeName,\n        StartDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate),\n        EndDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate)\n      };\n      let parsedData = await this.PostGetStationData(param);\n      this.visualizationIn = 'chart'\n      var stationObject = kk.childrenData.filter((stdata) => {\n        return stdata.value == stationId\n      })[0]\n\n      let stationName = stationObject.folder_name;\n\n      let title;\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate));\n      } else {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate), this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate));\n      }\n      // debugger;\n      let XaxisLabel = kk.chart.XaxisLabel();\n      let plotType = kk.chart.plotType;\n      let highchartsObj = null;\n      if (plotType === 'point') {\n        highchartsObj = this.AirPollutionWatchApp.datetimePointChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      } else {\n        highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      }\n      Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n\n    },\n    downloadImage() {\n      this.AirPollutionWatchApp.forceDownload(this.imageInfo.url, this.imageInfo.downloadFileName);\n    },\n    async TimeSeriesPlot(kk, WKT, WKTType,default_level_value) {\n\n      let layerBind = this.getBindedLayer(kk.layerId);\n      let layer = layerBind.getLayer();\n\n      let SourceParam = null;\n      let SourceURL = null;\n      let layerProperties = null;\n\n      if (layer.getProperties().ThreddsDataServerVersion) {\n        layerProperties = layer.getProperties();\n        SourceParam = layer.getCurrentLayer().getProperties().source.getParams();\n        SourceURL = [];\n        layerProperties.source.url.forEach(function (val) {\n          SourceURL.push(val.split('/wms/')[1]);\n        });\n\n      } else {\n        layerProperties = layer.getProperties();\n        SourceParam = layer.source.getParams();\n        SourceURL = layer.source.getUrls()[0].split('wms')[1];\n      }\n      let param = {\n        DATADIR: SourceURL,\n        LAYER: SourceParam.LAYERS,\n        wkt: WKT,\n        type: WKTType\n      };\n\n      let parsedData = await this.TimeSeriesRasterQuery(param);\n      if (parsedData.status === 200) {\n        let title =  layerProperties.chartDetail.Product + \" (\"+layerProperties.chartDetail.Source+\")\";\n        let subTitle;\n        if (default_level_value) {\n          subTitle = default_level_value;\n        } else {\n          subTitle = parsedData.geom;\n        }\n        let YaxisLabel = layerProperties.chartDetail.unit;\n        let SeriesName = layerProperties.chartDetail.SeriesName;\n        let highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, subTitle, parsedData.SeriesData, SeriesName, YaxisLabel, parsedData.XaxisLabel, this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1])\n        Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n      }\n    }\n  },\n  computed: {\n    ...mapState([\"mapControlVariable\", \"TimeSeriesLayerCollection\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n  },\n  created() {\n    eventHub.$on(\"getVisualization\", () => {\n      this.renderVisualization();\n    });\n  },\n  async mounted() {\n\n    // Generate the chart\n//     Highcharts.chart('chart', {\n//       credits: {\n//         enabled: false\n//       },\n//       title: {\n//         align: \"center\",\n//         text: \"Select Indices to Display Chart\",\n//       },\n//       series: [{\n//         data: [],\n//       }],\n//       chart: {\n//         backgroundColor: 'rgba(255,255,255,0)',\n//         style: {\n//           \"fontFamily\": \"Lato,\\\"Lucida Grande\\\", \\\"Lucida Sans Unicode\\\", Verdana, Arial, Helvetica, sans-serif\",\n//           \"fontSize\": \"12px\"\n//         },\n//\n//         animation: true,\n//         zoomType: 'x',\n// //        borderColor: '#000000',\n// //        borderWidth: 2,\n//         type: 'area',\n//       },\n//       noData: {\n//         style: {\n//           fontWeight: 'bold',\n//           fontSize: '15px',\n//           color: '#303030'\n//         }\n//       },\n//     });\n    eventHub.$on('UpdateChart', (HcObject) => {\n      this.updateChart(HcObject);\n    });\n  },\n};\n</script>\n\n<style scoped>\n\n.chart-option .el-row {\n  margin-left: 5px !important;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-right: 8px !important;\n}\n\n.chart-option {\n  border-bottom: solid 1px #e2e2e2;\n}\n\n.chart-div {\n  height: 100%;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n.center-content-parent {\n  position: relative;\n}\n\n.center-content-child {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  margin: -70px 0 0 -170px;\n}\n\n.flex-center-vertically {\n  padding: 20px;\n  justify-content: center;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  height: 100%;\n}\n\n.plotSelection {\n  display: block;\n}\n\n.sync-chart .el-button {\n  width: 100%;\n}\n\n.position-relative {\n  position: relative !important;\n}\n\n.download-map-Image {\n  z-index: 1000;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  color: #afacac;\n  cursor: pointer;\n}\n\n.vertically-center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</style>\n","import Style from \"ol/style/Style\";\nimport RegularShape from \"ol/style/RegularShape\";\nimport Fill from \"ol/style/Fill\";\nimport Stroke from \"ol/style/Stroke\";\nimport Text from \"ol/style/Text\";\nimport {DefaultMaskWMS, DefaultPlotInfo, TethysAPIAppName} from \"../config\";\nimport {Action} from \"../store/actionType\";\nimport {getURLParameters} from './helpers';\n\nvar myApp = {};\n// First need to initilize\nvar filterCoodrdinate = {};\n\n\nmyApp.endDate = new Date();\nmyApp.endDate.setDate(myApp.endDate.getDate() - 1);\n\nmyApp.startDate = new Date();\nmyApp.startDate.setDate(myApp.endDate.getDate() - 7);\n\n\nlet archiveDate = getURLParameters()['date'];\nif (archiveDate) {\n    if (archiveDate.length == 8) {\n        let checkInt = parseInt(archiveDate);\n        if (checkInt) {\n            // Number with valid\n            let YYYY = parseInt(archiveDate.slice(0, 4));\n            let MM_index = parseInt(archiveDate.slice(4, 6)) - 1;\n            let DD = parseInt(archiveDate.slice(6, 8));\n            let dObject = new Date(YYYY, MM_index, DD);\n            myApp.endDate = dObject;\n            let bd = getURLParameters()['bd'];\n            if (bd) {\n                //    do something\n                let checkInt = parseInt(bd);\n                if (checkInt) {\n                    if (checkInt <= 20) {\n                        myApp.startDate.setDate(myApp.endDate.getDate() - checkInt);\n                    } else {\n                        myApp.startDate.setDate(myApp.endDate.getDate() - 7);\n                    }\n\n                } else {\n                    myApp.startDate.setDate(myApp.endDate.getDate() - 7);\n\n                }\n\n            } else {\n                myApp.startDate.setDate(myApp.endDate.getDate() - 7);\n            }\n\n        }\n    }\n}\n\n\n// myApp.startDateArchive = new Date();\n// myApp.startDateArchive.setDate(myApp.startDateArchive.getDate() - 1);\n// myApp.endDateArchive = new Date();\n\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\n\n\nmyApp.APICollection = {\n    layerData: {\n        Aeronet: '/apps/' + TethysAPIAppName + '/aeronetaodpm/',\n        USEmbassyAOD: '/apps/' + TethysAPIAppName + '/usembassypm/',\n        getGeoJSONofStations: '/apps/' + TethysAPIAppName + '/getGeoJSONofStations/',\n        getGeoJsonForOneSatation: '/apps/' + TethysAPIAppName + '/getGeoJsonForOneSatation/',\n        getAllStationsID: '/apps/' + TethysAPIAppName + '/getAllStationsID/',\n    },\n    api: {\n        commonAPI: '/apps/' + TethysAPIAppName + '/getData/',\n        RegionGeojson: '/apps/' + TethysAPIAppName + '/geojsonregion/',\n        AOIPolygon: '/apps/' + TethysAPIAppName + '/aoipolygon/',\n        GetMapImage: '/apps/' + TethysAPIAppName + '/getmapimage/',\n        GetImage: '/apps/' + TethysAPIAppName + '/downloadImage/',\n        SlicedFromCatalog: '/apps/' + TethysAPIAppName + '/slicedfromcatalog/'\n    }\n};\n\n\nmyApp.constants = {\n    archive: {\n        layerId: {\n            TerraModisTrueColor: 'Archive__TerraModisTrueColor',\n            GEOS_PM2p5: 'Archive__GEOS_PM2p5',\n            TerraModisAOD: 'Archive__TerraModisAOD',\n            PM_AeronetAOD: 'Archive__aeronet',\n            PM_usembassy: 'Archive__usembassy',\n            O3_usembassy: 'Archive__usembassy_O3',\n            O3_TROPOMI: 'Archive__TROPOMI_O3',\n            O3_GEOS: 'Archive__GEOS_O3',\n            SO2_TROPOMI: 'Archive__TROPOMI_SO2',\n            SO2_GEOS: 'Archive__GEOS_SO2',\n            NO2_TROPOMI: 'Archive__TROPOMI_NO2',\n            NO2_GEOS: 'Archive__GEOS_NO2',\n            CO_TROPOMI: 'Archive__TROPOMI_CO',\n            CO_TROPOMI_SERVIR: 'Archive__TROPOMI_CO_SERVIR',\n            CO_GEOS: 'Archive__GEOS_CO',\n            NO2_AST: 'Archive__AST_NO2',\n            SO2_AST: 'Archive__AST_SO2',\n            Nep_Gov_PM1: 'Nep_Gov_PM1',\n            Nep_Gov_PM10: 'Nep_Gov_PM10',\n            Nep_Gov_PM2p5: 'Nep_Gov_PM2p5',\n            Nep_Gov_tsp: 'Nep_Gov_tsp',\n        }\n    },\n};\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\nmyApp.AllBindedLayersList = [];\nmyApp.OnlyOnce = true;\n\nmyApp.getLayer = function (id) {\n    // console.log(id)\n    var layer;\n    for (let i = 0; i < myApp.AllBindedLayersList.length; i++) {\n        // console.log(myApp.AllBindedLayersList[i].getProperties().id);\n        if (id == myApp.AllBindedLayersList[i].getProperties().id) { ///popDensityLayer.getProperties().id\n            layer = myApp.AllBindedLayersList[i].getLayer();\n            break;\n        }\n    }\n    return layer;\n};\n\nmyApp.AeronetAODStyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let AeronetStyle = null;\n    AeronetStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#D5212E'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 3,\n            radius: 10,\n            rotation: 0,\n            angle: 0\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return AeronetStyle;\n};\nmyApp.USEmbassyPM25StyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let USEmbassyAODStyle = null;\n    USEmbassyAODStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#CBCB59'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 4,\n            radius: 10,\n            angle: Math.PI / 4\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return USEmbassyAODStyle;\n};\nmyApp.USEmbassyO3StyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let USEmbassyAODStyle = null;\n    USEmbassyAODStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#CBCB59'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 4,\n            radius: 10,\n            angle: Math.PI / 4\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return USEmbassyAODStyle;\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\nmyApp.TrueColorImage = {\n    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/TerraMODIS-TrueColor1km/catalog.xml',\n    useSLD: true,\n    isTimeDimensionLayer: true,\n    SLD: `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"\n                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"\n                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:resc=\"http://www.resc.reading.ac.uk\">\n    <NamedLayer>\n     <se:Name>red</se:Name>\n        <UserStyle>\n            <se:Name>Thesholded colour scheme</se:Name>\n            <se:CoverageStyle>\n                <se:Rule>\n                    <resc:RasterRGBSymbolizer>\n                        <se:Opacity>1.0</se:Opacity>\n                        <se:ColorMap>\n                            <resc:RedBand>\n                                <resc:BandName>red</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:RedBand>\n                            <resc:GreenBand>\n                                <resc:BandName>green</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:GreenBand>\n                            <resc:BlueBand>\n                                <resc:BandName>blue</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>1</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                    <resc:Spacing>linear</resc:Spacing>\n                                </resc:Range>\n                            </resc:BlueBand>\n                        </se:ColorMap>\n                    </resc:RasterRGBSymbolizer>\n                </se:Rule>\n            </se:CoverageStyle>\n        </UserStyle>\n    </NamedLayer>\n</StyledLayerDescriptor>\n`,\n    getStartDate: function () {\n        return myApp.formatDate(myApp.startDate)\n    },\n    getEndDate: function () {\n        return myApp.formatDate(myApp.endDate)\n    },\n    VisibleDivBind: true,\n    threddLayerProp: {\n        id: myApp.constants.archive.layerId.TerraModisTrueColor,\n        title: 'TerraModis-TrueColor',\n        visible: false,\n        opacity: 0.5,\n        legendPath: Action.Base + '/' + Action.trueColorLegendImage,\n        ThreddsDataServerVersion: 5,\n        serverType: 'TDS',\n        timeSeries: false,\n        alignTimeSlider: 'right',\n        timeSliderSize: 'small',\n        showlegend: false,\n        showControlPanel: true,\n        zIndex: 10,\n        filterCoodrdinate: filterCoodrdinate,\n        RGBComposite: true,\n        source: {\n            url: [],\n            params: {\n                'LAYERS': 'red',\n                'transparent': true\n            }\n        },\n        mask: DefaultMaskWMS,\n        CropOrMask: 'crop',\n        changeWMSProxy: true,\n    }\n};\n\nmyApp.DefaultSations = {\n    aeronetAOD: [2, 5, 3, 6],\n    pm2p5Embassy: [6, 7, 6, 7],\n    o3Embassy: [6, 7, 6, 7],\n    NepalStation: [57, 11, 15, 71]\n};\n\nmyApp.cascaderObj = [\n    {\n        label: 'PM',\n        value: 1,\n        children: [\n            {\n                label: 'Surface Observation-AOD (AERONET)',\n                value: 11,\n                layerId: myApp.constants.archive.layerId.PM_AeronetAOD,\n                stationData: true,\n                ModelClass: 'AeronetAod',\n                ModelClassDataList: 'AeronetDataList',\n                typeName: 'aod',\n                defaultStation: myApp.DefaultSations.aeronetAOD,\n                chart: {\n                    title: function (stationName, sd, ed) {\n                        return `${stationName} (${sd} - ${ed})`;\n                    },\n                    subTitle: 'AERONET level 1.5 data measured at 500nm',\n                    SeriesName: 'SeriesName',\n                    YaxisLabel: 'AOD',\n                    XaxisLabel: function () {\n                        return 'Time (UTC)';\n                    },\n                    plotType: 'point'\n                },\n                layerProperties: {\n                    initilize: false,\n                    id: myApp.constants.archive.layerId.PM_AeronetAOD,\n                    title: 'Surface Observation-AOD (AERONET)',\n                    visible: false,\n                    opacity: 1,\n                    zIndex: 5,\n                    layer: 'AirQuality:aeronet_aod',\n                },\n            },\n            {\n                label: 'Ground Observation-PM2.5 (AirNow)',\n                layerId: myApp.constants.archive.layerId.PM_usembassy,\n                value: 12,\n                stationData: true,\n                ModelClass: 'UsEmbassyPm',\n                ModelClassDataList: 'UsEmbassyDataList',\n                typeName: 'pm',\n                defaultStation: myApp.DefaultSations.pm2p5Embassy,\n                chart: {\n                    title: function (stationName, sd, ed) {\n                        return `${stationName} (${sd} - ${ed})`;\n                    },\n                    subTitle: 'source: AirNow',\n                    SeriesName: 'PM2.5',\n                    YaxisLabel: 'PM<sub>2.5</sub>(μg/m<sup>3</sup>)',\n                    XaxisLabel: function () {\n                        return 'Time (UTC)';\n                    }\n                },\n                layerProperties: {\n                    initilize: false,\n                    id: myApp.constants.archive.layerId.PM_usembassy,\n                    title: 'Ground Observation-PM2.5 (AirNow)',\n                    visible: false,\n                    opacity: 1,\n                    zIndex: 6,\n                    layer: 'AirQuality:us_embassy_pm2p5',\n                },\n            },\n            {\n                label: 'Model-PM2.5 (GEOS)',\n                layerId: myApp.constants.archive.layerId.GEOS_PM2p5,\n                value: 13,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/PM/GEOS-PM2p5/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.GEOS_PM2p5,\n                        title: 'GEOS PM2.5',\n                        visible: false,\n                        opacity: 0.5,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'PM2p5',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,100\",\n                                'transparent': true\n                            }\n                        },\n                        unit: 'µg/m<sup>3<sup>',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 11,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'GEOS $PM_{2.5}$(µg/$m^{3}$)',\n                                TimeZone: ' UTC'\n                            })\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: 'µg/m<sup>3</sup>', SeriesName: \"value\",\n                            Product: 'PM<sub>2.5</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Satellite-AOD (Terra-MODIS)',\n                layerId: myApp.constants.archive.layerId.TerraModisAOD,\n                value: 14,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/PM/TerraModis-AOD/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.TerraModisAOD,\n                        title: 'TerraModis-AOD',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'aod_550',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0.01,1',\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 12,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'TerraModis-AOD',\n                                TimeZone: ' UTC'\n                            })\n                        }, chartDetail: {\n                            title: 'TerraModis-AOD', unit: \"AOD\", SeriesName: \"value\",\n                            Product: 'AOD',\n                            Source: 'Terra MODIS'\n                        },\n                    }\n                }\n            },\n\n        ]\n    },\n    {\n        label: 'O3',\n        value: 2,\n        children: [\n            // {\n            //     label: 'Satellite-O3 (TROPOMI)',\n            //     layerId: myApp.constants.archive.layerId.O3_TROPOMI,\n            //     value: 21,\n            // },\n            {\n                label: 'Model-O3 (GEOS)',\n                layerId: myApp.constants.archive.layerId.O3_GEOS,\n                value: 22,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/O3/GEOS-O3/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.O3_GEOS,\n                        title: 'GEOS O3',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'O3',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,80',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 14,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $O_{3}$(ppb)', TimeZone: ' UTC'})\n                        }, chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'O<sub>3</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            },\n            // {\n            //     label: 'Surface Observation-O3',\n            //     layerId: myApp.constants.archive.layerId.O3_usembassy,\n            //     value: 23,\n            //     stationData: true,\n            //     ModelClass: 'UsEmbassyPm',\n            //     ModelClassDataList: 'UsEmbassyDataList',\n            //     typeName: 'O3',\n            //     defaultStation: myApp.DefaultSations.o3Embassy,\n            //     chart: {\n            //         title: function (stationName, sd, ed) {\n            //             return `${stationName} (${sd} - ${ed})`\n            //         },\n            //         subTitle: 'source: AirNow',\n            //         SeriesName: 'O3',\n            //         YaxisLabel: 'O<sub>3</sub>(ppb)',\n            //         XaxisLabel: function () {\n            //             return 'Time (UTC)'\n            //         }\n            //     },\n            //     layerProperties: {\n            //         initilize: false,\n            //         id: myApp.constants.archive.layerId.O3_usembassy,\n            //         title: 'Surface Observation-O3',\n            //         visible: true,\n            //         opacity: 1,\n            //         zIndex: 7,\n            //         layer: 'AirQuality:us_embassy_o3',\n            //     },\n            // },\n        ]\n    },\n    {\n        label: 'SO2',\n        value: 3,\n        children: [\n            {\n                label: 'Satellite-SO2 (TROPOMI-GEE)',\n                layerId: myApp.constants.archive.layerId.SO2_TROPOMI,\n                value: 31,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/TROPOMI-SO2/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.SO2_TROPOMI,\n                        title: 'TROPOMI SO2 (TROPOMI-GEE)',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'SO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,1',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'molecules / sq.cm',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 15,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)',\n                                TimeZone: ' UTC'\n                            })\n                        }, chartDetail: {\n                            title: 'TROPOMI',\n                            unit: \"10<sup>17</sup> molecules/cm<sup>2</sup>\",\n                            SeriesName: \"value\",\n                            Product: 'SO<sub>2</sub>',\n                            Source: 'TROPOMI-GEE'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Model-SO2 (GEOS)',\n                layerId: myApp.constants.archive.layerId.SO2_GEOS,\n                value: 32,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/GEOS-SO2/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.SO2_GEOS,\n                        title: 'GEOS SO2',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'SO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,10',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 16,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $SO_{2}$(ppb)', TimeZone: ' UTC'})\n                        }, chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'SO<sub>2</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Satellite-SO2 (TROPOMI-SERVIR AST)',\n                layerId: myApp.constants.archive.layerId.SO2_AST,\n                value: 33,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/AST-HKH-SO2/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.SO2_AST,\n                        title: 'TROPOMI SO2 (SERVIR AST)',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'SO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,10',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 16,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $SO_{2}$(ppb)', TimeZone: ' UTC'})\n                        },\n                        chartDetail: {\n                            title: 'AST TROPOMI',\n                            unit: \"molecules/cm<sup>2</sup>\",\n                            SeriesName: \"value\",\n                            Product: 'SO<sub>2</sub>',\n                            Source: 'TROPOMI-SERVIR AST'\n                        },\n                    }\n                }\n            },\n        ]\n    },\n    {\n        label: 'NO2',\n        value: 4,\n        children: [\n            {\n                label: 'Satellite-NO2 (TROPOMI-GEE)',\n                layerId: myApp.constants.archive.layerId.NO2_TROPOMI,\n                value: 41,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/TROPOMI-NO2/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate)\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate)\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.NO2_TROPOMI,\n                        title: 'TROPOMI NO2 (GEE)',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'NO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,10',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'molecules / sq.cm',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 17,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)',\n                                TimeZone: ' UTC'\n                            })\n                        },\n                        chartDetail: {\n                            title: 'TROPOMI',\n                            unit: \"10<sup>15</sup> molecules/cm<sup>2</sup>\",\n                            SeriesName: \"value\",\n                            Product: 'NO<sub>2</sub>',\n                            Source: 'TROPOMI-GEE'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Model-NO2 (GEOS)',\n                layerId: myApp.constants.archive.layerId.NO2_GEOS,\n                value: 42,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/GEOS-NO2/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate);\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate);\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.NO2_GEOS,\n                        title: 'GEOS NO2 (GEE)',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'NO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,10',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 18,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $NO_{2}$(ppb)', TimeZone: ' UTC'})\n                        }, chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'NO<sub>2</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            }, {\n                label: 'Satellite-NO2 (TROPOMI-SERVIR AST)',\n                layerId: myApp.constants.archive.layerId.NO2_AST,\n                value: 43,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/AST-HKH-NO2/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate);\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate);\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.NO2_AST,\n                        title: 'TROPOMI NO2 (SERVIR AST)',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'NO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,10',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 18,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $NO_{2}$(ppb)', TimeZone: ' UTC'})\n                        },\n                        chartDetail: {\n                            title: 'AST TROPOMI ',\n                            unit: \"molecules/cm <sup>2</sup>\",\n                            SeriesName: \"value\",\n                            Product: 'NO<sub>2</sub>',\n                            Source: 'TROPOMI-SERVIR AST'\n                        },\n                    }\n                }\n            }\n        ],\n    },\n    {\n        label: 'CO',\n        value: 5,\n        children: [\n            {\n                label: 'Satellite-CO (TROPOMI-GEE)',\n                layerId: myApp.constants.archive.layerId.CO_TROPOMI,\n                value: 51,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/TROPOMI-CO/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate);\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate);\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.CO_TROPOMI,\n                        title: 'TROPOMI CO (GEE)',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'CO',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '1,4',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'molecules / sq.cm',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 19,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'TROPOMI CO($10^{18}$ molecules/$cm^{2}$)',\n                                TimeZone: ' UTC'\n                            })\n                        }, chartDetail: {\n                            title: 'TROPOMI-GEE',\n                            unit: \"10<sup>18</sup> molecules/cm<sup>2</sup>\",\n                            SeriesName: \"value\",\n                            Product: 'CO',\n                            Source: 'TROPOMI-GEE'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Model-CO (GEOS)',\n                layerId: myApp.constants.archive.layerId.CO_GEOS,\n                value: 52,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/GEOS-CO/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate);\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate);\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.CO_GEOS,\n                        title: 'GEOS CO',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'CO',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '0,500',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'ppb',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 20,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS CO(ppb)'})\n                        }, chartDetail: {\n                            title: 'GEOS',\n                            unit: \"ppb\",\n                            SeriesName: \"value\",\n                            Product: 'CO',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Satellite-CO (TROPOMI-SERVIR AST)',\n                layerId: myApp.constants.archive.layerId.CO_TROPOMI_SERVIR,\n                value: 53,\n                stationData: false,\n                layerProperties: {\n                    initilize: false,\n                    catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/AST-HKH-CO/catalog.xml',\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    getStartDate: function () {\n                        return myApp.formatDate(myApp.startDate);\n                    },\n                    getEndDate: function () {\n                        return myApp.formatDate(myApp.endDate);\n                    },\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.archive.layerId.CO_TROPOMI_SERVIR,\n                        title: 'TROPOMI CO (SERVIR AST)',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'vertical_column',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': '1,4',\n                                'transparent': true\n                            }\n                        },\n                        unit: 'molecules / sq.cm',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 19,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'TROPOMI CO($10^{18}$ molecules/$cm^{2}$)',\n                                TimeZone: ' UTC'\n                            })\n                        }, chartDetail: {\n                            title: 'TROPOMI-SERVIR AST',\n                            unit: \"10<sup>18</sup> molecules/cm<sup>2</sup>\",\n                            SeriesName: \"value\",\n                            Product: 'CO',\n                            Source: 'TROPOMI-SERVIR AST'\n                        },\n                    }\n                }\n            },\n        ]\n    }];\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\n\nmyApp.makeRequest = function (method, url) {\n    return new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(method, url);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                resolve(xhr.response);\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n};\n\n\nmyApp.getForecastWMSList = async function (url) {\n    let result = await myApp.makeRequest(\"GET\", url);\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(result, \"text/xml\");\n    let wmsList = [];\n    let interestedDate = myApp.formatDate(myApp.forecastDate).replace(/-/g, '');\n    let DimensionTag = xmlDoc.getElementsByTagName(\"catalogRef\");\n    let DateHavingCatalog = null;\n    for (let kk of DimensionTag) {\n        if (interestedDate == kk.getAttribute('xlink:title')) {\n            DateHavingCatalog = url.replace('catalog.xml', kk.getAttribute('xlink:href'));\n            break;\n        }\n    }\n    if (DateHavingCatalog) {\n        let result1 = await this.makeRequest(\"GET\", DateHavingCatalog);\n        let parser1 = new DOMParser();\n        let xmlDoc1 = parser1.parseFromString(result1, \"text/xml\");\n        let dataset = xmlDoc1.getElementsByTagName(\"dataset\");\n        for (let jj of dataset) {\n            let name = jj.getAttribute('name');\n            if (name.slice(-3) == '.nc') {\n                wmsList.push(DateHavingCatalog.replace('/catalog/', '/wms/').replace('catalog.xml', name));\n            }\n        }\n    }\n    return wmsList.sort()\n};\n\nmyApp.datetimePointChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n            chart: {\n                marginLeft: 65,\n                /* marginRight: 0, */\n                /* spacingLeft: 0, */\n                /* spacingRight: 0 */\n                backgroundColor: 'transparent',\n                plotBorderColor: '#afafaf',\n                plotBorderWidth: 1,\n            },\n            title: {\n                text: title,\n                fontSize: '10px',\n                useHTML: true\n            },\n            subtitle: {\n                text: subTitle,\n                fontSize: '8px'\n            },\n            series: [{\n                name: SeriesName,\n                data: SeriesData,\n                lineWidth: 0,\n                marker: {\n                    enabled: true,\n                    symbol: 'diamond',\n                    radius: 2\n                },\n            }],\n            xAxis: {\n                type: 'datetime',\n                title: {\n                    text: XaxisLabel,\n                    align: 'high',\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0\n            },\n            yAxis: {\n                title: {\n                    text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                    useHTML: true,\n                    rotation: 0,\n                    // align: 'high',\n                    offset: 0,\n                    x: -50\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0,\n                gridLineWidth: 0\n            },\n            legend: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    color: plotColor\n                }\n            },\n            lang: {\n                noData: DataPeriod + 'data not available for this station.'\n            },\n            exporting: {\n                buttons: {\n                    contextButton: {\n                        menuItems: [\"printChart\",\n                            \"separator\",\n                            \"downloadPNG\",\n                            \"downloadJPEG\",\n                            \"downloadPDF\",\n                            \"downloadSVG\",\n                            \"separator\",\n                            \"downloadCSV\",\n                            \"downloadXLS\",\n                            //\"viewData\",\n                            \"openInCloud\"]\n                    }\n                },\n                // chartOptions: {\n                //     title: {\n                //         text: title,\n                //         fontSize: '10px',\n                //         useHTML: true\n                //     }, yAxis: {\n                //         title: {\n                //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                //             useHTML: true,\n                //             rotation: 250\n                //         }\n                //     },\n                // },\n                allowHTML: true,\n                // fallbackToExportServer: false,\n                // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n            }\n        }\n    ;\n    return data\n};\n\nmyApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n        chart: {\n            marginLeft: 65,\n            /* marginRight: 0, */\n            /* spacingLeft: 0, */\n            /* spacingRight: 0 */\n            backgroundColor: 'transparent',\n            plotBorderColor: '#afafaf',\n            plotBorderWidth: 1,\n        },\n        title: {\n            text: title,\n            fontSize: '10px',\n            useHTML: true\n        },\n        subtitle: {\n            text: subTitle,\n            fontSize: '8px'\n        },\n        series: [{\n            name: SeriesName,\n            data: SeriesData,\n            // marker: {\n            //     enabled: true,\n            //     symbol: 'diamond',\n            //     radius: 3\n            // },\n        }],\n        xAxis: {\n            type: 'datetime',\n            title: {\n                text: XaxisLabel,\n                align: 'high',\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0\n        },\n        lang: {\n            noData: DataPeriod + 'data not available for this station.'\n        },\n        yAxis: {\n            title: {\n                text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                useHTML: true,\n                rotation: 0,\n                // align: 'high',\n                offset: 0,\n                x: -50\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0,\n            gridLineWidth: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                color: plotColor\n            }\n        },\n        exporting: {\n            buttons: {\n                contextButton: {\n                    menuItems: [\"printChart\",\n                        \"separator\",\n                        \"downloadPNG\",\n                        \"downloadJPEG\",\n                        \"downloadPDF\",\n                        \"downloadSVG\",\n                        \"separator\",\n                        \"downloadCSV\",\n                        \"downloadXLS\",\n                        //\"viewData\",\n                        \"openInCloud\"]\n                }\n            },\n            // chartOptions: {\n            //     title: {\n            //         text: title,\n            //         fontSize: '10px',\n            //         useHTML: true\n            //     }, yAxis: {\n            //         title: {\n            //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n            //             useHTML: true,\n            //             rotation: 250\n            //         }\n            //     },\n            // },\n            allowHTML: true,\n            // fallbackToExportServer: false,\n            // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n        }\n    };\n    return data\n};\n\nmyApp.forceDownload = function (url, fileName) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        var urlCreator = window.URL || window.webkitURL;\n        var imageUrl = urlCreator.createObjectURL(this.response);\n        var tag = document.createElement('a');\n        tag.href = imageUrl;\n        tag.download = fileName;\n        document.body.appendChild(tag);\n        tag.click();\n        document.body.removeChild(tag);\n    }\n    xhr.send();\n}\n\n// myApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor) {\n//     let data = {\n//             chart: {\n//                 marginLeft: 65,\n//                 /* marginRight: 0, */\n//                 /* spacingLeft: 0, */\n//                 /* spacingRight: 0 */\n//                 backgroundColor: 'transparent',\n//                 plotBorderColor: '#afafaf',\n//                 plotBorderWidth: 1,\n//             },\n//             title: {\n//                 text: title,\n//                 fontSize: '10px',\n//                 useHTML: true\n//             },\n//             subtitle: {\n//                 text: subTitle,\n//                 fontSize: '8px'\n//             },\n//             series: [{\n//                 name: SeriesName,\n//                 data: SeriesData,\n//                 // marker: {\n//                 //     enabled: true,\n//                 //     symbol: 'diamond',\n//                 //     radius: 3\n//                 // },\n//             }],\n//             xAxis: {\n//                 type: 'datetime',\n//                 title: {\n//                     text: XaxisLabel,\n//                     align: 'high',\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0\n//             },\n//             yAxis: {\n//                 title: {\n//                     text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                     useHTML: true,\n//                     rotation: 0,\n//                     // align: 'high',\n//                     offset: 0,\n//                     x: -50\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0,\n//                 gridLineWidth: 0\n//             },\n//             legend: {\n//                 enabled: false\n//             },\n//             credits: {\n//                 enabled: false\n//             },\n//             plotOptions: {\n//                 series: {\n//                     color: plotColor\n//                 }\n//             },\n//             exporting: {\n//                 buttons: {\n//                     contextButton: {\n//                         menuItems: [\"printChart\",\n//                             \"separator\",\n//                             \"downloadPNG\",\n//                             \"downloadJPEG\",\n//                             \"downloadPDF\",\n//                             \"downloadSVG\",\n//                             \"separator\",\n//                             \"downloadCSV\",\n//                             \"downloadXLS\",\n//                             //\"viewData\",\n//                             \"openInCloud\"]\n//                     }\n//                 },\n//                 // chartOptions: {\n//                 //     title: {\n//                 //         text: title,\n//                 //         fontSize: '10px',\n//                 //         useHTML: true\n//                 //     }, yAxis: {\n//                 //         title: {\n//                 //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                 //             useHTML: true,\n//                 //             rotation: 250\n//                 //         }\n//                 //     },\n//                 // },\n//                 allowHTML: true,\n//                 // fallbackToExportServer: false,\n//                 // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n//             }\n//         }\n//     ;\n//     console.log(JSON.stringify(data));\n//     return data\n// };\n\nexport var AirPollutionWatchApp = myApp;","import { render } from \"./chartComponentArchive.vue?vue&type=template&id=60bb07dd&scoped=true\"\nimport script from \"./chartComponentArchive.vue?vue&type=script&lang=js\"\nexport * from \"./chartComponentArchive.vue?vue&type=script&lang=js\"\n\nimport \"./chartComponentArchive.vue?vue&type=style&index=0&id=60bb07dd&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-60bb07dd\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Map Controls\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n        <el-form\n            label-position=\"left\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n        >\n\n          <!--          <el-form-item label=\"Data Period\" prop=\"data_period\">-->\n          <!--            <el-select v-model=\"mapControlVariable.data_period\" placeholder=\"Data Period\"-->\n          <!--                       style=\"width: 100%\">-->\n          <!--              <el-option-->\n          <!--                  v-for=\"item in options.data_period\"-->\n          <!--                  :key=\"item.value\"-->\n          <!--                  :label=\"item.label\"-->\n          <!--                  :value=\"item.value\"-->\n          <!--                  :disabled=\"item.disabled\"-->\n          <!--              >-->\n          <!--              </el-option>-->\n          <!--            </el-select>  -->\n          <!--          </el-form-item> -->\n          <el-form-item label=\"Select By\" prop=\"select_by\">\n            <el-select v-model=\"mapControlVariable.select_by\" placeholder=\"Select By\" style=\"width: 100%\">\n\n              <el-option\n                  v-for=\"item in options.select_by\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                  :disabled=\"item.disabled\"\n              >\n              </el-option>\n\n            </el-select>\n          </el-form-item>\n\n        </el-form>\n\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n            v-if=\"mapControlVariable.select_by ==='Location'\"\n        >\n\n          <el-form-item v-show=\"mapControlVariable.data_period !=='Recent'\" label=\"Select Location\"\n                        prop=\"Select Location\">\n\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-model=\"mapControlVariable.location_by\" placeholder=\"Select Location\" style=\"width: 100%\">\n                <el-option\n                    v-for=\"item in options.location_by\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n\n              </el-select>\n            </el-col>\n            <el-col :span=\"2\" style=\"width: 100%\">\n              <div class=\"\" style=\"width: 100%;text-align: center;\">\n                -\n              </div>\n            </el-col>\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-show=\"mapControlVariable.location_by ==='default_locations'\"\n                         v-model=\"mapControlVariable.default_location\"\n                         placeholder=\"Select Location\" style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.default_location\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n              <div class=\"\" v-show=\"mapControlVariable.location_by ==='AOI'\">\n                <div class=\"feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===true\">Feature\n                  selected\n                </div>\n                <div class=\"no-feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===false\">No Feature\n                  selected\n                </div>\n              </div>\n            </el-col>\n\n          </el-form-item>\n\n          <el-form-item label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value1\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value2\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value3\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value4\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n\n        >\n          <el-form-item v-show=\"mapControlVariable.select_by ==='Parameter'\" label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n\n              <el-cascader\n                  v-model=\"mapControlVariable.parameter_by_pollutant_value\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n\n            </div>\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===false\"\n              label=\"Select Locations\" prop=\"Locations\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--              -->\n            <!--            </el-radio-group>-->\n\n            <el-radio-group v-model=\"mapControlVariable.radioValue\">\n              <el-radio :label=\"1\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='1'?false:true\"\n\n                                :IndexValue=\"1\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"2\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='2'?false:true\"\n                                :IndexValue=\"2\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"3\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='3'?false:true\"\n                                :IndexValue=\"3\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"4\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='4'?false:true\"\n                                :IndexValue=\"4\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n            </el-radio-group>\n\n\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===true\"\n              label=\"Select Stations\" prop=\"station\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--              -->\n            <!--            </el-radio-group>-->\n\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val1\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val2\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val3\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val4\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n\n        <el-button class=\"compute-now\" type=\"primary\" size=\"mini\" style=\"width: 100%\" @click=\"computeData\">compute\n        </el-button>\n\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapActions, mapGetters, mapMutations, mapState} from \"vuex\";\nimport OLWKT from \"ol/format/WKT\";\nimport selectLocation from \"./selectLocation\";\nimport {threddDataSource, GeoServerHost} from \"../config\"\nimport TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\nimport {AirPollutionWatchApp} from \"../utils/dataArchive\";\nimport OlGeoJSON from \"ol/format/GeoJSON\";\nimport {getCenter as ol_extent_getCenter} from \"ol/extent\";\nimport eventHub from \"../utils/utils\";\n\n// import {defaultParamter} from \"../utils/defaultParamter\"\n// import {ElLoading} from 'element-plus';\nimport rgbLegend from '../assets/rgblegend.jpg';\nimport {Action} from \"../store/actionType\";\nimport {Image as ImageLayer} from \"ol/layer\";\nimport ImageWMS from \"ol/source/ImageWMS\";\nimport Style from \"ol/style/Style\";\nimport {Icon} from \"ol/style\";\n\n\nexport default {\n  name: \"mapControlsArchive\",\n  data() {\n    return {\n      maskCoordinate: null,\n      data__layer__initilize__Recent: false,\n      data__layer__initilize__Archive: false,\n      data__layer__initilize__Forecast: false,\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      options: {\n        data_period: [\n          {\n            value: 'Recent',\n            label: 'Recent',\n          },\n          {\n            value: 'Archive',\n            label: 'Archive',\n          },\n          {\n            value: 'Forecast',\n            label: 'Forecast',\n          }\n        ], select_by: [\n          {\n            value: 'Location',\n            label: 'Location',\n          },\n          {\n            value: 'Parameter',\n            label: 'Parameter',\n          }\n        ], location_by: [\n          {\n            value: 'default_locations',\n            label: 'Major Cities',\n          },\n          {\n            value: 'AOI',\n            label: 'Select on map',\n          }\n        ],\n        default_location: [],\n        ObservationStationOptions: []\n      },\n      PROXY_PREFIX: Action.Base + '/apps/airqualitynp/WMSProxy/',\n    }\n  },\n  watch: {\n    SelectDefaultLocation(newVal, oldVal) {\n      if (newVal) {\n        // add it to vectorLayer\n        let selNewValObj = this.options.default_location.filter(function (x) {\n          return newVal == x.value\n        })[0];\n\n        let Feature = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        Feature.set(\"SelectBy\", \"Location\");\n        Feature.set(\"LocationBy\", \"default_location\");\n        this.WorkingVectorLayer.getSource().addFeature(Feature);\n\n        var view = this.mapObject.getView();\n        var resolution = view.getResolutionForExtent(Feature.getGeometry().getExtent(), this.mapObject.getSize());\n        var zoom = view.getZoomForResolution(resolution);\n        var center = ol_extent_getCenter(Feature.getGeometry().getExtent());\n        // redraw before zoom\n        setTimeout(function () {\n          view.animate({\n            center: center,\n            zoom: Math.min(zoom, 11)\n          });\n        }, 100);\n\n        var format = new OLWKT();\n        var wktfeaturegeom = format.writeGeometry(Feature.getGeometry(), {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        var geometryType = Feature.getGeometry().getType();\n\n        // let featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n\n        // let featureForExtent = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        // featureExtent = featureExtent.getGeometry().getExtent();\n\n        this.mapControlVariable.location_by_wktValue = wktfeaturegeom;\n        this.mapControlVariable.location_by_geometryType = geometryType;\n        this.mapControlVariable.location_by_default_level_value = selNewValObj.label;\n\n      } else {\n        this.mapControlVariable.location_by_wktValue = '';\n        this.mapControlVariable.location_by_geometryType = '';\n        this.mapControlVariable.location_by_default_level_value = '';\n      }\n\n      if (oldVal) {\n        // remove it from vector layer\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Location\" && f.get(\"LocationBy\") == \"default_location\" && f.get(\"id\") == oldVal) {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n      }\n    },\n    SelectLocationBy() {\n      this.mapControlVariable.default_location = '';\n    },\n    async SelectByOption() {\n\n      if (this.mapControlVariable.select_by == \"Location\") {\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"default_location\") {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n\n        // this.mapControlVariable.parameter_by_pollutant_value = '';\n\n        //remove the layers which are on select by parameter\n        this.SetLayerOfSelectByParameterLayer(false);\n\n        let kk = this.getStationInfoObject(11);\n        await this.AddLayerToLayerList(kk);\n\n        let jj = this.getStationInfoObject(12);\n        await this.AddLayerToLayerList(jj);\n\n        this.mapControlVariable.location_by = 'default_locations';\n        this.mapControlVariable.default_location = 1;\n\n        this.mapControlVariable.location_by_pollutant_value1 = [1, 11, 2];\n        this.mapControlVariable.location_by_pollutant_value2 = [1, 11, 5];\n        this.mapControlVariable.location_by_pollutant_value3 = [1, 12, 6];\n        this.mapControlVariable.location_by_pollutant_value4 = [1, 12, 7];\n\n      } else {\n\n        //clear Location\n        this.mapControlVariable.location_by_pollutant_value1 = [];\n        this.mapControlVariable.location_by_pollutant_value2 = [];\n        this.mapControlVariable.location_by_pollutant_value3 = [];\n        this.mapControlVariable.location_by_pollutant_value4 = [];\n\n        this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n\n        // no single default location on parameter\n        this.mapControlVariable.default_location = '';\n\n        this.SetLayerOfSelectByParameterLayer(true);\n      }\n\n      this.ObservationStationOption();\n\n    },\n    async SelectByParameterPollutant(newPollutant, oldPollutant) {\n\n      // set Layer off of old pollutant\n      if (oldPollutant) {\n        if (oldPollutant.length) {\n          let kk = this.getStationInfoObject(oldPollutant[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n\n      // Get layer Object\n      let kk = this.getStationInfoObject(newPollutant[1]);\n\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        await this.AddLayerToLayerList(kk);\n        let layer = this.getBindedLayer(kk.layerId);\n        layer.setVisibleDivBind(true);\n        //\n\n        // stations data\n        if (kk.stationData) {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = true;\n          this.options.ObservationStationOptions = kk.childrenData;\n\n          this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = kk.defaultStation[0];\n          this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = kk.defaultStation[1];\n          this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = kk.defaultStation[2];\n          this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = kk.defaultStation[3];\n\n        } else {\n          // Data other than station\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = false;\n          this.options.ObservationStationOptions = [];\n\n          // set here default location\n          this.mapControlVariable.parameter_by_location__1.location_by = 'default_locations';\n          this.mapControlVariable.parameter_by_location__2.location_by = 'default_locations';\n          this.mapControlVariable.parameter_by_location__3.location_by = 'default_locations';\n          this.mapControlVariable.parameter_by_location__4.location_by = 'default_locations';\n\n          this.mapControlVariable.parameter_by_location__1.default_location = 1;\n          this.mapControlVariable.parameter_by_location__2.default_location = 2;\n          this.mapControlVariable.parameter_by_location__3.default_location = 3;\n          this.mapControlVariable.parameter_by_location__4.default_location = 4;\n\n        }\n      }\n    },\n    location_by_pollutant_value1(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value2(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value3(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n    location_by_pollutant_value4(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n  },\n  components: {selectLocation},\n  methods: {\n    ...mapActions([\"getCityData\", \"PostSlicedFromCatalog\", \"getGeoJsonForOneSatation\", \"getDefaultGroundObservation\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\", \"addLegend\", \"removeLegend\"]),\n    featureSelectorDeleteUpdate() {\n      var wktfeaturegeom, geometryType;\n      if (this.selectInteraction) {\n        if (this.SelectByOption == 'Location') {\n          if (this.selectInteraction.getFeatures().getLength()) {\n\n            var features = this.selectInteraction.getFeatures();\n            features.forEach(function (f) {\n              var format = new OLWKT();\n              wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n                dataProjection: 'EPSG:4326',\n                featureProjection: 'EPSG:3857'\n              });\n              geometryType = f.getGeometry().getType();\n            });\n            // let Param = {\n            //   geometryType: geometryType,\n            //   wkt: wktfeaturegeom,\n            // };\n            if (this.mapControlVariable.location_by == 'AOI') {\n              this.mapControlVariable.is_AOI_Feature_selected = true;\n              this.mapControlVariable.location_by_wktValue = wktfeaturegeom;\n              this.mapControlVariable.location_by_geometryType = geometryType;\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: \"To select this feature you need to select 'Select on map' from drop down menu\",\n                type: 'warning'\n              });\n              this.selectInteraction.getFeatures().clear();\n              this.mapControlVariable.is_AOI_Feature_selected = false;\n              this.mapControlVariable.location_by_wktValue = '';\n              this.mapControlVariable.location_by_geometryType = '';\n            }\n          } else {\n            if (this.mapControlVariable.location_by == 'AOI') {\n              this.mapControlVariable.is_AOI_Feature_selected = false;\n              this.mapControlVariable.location_by_wktValue = '';\n              this.mapControlVariable.location_by_geometryType = '';\n            }\n          }\n        }\n      }\n    },\n    CatalogSlicingParam(url, startDate, endDate) {\n      let param = {\n        url: url,\n        data_ext: '.nc',\n        startDate: startDate,\n        endDate: endDate,\n      }\n      return param\n    },\n    async addRasterLayerToMap(kk) {\n      let slicingParam, responseData, resPonseParsed, wmsList = [], isTrue;\n      let catalogURl = threddDataSource + kk.catalog;\n      slicingParam = this.CatalogSlicingParam(catalogURl, kk.getStartDate(), kk.getEndDate());\n      responseData = await this.PostSlicedFromCatalog(slicingParam);\n      resPonseParsed = responseData;\n      isTrue = resPonseParsed.data.length;\n      if (isTrue) {\n        resPonseParsed.data.forEach(function (fileName) {\n          let url = catalogURl.replace(\"/catalog/\", \"/wms/\").replace(\"catalog.xml\", fileName);\n          wmsList.push(url)\n        });\n      }\n\n      var Newlayer;\n      if (kk.isTimeDimensionLayer) {\n        if (kk.useSLD) {\n          let SLD = kk.SLD.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n          let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&SLD_BODY=';\n          let legendWMS = '';\n          if (!kk.legendPath) {\n            if (Array.isArray(wmsList)) {\n              legendWMS = wmsList[0] + LegendParameter + encodeURIComponent(SLD).toString();\n            } else {\n              legendWMS = wmsList + LegendParameter + encodeURIComponent(SLD).toString();\n            }\n          } else {\n            legendWMS = kk.legendPath\n          }\n          console.log(legendWMS);\n\n          let OLEXTLegendObject = {\n            id: kk.threddLayerProp.id,\n            title: kk.threddLayerProp.title,\n            typeGeom: 'Point',\n            style: new Style({\n              image: new Icon({\n                src: kk.threddLayerProp.legendPath,\n                crossOrigin: 'anonymous', // Enable print\n              })\n            }),\n            size: [60, 30]\n          };\n\n          let timedimensionTilePara = kk.threddLayerProp;\n          timedimensionTilePara.source.params.SLD_BODY = SLD;\n          timedimensionTilePara.source.url = wmsList;\n          timedimensionTilePara.legendPath = rgbLegend;\n          timedimensionTilePara.wmsList = wmsList;\n          timedimensionTilePara.changeWMSProxy = true;\n          // timedimensionTilePara.showAnimationButton = true;\n          // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n          timedimensionTilePara.OLEXTLegendObject = OLEXTLegendObject;\n          Newlayer = new TimeDimensionTile(timedimensionTilePara);\n\n          let AddRemoveLegendFunction = function () {\n            if (this.getProperties().visible) {\n              that.addLegend(this.getProperties().OLEXTLegendObject);\n            } else {\n              that.removeLegend(this.getProperties().OLEXTLegendObject);\n            }\n          };\n\n          let that = this;\n          Newlayer.on('change:visible', AddRemoveLegendFunction);\n\n          await Newlayer.init().then(() => {\n            this.mapObject.addThreddsLayer(Newlayer);\n            let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true, 'withOpacityChange');\n            l5.setVisibleDivBind(kk.VisibleDivBind);\n            let properties = Newlayer.getProperties()\n            if (properties.mask) {\n              console.log(properties)\n              if (properties.CropOrMask == 'crop') {\n                Newlayer.setCrop(this.maskCoordinate);\n              } else {\n                Newlayer.setMask(this.maskCoordinate);\n              }\n            }\n            this.appendTimeSeriesLayerCollection(l5);\n            // myApp.AllBindedLayersList.push(l5);\n          });\n        } else {\n          let timedimensionTilePara = kk.threddLayerProp;\n          let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&LAYERS=' + timedimensionTilePara.source.params.LAYERS + '&COLORSCALERANGE=' + timedimensionTilePara.source.params.COLORSCALERANGE + '&STYLES=' + timedimensionTilePara.source.params.STYLES;\n          let legendWMS = '';\n          if (!kk.legendPath) {\n            if (Array.isArray(wmsList)) {\n              legendWMS = wmsList[0] + LegendParameter;\n            } else {\n              legendWMS = wmsList + LegendParameter;\n            }\n          } else {\n            legendWMS = kk.legendPath\n          }\n          timedimensionTilePara.source.url = wmsList;\n          timedimensionTilePara.legendPath = legendWMS;\n          timedimensionTilePara.wmsList = wmsList;\n          timedimensionTilePara.changeWMSProxy = true;\n          // timedimensionTilePara.showAnimationButton = true;\n          // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n          let le = {\n            id: timedimensionTilePara.id,\n            title: timedimensionTilePara.title,\n            // typeGeom: 'MultiPolygon',\n            typeGeom: 'Point',\n            style: new Style({\n              image: new Icon({\n                src: legendWMS,\n                crossOrigin: 'anonymous', // Enable print\n                // scale:[0.9,0.15]\n              })\n            }),\n            size: [60, 250]\n            // margin:3,\n            // className:'biglegend'\n          };\n\n          timedimensionTilePara.OLEXTLegendObject = le;\n          Newlayer = new TimeDimensionTile(timedimensionTilePara);\n          let AddRemoveLegendFunction = function () {\n            if (this.getProperties().visible) {\n              that.addLegend(this.getProperties().OLEXTLegendObject);\n            } else {\n              that.removeLegend(this.getProperties().OLEXTLegendObject);\n            }\n          };\n\n          let that = this;\n          Newlayer.on('change:visible', AddRemoveLegendFunction);\n          await Newlayer.init().then(() => {\n            this.mapObject.addThreddsLayer(Newlayer);\n            // myApp.map.addThreddsLayer(val);\n            let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true);\n            l5.setVisibleDivBind(kk.VisibleDivBind);\n            let properties = Newlayer.getProperties()\n            if (properties.mask) {\n              if (properties.CropOrMask == 'crop') {\n                Newlayer.setCrop(this.maskCoordinate);\n              } else {\n                Newlayer.setMask(this.maskCoordinate);\n              }\n            }\n            this.appendTimeSeriesLayerCollection(l5);\n            // myApp.AllBindedLayersList.push(l5);\n          });\n\n        }\n      }\n    },\n\n    computeData() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n          let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n          if (kk.stationData) {\n            if (this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 && this.mapControlVariable.parameter_by_pollutant_value_stationData_val4) {\n              eventHub.$emit('getVisualization');\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select station on all dropdown menu.',\n                type: 'warning'\n              });\n            }\n          } else {\n            if (this.mapControlVariable.parameter_by_location__1.wktValue && this.mapControlVariable.parameter_by_location__2.wktValue && this.mapControlVariable.parameter_by_location__3.wktValue && this.mapControlVariable.parameter_by_location__4.wktValue) {\n              eventHub.$emit('getVisualization');\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: 'Please select locations on all dropdown menu.',\n                type: 'warning'\n              });\n            }\n          }\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please Select a pollutant',\n            type: 'warning'\n          });\n        }\n      } else {\n        if (this.location_by_pollutant_value1.length > 0 && this.location_by_pollutant_value2.length > 0 && this.location_by_pollutant_value3.length > 0 && this.location_by_pollutant_value4.length > 0) {\n          eventHub.$emit('getVisualization');\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please select pollutants on all dropdown menu.',\n            type: 'warning'\n          });\n        }\n      }\n    },\n    ObservationStationOption() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.children) {\n              delete obj2.children;\n            }\n          });\n        });\n      } else {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.childrenData) {\n              obj2.children = obj2.childrenData;\n            }\n          });\n        });\n      }\n    },\n    getStationInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    SetLayerOfSelectByParameterLayer(IsViz) {\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n        let layer = this.getBindedLayer(kk.layerId);\n        if (IsViz) {\n          layer.setVisibleDivBind(IsViz);\n        } else {\n          layer.setVisibleDivBind(IsViz);\n        }\n      }\n    },\n    setLayerVisible(layerId, IsViz) {\n      let layer = this.getBindedLayer(layerId);\n      if (IsViz) {\n        layer.setVisible(IsViz);\n      } else {\n        layer.setVisibleDivBind(IsViz);\n      }\n    },\n    async onChangePollutantsOnSelectByLocation(newVal, oldVal) {\n\n      if (newVal.length) {\n        let kk = this.getStationInfoObject(newVal[1]);\n        if (Object.keys(kk).length != 0) {\n          await this.AddLayerToLayerList(kk);\n          let layer = this.getBindedLayer(kk.layerId);\n          layer.setVisibleDivBind(true);\n        }\n      }\n      if (oldVal.length) {\n        let count = 0;\n        if (this.location_by_pollutant_value1.length) {\n          if (this.location_by_pollutant_value1[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value2.length) {\n          if (this.location_by_pollutant_value2[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value3.length) {\n          if (this.location_by_pollutant_value3[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value4.length) {\n          if (this.location_by_pollutant_value4[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (count === 0) {\n          let kk = this.getStationInfoObject(oldVal[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n      console.log(newVal);\n      console.log(oldVal);\n    },\n    async AddLayerToLayerList(kk) {\n\n      if (kk.layerProperties.initilize == false) {\n        kk.layerProperties.initilize = true;\n        if (kk.stationData == true) {\n          let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n\n          let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n          let lyr = kk.layerProperties.layer;\n          let le = {\n            id: kk.layerProperties.id,\n            title: kk.layerProperties.title,\n            typeGeom: 'Point',\n            style: new Style({\n              image: new Icon({\n                src: WMSURLWithRequestParameter + lyr,\n                crossOrigin: 'anonymous' // Enable print\n              })\n            }),\n             size: [60, 30]\n          };\n          let layerObj = new ImageLayer({\n            id: kk.layerProperties.id,\n            title: kk.layerProperties.title,\n            visible: kk.layerProperties.visible,\n            legendPath: WMSURLWithRequestParameter + lyr,\n            zIndex: kk.layerProperties.zIndex,\n            OLEXTLegendObject: le,\n            opacity: kk.layerProperties.opacity,\n            source: new ImageWMS({\n              url: GeoServerWMSURL,\n              crossOrigin: 'anonymous',\n              params: {'LAYERS': lyr},\n              serverType: 'geoserver',\n            }),\n          });\n          let AddRemoveLegendFunction = function () {\n            if (this.getProperties().visible) {\n              that.addLegend(this.getProperties().OLEXTLegendObject);\n            } else {\n              that.removeLegend(this.getProperties().OLEXTLegendObject);\n            }\n          };\n          let that = this;\n          layerObj.on('change:visible', AddRemoveLegendFunction);\n\n          this.mapObject.addLayer(layerObj);\n          let l5 = new LayerSwitcher(\".layerCollection\", layerObj, false, false);\n          this.appendTimeSeriesLayerCollection(l5);\n          l5.setVisibleDivBind(kk.layerProperties.visible);\n          let sd = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n          let ed = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.endDate);\n          let regionOrCountry = 0;\n          let Param = '?ModelClass=' + kk.ModelClass + \"&ModelClassDataList=\" + kk.ModelClassDataList + '&typeName=' + kk.typeName + '&StartDate=' + sd + '&EndDate=' + ed + '&rid=' + regionOrCountry\n          let dataResponse = await this.getGeoJsonForOneSatation(Param);\n          kk.childrenData = dataResponse.data;\n        } else {\n          console.log(\"before-----\");\n          await this.addRasterLayerToMap(kk.layerProperties);\n          // await this.addRasterLayerToMap(kk.layerProperties);\n          console.log(\"after-----\");\n        }\n      }\n    },\n    InitilizeStationDataOnLoad() {\n      this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n        obj1.children.forEach((obj2) => {\n          if (obj2.stationData) {\n            this.AddLayerToLayerList(obj2);\n          }\n        });\n      });\n    },\n  },\n  computed: {\n    ...mapState([\"selectInteraction\", \"mapObject\", \"TimeSeriesLayerCollection\", \"WorkingVectorLayer\", \"mapControlVariable\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n    cascaderData() {\n      return this.AirPollutionWatchApp.cascaderObj;\n    },\n    SelectDefaultLocation() {\n      return this.mapControlVariable.default_location;\n    },\n    SelectLocationBy() {\n      return this.mapControlVariable.location_by;\n    },\n    SelectByOption() {\n      return this.mapControlVariable.select_by;\n    },\n    SelectDataPeriod() {\n      return this.mapControlVariable.data_period;\n    },\n    SelectByParameterPollutant() {\n      return this.mapControlVariable.parameter_by_pollutant_value;\n    },\n    location_by_pollutant_value1() {\n      return this.mapControlVariable.location_by_pollutant_value1;\n    },\n    location_by_pollutant_value2() {\n      return this.mapControlVariable.location_by_pollutant_value2;\n    },\n    location_by_pollutant_value3() {\n      return this.mapControlVariable.location_by_pollutant_value3;\n    },\n    location_by_pollutant_value4() {\n      return this.mapControlVariable.location_by_pollutant_value4;\n    },\n  },\n  async mounted() {\n\n    setTimeout(() => {\n      this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n    }, 500);\n    this.addRasterLayerToMap(this.AirPollutionWatchApp.TrueColorImage);\n\n    setTimeout(() => {\n      this.selectInteraction.on('select', () => {\n        this.featureSelectorDeleteUpdate();\n      });\n    }, 2000);\n    // this.addLayersToMap();\n    //\n    // console.log(\"all complete\");\n    //\n    // this.mapControlVariable.select_by = 'Parameter';\n    // this.mapControlVariable.parameter_by_pollutant_value = [1, 13];\n\n    setTimeout(() => {\n      this.computeData();\n      this.InitilizeStationDataOnLoad();\n    }, 3000);\n\n  },\n  async created() {\n    let sdt = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n    let edt = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.endDate);\n\n    let defalultSt = await this.getDefaultGroundObservation({\n      typeName: 'pm',\n      startDate: sdt,\n      endDate: edt,\n    });\n\n    this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n      obj1.children.forEach((obj2) => {\n        if (obj2.ModelClass == 'UsEmbassyPm') {\n          obj2.defaultStation = defalultSt.defaultStation\n        }\n      })\n    });\n\n\n    let defaultLocation = await this.getCityData();\n    this.options.default_location = defaultLocation.data;\n  },\n  deactivated() {\n\n  }\n\n}\n</script>\n\n<style scoped>\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.pollutant-cascader:not(:last-child) {\n  padding-bottom: 10px;\n}\n\n.body-container {\n  height: calc(100% - 50px);\n}\n\nbutton.el-button.el-button--primary.el-button--mini.compute-now, button.el-button.el-button--primary.el-button--mini.compute-now:focus, button.el-button.el-button--primary.el-button--mini.compute-now:hover {\n  background-color: #66b1ff;\n  border-color: #66b1ff;\n}\n\n</style>","import { render } from \"./mapControlsArchive.vue?vue&type=template&id=02e95031&scoped=true\"\nimport script from \"./mapControlsArchive.vue?vue&type=script&lang=js\"\nexport * from \"./mapControlsArchive.vue?vue&type=script&lang=js\"\n\nimport \"./mapControlsArchive.vue?vue&type=style&index=0&id=02e95031&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02e95031\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div id=\"map-container2\" ref=\"LayerSelectorDropdown\">\n    </div>\n    <!--    <div id=\"layerSwitcherDiv\" class=\"ol-unselectable ol-control\" @click=\"LayerSwitcherClick()\">-->\n    <!--      <button>-->\n    <!--        <img src=\"@/assets/layers.svg\" style=\"height: 20px;width: 20px;\">-->\n    <!--      </button>-->\n    <!--    </div>-->\n\n    <!--    <el-drawer-->\n    <!--        title=\"Layers\"-->\n    <!--        v-model=\"drawer\"-->\n    <!--        custom-class=\"drawerCustomCSS\"-->\n    <!--        :append-to-body=\"drawerAppendToBody\"-->\n    <!--        :modal=\"false\"-->\n    <!--        :modal-class=\"'drawerForLayersList'\"-->\n    <!--    >-->\n    <!--      <span>-->\n    <!--        <div class=\"layerCollection\"></div>-->\n    <!--          </span>-->\n    <!--    </el-drawer>-->\n    <PrintMap></PrintMap>\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\n// import Control from \"ol/control/Control\"\n// import OSM from \"ol/source/OSM\";\nimport XYZ from 'ol/source/XYZ';\n// import {Image as ImageLayer, Tile as TileLayer} from 'ol/layer';\nimport {Tile as TileLayer} from 'ol/layer';\n// import TileWMS from \"ol/source/TileWMS\";\n// import ImageWMS from 'ol/source/ImageWMS';\nimport View from \"ol/View\";\nimport {dataSelect} from \"../utils/data\";\nimport eventHub from \"../utils/utils\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import EDALSLD from 'ol-plus/sld/EDALSLD';\n// import {ThreddsServer} from '../config';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n// import {lineString, lineDistance, area as turfArea,polygon as turfPolygon, length as turfLength} from '@turf/turf';\nimport {getArea, getLength,} from 'ol/sphere';\nimport LineString from 'ol/geom/LineString';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n\n// import {MajorBasinExtent, BasinExtent, mbasin, dataSelect, WMSSLD, legendImage} from \"../utils/data\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import {ThreddsServer} from \"../utils/config\";\n\n\n// import 'ol-ext/control/Search.css';\nimport SearchNominatim from 'ol-ext/control/SearchNominatim';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nimport Text from \"ol/style/Text\";\nimport {Icon} from 'ol/style';\nimport {toSize} from 'ol/size';\nimport ImageIcon from '../assets/markers_default.png';\nimport {getCenter as ol_extent_getCenter} from 'ol/extent';\nimport GeoJSON from \"ol/format/GeoJSON\";\n// import Legend from \"ol-ext/legend/Legend\";\nimport Legend from \"../utils/customLegend\"\nimport LegendControl from \"ol-ext/control/Legend\";\nimport CanvasScaleLine from \"ol-ext/control/CanvasScaleLine\";\nimport PrintDialog from \"ol-ext/control/PrintDialog\";\nimport OLPolygon from 'ol/geom/Polygon';\nimport OlSelect from 'ol/interaction/Select';\nimport OlDraw from 'ol/interaction/Draw';\nimport OlExtTextButton from 'ol-ext/control/TextButton';\nimport Bar from 'ol-ext/control/Bar';\nimport OlExtButton from 'ol-ext/control/Button';\nimport OlExtToggle from 'ol-ext/control/Toggle';\n// import 'ol-ext/control/Bar.css'\nimport CircleStyle from \"ol/style/Circle\";\n// import ScaleLine from \"ol/control/ScaleLine\";\nimport CanvasTitle from \"ol-ext/control/CanvasTitle\";\nimport {defaults} from \"ol/control\";\nimport {saveAs} from 'file-saver';\nimport {jsPDF} from \"jspdf\";\nimport {mapMutations, mapState} from 'vuex';\nimport PrintMap from \"./PrintMap\";\n// import {GeoServerHost} from \"../config\";\n\nexport default {\n  name: \"mapComponentArchive\",\n  components: {PrintMap},\n  data() {\n    return {\n      // drawerAppendToBody: true,\n      mapObj: '',\n      HighLightedLayer: '',\n      view: '',\n      mapObject: '',\n      MajorBasin: '',\n      AllLayers: '',\n      selectedFilesOnAYear: [],\n      // drawer: true,\n    }\n  },\n  created() {\n    this.mapControlVariable.LegendObject = new Legend({\n      title: 'Legend',\n      margin: 3,\n      // this will be used for the text\n      size:[60,30]\n      // size:[200,50]\n      // items: legendItems\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSelectedLayerObj\", \"appendTimeSeriesLayerCollection\", \"setSelectInteraction\", \"setMapObject\", \"setWorkingVectorLayer\",\"addLegend\", \"removeLegend\"]),\n    mapInitilization() {\n      // let osm = new TileLayer({\n      //   source: new OSM({attributions: [],}),\n      //   // visible:false\n      // });\n\n      let esri_world_topomap = new TileLayer({\n        visible: true,\n        zIndex: 1,\n        source: new XYZ({\n          attributions: [],\n          url:\n              'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n              'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n          crossOrigin: \"Anonymous\"\n        }),\n      });\n\n      let view = new View({\n        center: [9388155.512006583, 3291367.8109067543],\n        zoom: 4,\n         extent: [6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793]\n      });\n      // let ScaleControl = new ScaleLine({\n      //   units: 'metric'\n      // });\n      //\n      var map = new Map({\n        layers: [],\n        // target: this.$refs['map-root'],\n        renderer: 'canvas',\n        target: 'map-container2',\n        controls: defaults({\n          attribution: false\n        }).extend([]),\n        view: view,\n      });\n      // map.addLayer(osm);\n      map.addLayer(esri_world_topomap);\n      this.mapObject = map;\n      window.mapObject = map;\n      this.view = view;\n\n      // this.mapObject.addControl(\n      //     new Control({\n      //       element: document.getElementById('layerSwitcherDiv')\n      //     })\n      // );\n      map.getView().fit([6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793], map.getView());\n      this.setMapObject(this.mapObject);\n    },\n    legendObjectCollection() {\n      let legendObjectEnabled = [];\n      this.TimeSeriesLayerCollection.forEach(function (layerObj) {\n        let Properties = layerObj.getProperties();\n        console.log(Properties.legendPath);\n        let lObj = {\n          title: Properties.title,\n          // typeGeom: 'Point',\n          style: new Style({\n            image: new Icon({\n              src: Properties.legendPath,\n              crossOrigin: 'anonymous' // Enable print\n            })\n          })\n        };\n        legendObjectEnabled.push(lObj)\n      });\n      return legendObjectEnabled;\n    },\n    addGeoCodingAndInteractionBar() {\n      var map = this.mapObject;\n\n// Set the control grid reference\n      var search = new SearchNominatim({\n        polygon: true,\n        reverse: false,\n        position: true,\t// Search, with priority to geo position,\n        // maxHistory: -1,\n        className: 'OSMBasedGeocodingEmissionPage',\n      });\n\n// search.set('copy', false)\n\n      var GeoCodingAndDrawLayer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 999\n      });\n\n      this.setWorkingVectorLayer(GeoCodingAndDrawLayer);\n\n      map.addLayer(GeoCodingAndDrawLayer);\n\n      map.addControl(search);\n\n\n// Select feature when click on the reference index\n      search.on('select', function (e) {\n        // console.log(e);\n        // GeoCodingAndDrawLayer.getSource().clear();\n        removePreviousSearchFeature();\n        // Check if we get a geojson to describe the search\n        if (e.search.geojson) {\n          var format = new GeoJSON();\n          var f = format.readFeature(e.search.geojson, {\n            dataProjection: \"EPSG:4326\",\n            featureProjection: map.getView().getProjection()\n          });\n          delete e.search.geojson;\n          f.setProperties(e.search);\n          GeoCodingAndDrawLayer.getSource().addFeature(f);\n          var view = map.getView();\n          var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n          var zoom = view.getZoomForResolution(resolution);\n          var center = ol_extent_getCenter(f.getGeometry().getExtent());\n          // redraw before zoom\n          setTimeout(function () {\n            view.animate({\n              center: center,\n              zoom: Math.min(zoom, 16)\n            });\n          }, 100);\n\n        } else {\n          map.getView().animate({\n            center: e.coordinate,\n            zoom: Math.max(map.getView().getZoom(), 16)\n          });\n        }\n        UpDateVectorLayerStyle();\n      });\n\n      // Main control bar\n      var mainbar = new Bar();\n      mainbar.setPosition('top-left');\n\n      map.addControl(mainbar);\n\n// Edit control bar\n      var editbar = new Bar({\n        toggleOne: true,\t// one control active at the same time\n        group: false\t\t\t// group controls together\n      });\n      mainbar.addControl(editbar);\n\n// Add selection tool:\n//  1- a toggle control with a select interaction\n//  2- an option bar to delete / get information on the selected feature\n      var sbar = new Bar();\n      sbar.addControl(new OlExtButton({\n        html: '<i class=\"fa fa-times\"></i>',\n        title: \"Delete\",\n        handleClick: function () {\n          var features = selectCtrl.getInteraction().getFeatures();\n          if (!features.getLength()) info(\"Select an object first...\");\n          else info(features.getLength() + \" object(s) deleted.\");\n\n          features.forEach(function (f) {\n            console.log(f);\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          });\n          selectCtrl.getInteraction().getFeatures().clear();\n          selectCtrl.getInteraction().dispatchEvent({type: 'select'});\n        }\n      }));\n\n\n      var selectCtrl = new OlExtToggle({\n        html: '<i class=\"fa fa-hand-pointer\"></i>',\n        title: \"Select\",\n        interaction: new OlSelect({\n          hitTolerance: 2,\n          style: new Style({\n            image: new CircleStyle({\n              radius: 5,\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              }),\n            }),\n            stroke: new Stroke({\n              color: [255, 0, 0, 1],\n              opacity: 1,\n              width: 2\n            }),\n            fill: new Fill({\n              color: '#e5e5ff50'\n            })\n            // Commented to only see the lines\n            //,fill: new ol.style.Stroke ({\n            //  color: [155, 155, 155, 0.4]\n            //})\n          }),\n          layers: [GeoCodingAndDrawLayer]\n        }),\n        bar: sbar,\n        autoActivate: true,\n        active: true\n      });\n      this.setSelectInteraction(selectCtrl.getInteraction());\n\n      editbar.addControl(selectCtrl);\n      this.setSelectedLayerObj(selectCtrl.getInteraction());\n// Add editing tools\n      var pedit = new OlExtToggle({\n        html: '<i class=\"fa fa-map-marker-alt\" ></i>',\n        title: 'Point',\n        interaction: new OlDraw({\n          type: 'Point',\n          source: GeoCodingAndDrawLayer.getSource()\n        })\n      });\n      editbar.addControl(pedit);\n      var fedit = new OlExtToggle({\n        html: '<i class=\"fa fa-draw-polygon\" ></i>',\n        title: 'Polygon',\n        interaction: new OlDraw({\n          type: 'Polygon',\n          source: GeoCodingAndDrawLayer.getSource(),\n          // Count inserted points\n          geometryFunction: function (coordinates, geometry) {\n            this.nbpts = coordinates[0].length;\n            if (geometry) geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            else geometry = new OLPolygon(coordinates);\n            return geometry;\n          }\n        }),\n        // Options bar ssociated with the control\n        bar: new Bar({\n          controls: [new OlExtTextButton({\n            html: 'undo',//'<i class=\"fa fa-mail-reply\"></i>',\n            title: \"undo last point\",\n            handleClick: function () {\n              if (fedit.getInteraction().nbpts > 1) fedit.getInteraction().removeLastPoint();\n            }\n          }),\n            new OlExtTextButton({\n              html: 'finish',\n              title: \"finish\",\n              handleClick: function () {\n                // Prevent null objects on finishDrawing\n                if (fedit.getInteraction().nbpts > 3) fedit.getInteraction().finishDrawing();\n              }\n            })\n          ]\n        })\n      });\n      editbar.addControl(fedit);\n\n\n      // fedit.getInteraction().on('drawend', function (e) {\n      //\n      //   console.log(e.feature);\n      //   console.log(e.feature);\n      //\n      //   // GeoCodingAndDrawLayer.getSource().removeFeature(e.feature);\n      //\n      //\n      // });\n\n      fedit.getInteraction().on('drawstart', function () {\n        GeoCodingAndDrawLayer.getSource().once('addfeature', handleAddFeature);\n      });\n\n      function handleAddFeature(evt) {\n        let coordi = evt.feature.getGeometry().getCoordinates();\n\n        const area = getArea(evt.feature.getGeometry());\n        // Sq.Km\n        let outputArea = Math.round((area / 1000000) * 100) / 100;\n        console.log(outputArea);\n\n        let li = new LineString(coordi);\n        const length = getLength(li);\n        // In Km\n        let outputLength = Math.round((length / 1000) * 100) / 100;\n        console.log(outputLength);\n        // GeoCodingAndDrawLayer.getSource().removeFeature(evt.feature);\n      }\n\n// Show info\n      function info(i) {\n        console.log(i);\n        // document.querySelector(\"#info\").innerHTML(i || \"\");\n      }\n\n      function UpDateVectorLayerStyle() {\n        GeoCodingAndDrawLayer.getSource().forEachFeature(function (feature) {\n          let StyleObj = null;\n          if (feature.getProperties().osm_id) {\n            StyleObj = [\n              new Style({\n                stroke: new Stroke({\n                  color: [0, 0, 0, 0],\n                  opacity: 1,\n                  width: 3\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff00'\n                })\n                // Commented to only see the lines\n                //,fill: new ol.style.Stroke ({\n                //  color: [155, 155, 155, 0.4]\n                //})\n              }),\n              // Dash white lines (second style, on the top)\n              new Style({\n                image: new Icon({\n                  anchor: [0.5, 46],\n                  anchorXUnits: 'fraction',\n                  anchorYUnits: 'pixels',\n                  src: ImageIcon,\n                  size: toSize([40, 45]),\n                  // offset:[20,20]\n                }),\n                stroke: new Stroke({\n                  color: [0, 0, 255, 1.0],\n                  opacity: 1,\n                  width: 3,\n                  lineDash: [4, 8, 4, 8]\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff40'\n                })\n              })\n            ];\n\n          } else {\n            StyleObj = new Style({\n              image: new CircleStyle({\n                radius: 5,\n                stroke: new Stroke({\n                  color: [255, 0, 0, 1],\n                  opacity: 1,\n                  width: 2\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff50'\n                }),\n              }),\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              })\n              // Commented to only see the lines\n              //,fill: new ol.style.Stroke ({\n              //  color: [155, 155, 155, 0.4]\n              //})\n            });\n\n          }\n          feature.setStyle(StyleObj);\n\n        });\n      }\n\n      function removePreviousSearchFeature() {\n        var features = GeoCodingAndDrawLayer.getSource().getFeatures();\n        features.forEach(function (f) {\n          if (f.getProperties().osm_id) {\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          }\n        });\n        // console.log(features);\n      }\n\n      console.log(\"second\");\n      eventHub.$emit('runFeatureInteractionCode');\n    },\n    addPrintMapFunctionality() {\n      // Add a custom push button with onToggle function\n      // let that = this;\n      var PrintButton = new OlExtButton({\n        html: '<i class=\"fas fa-print\"></i>',\n        className: \"PrintMap\",\n        title: \"Print map\",\n        handleClick: () => {\n\n          // that.PrintMapComponentData.PrintMapDialogVisible = true;\n          // setTimeout(() => {\n          //   eventHub.$emit('OpenDialogOfPrintAndProxyfy');\n          // }, 500);\n\n        }\n      });\n\n      this.mapObject.addControl(PrintButton);\n    },\n    olExtLegentItem(title, id, legend) {\n      return {\n        id: id,\n        title: title,\n        typeGeom: 'Point',\n        style: new Style({\n          image: new Icon({\n            src: legend,\n            crossOrigin: 'anonymous' // Enable print\n          })\n        })\n      };\n\n    },\n    LayerSwitcherClick() {\n      this.drawer = true;\n    },\n    handleClose(done, e) {\n      console.log(e);\n\n      // this.$confirm('You still have unsaved data, proceed?')\n      //     .then(()=> {\n      //       done();\n      //     })\n      //     .catch(()=> {\n      //     });\n    },\n    olextPrintFunction() {\n      // Add a title control\n      this.mapObject.addControl(new CanvasTitle({\n        title: 'my title',\n        visible: false,\n        style: new Style({text: new Text({font: '20px \"Lucida Grande\",Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif'})})\n      }));\n      // let legendItems=[];\n\n\n      // Add a legend to the print\n      var legendCtrl = new LegendControl({legend: this.mapControlVariable.LegendObject,collapsed:true});\n      this.mapObject.addControl(legendCtrl);\n\n      // Add a ScaleLine control\n      this.mapObject.addControl(new CanvasScaleLine());\n\n      // Print control\n      var printControl = new PrintDialog({ lang: 'en' });\n      printControl.setSize('A4');\n      printControl.setOrientation('landscape');\n      this.mapObject.addControl(printControl);\n\n\n      /* On print > save image file */\n      printControl.on(['print', 'error'], (e) => {\n        // let LegendImageArray = this.legendObjectCollection();\n        // LegendImageArray.forEach(function (ii) {\n        //   console.log(ii);\n        //   legendd.addItem(ii);\n        // });\n        // // legendItems = LegendImageArray;\n        // console.log(LegendImageArray);\n\n        // Print success\n        if (e.image) {\n          if (e.pdf) {\n            // Export pdf using the print info\n            var pdf = new jsPDF({\n              orientation: e.print.orientation,\n              unit: e.print.unit,\n              format: e.print.size\n            });\n            pdf.addImage(e.image, 'JPEG', e.print.position[0], e.print.position[0], e.print.imageWidth, e.print.imageHeight);\n            pdf.save(e.print.legend ? 'legend.pdf' : 'map.pdf');\n          } else {\n            // Save image as file\n            e.canvas.toBlob(function (blob) {\n              var name = (e.print.legend ? 'legend.' : 'map.') + e.imageType.replace('image/', '');\n              saveAs(blob, name);\n            }, e.imageType, e.quality);\n          }\n        } else {\n          console.warn('No canvas to export');\n        }\n      });\n\n    },\n  },\n  computed: {\n    ...mapState([\"TimeSeriesLayerCollection\", \"PrintMapComponentData\", \"mapControlVariable\"]),\n    getInventory() {\n      return dataSelect.Inventory;\n    },\n  },\n\n  beforeMount() {\n  },\n  mounted() {\n    this.mapInitilization();\n    // this.addGeoCoding();\n    this.addGeoCodingAndInteractionBar();\n    // this.addPrintMapFunctionality();\n    this.olextPrintFunction();\n    //\n    // let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n    // let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n    //\n    // let AddRemoveLegendFunction = function () {\n    //\n    //   if (this.getProperties().visible) {\n    //     that.addLegend(this.getProperties().OLEXTLegendObject);\n    //   } else {\n    //     that.removeLegend(this.getProperties().OLEXTLegendObject);\n    //   }\n    // };\n    //\n    //\n    // let le1 = this.olExtLegentItem('Country Outline', 'Country_Outline', WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry')\n    //\n    // // this.drawer = false;\n    // let countryBoundary = new ImageLayer({\n    //   id: 'Country_Outline',\n    //   title: 'Country Outline',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry',\n    //   zIndex: 6,\n    //   OLEXTLegendObject: le1,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_country_boundry'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le2 = this.olExtLegentItem('Province','Province', WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary')\n    //\n    // let provinceBoundary = new ImageLayer({\n    //   id: 'Province',\n    //   title: 'Province',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary',\n    //   zIndex: 5,\n    //   OLEXTLegendObject: le2,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_provincial_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le3 = this.olExtLegentItem('District','District', WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary')\n    //\n    // let DistrictBoundary = new ImageLayer({\n    //   id: 'District',\n    //   title: 'District',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary',\n    //   zIndex: 4,\n    //   OLEXTLegendObject: le3,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_district_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le4 = this.olExtLegentItem('Palika', 'Palika',WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary')\n    //\n    // let PalikaBoundary = new ImageLayer({\n    //   id: 'Palika',\n    //   title: 'Palika',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary',\n    //   zIndex: 3,\n    //   OLEXTLegendObject: le4,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_palika_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let that = this;\n    // countryBoundary.on('change:visible', AddRemoveLegendFunction);\n    // provinceBoundary.on('change:visible', AddRemoveLegendFunction);\n    // DistrictBoundary.on('change:visible', AddRemoveLegendFunction);\n    // PalikaBoundary.on('change:visible', AddRemoveLegendFunction);\n    //\n    // this.mapObject.addLayer(countryBoundary);\n    // this.mapObject.addLayer(provinceBoundary);\n    // this.mapObject.addLayer(DistrictBoundary);\n    // this.mapObject.addLayer(PalikaBoundary);\n    //\n    // let l1 = new LayerSwitcher(\".layerCollection\", countryBoundary, false, false);\n    // let l2 = new LayerSwitcher(\".layerCollection\", provinceBoundary, false, false);\n    // let l3 = new LayerSwitcher(\".layerCollection\", DistrictBoundary, false, false);\n    // let l4 = new LayerSwitcher(\".layerCollection\", PalikaBoundary, false, false);\n    //\n    // l1.setVisible(true);\n    // l2.setVisible(true);\n    // l3.setVisible(true);\n    // l4.setVisible(true);\n    //\n    // this.appendTimeSeriesLayerCollection(l1);\n    // this.appendTimeSeriesLayerCollection(l2);\n    // this.appendTimeSeriesLayerCollection(l3);\n    // this.appendTimeSeriesLayerCollection(l4);\n  },\n}\n</script>\n\n<style>\n#map-container2 {\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n}\n\n#map-container2 .ol-viewport {\n  border-radius: 5px;\n}\n\n#layerSwitcherDiv {\n  right: 0.5em;\n  top: 0.5em;\n  position: absolute;\n}\n\n#layerSwitcherDiv button {\n  line-height: unset;\n  border-radius: 1px;\n}\n\n\n.drawerForLayersList {\n  position: initial !important;\n}\n\n/* OSM Based Geocoding*/\n.ol-search ul li {\n  border-bottom: 1px solid lightgray;\n\n  padding: 10px 5px 10px 5px !important;\n  flex: 1;\n  max-width: 608px;\n  white-space: normal !important;\n  overflow: unset;\n  flex-grow: 1;\n  text-overflow: ellipsis;\n}\n\n.ol-search ul li:last-child {\n  border-bottom: none;\n  border-radius: 0px;\n}\n\n.ol-search ul {\n  list-style: none;\n  cursor: pointer;\n  padding: 0px 5px 0px 5px !important;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  clear: both;\n  cursor: pointer;\n  max-width: 618px;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #fff;\n  font-size: 13px;\n}\n\n.ol-search {\n  z-index: 999;\n}\n\n.ol-search {\n  top: 4.1em;\n  left: 0.5em;\n  /*width: 500px;*/\n}\n\n.ol-search input {\n  width: 600px;\n}\n\n\n.ol-control.ol-bar {\n  left: 3.2em;\n  top: 6em;\n}\n\n.ol-control.ol-bar.ol-top.ol-left, .ol-control.ol-bar.ol-top.ol-right {\n  top: 6.5em;\n  transform: none;\n}\n\n.PrintMap.ol-button.ol-unselectable.ol-control {\n  top: 12em;\n  left: 0.5em;\n}\n\n.LayerDiv {\n  margin-top: 10px;\n}\n\n.withOpacityChange {\n  margin-bottom: 18px;\n}\n\n.ol-scale-line {\n  right: 0;\n  left: auto;\n  bottom: 2em;\n}\n</style>","import Style from \"ol/style/Style\";\nimport RegularShape from \"ol/style/RegularShape\";\nimport Fill from \"ol/style/Fill\";\nimport Stroke from \"ol/style/Stroke\";\nimport Text from \"ol/style/Text\";\nimport {TethysAppName, DefaultMaskWMS, DefaultPlotInfo, TethysAPIAppName} from \"../config\";\n\n\nvar myApp = {};\n// First need to initilize\nvar filterCoodrdinate = {};\n\n\nmyApp.startDate = new Date();\nmyApp.startDate.setDate(myApp.startDate.getDate() - 1);\nmyApp.endDate = new Date();\n\nmyApp.startDateArchive = new Date();\nmyApp.startDateArchive.setDate(myApp.startDateArchive.getDate() - 1);\nmyApp.endDateArchive = new Date();\n\nmyApp.forecastDate = new Date();\nmyApp.forecastDate.setDate(myApp.forecastDate.getDate() - 1);\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\n\n\nmyApp.APICollection = {\n    layerData: {\n        Aeronet: '/apps/' + TethysAPIAppName + '/aeronetaodpm/',\n        USEmbassyAOD: '/apps/' + TethysAPIAppName + '/usembassypm/',\n        getGeoJSONofStations: '/apps/' + TethysAPIAppName + '/getGeoJSONofStations/',\n        getGeoJsonForOneSatation: '/apps/' + TethysAPIAppName + '/getGeoJsonForOneSatation/',\n        getAllStationsID: '/apps/' + TethysAPIAppName + '/getAllStationsID/',\n    },\n    api: {\n        commonAPI: '/apps/' + TethysAPIAppName + '/getData/',\n        RegionGeojson: '/apps/' + TethysAPIAppName + '/geojsonregion/',\n        AOIPolygon: '/apps/' + TethysAPIAppName + '/aoipolygon/',\n        GetMapImage: '/apps/' + TethysAPIAppName + '/getmapimage/',\n        GetImage: '/apps/' + TethysAPIAppName + '/downloadImage/',\n        SlicedFromCatalog: '/apps/' + TethysAPIAppName + '/slicedfromcatalog/'\n    }\n};\n\n\nmyApp.constants = {\n    recent: {\n        layerId: {\n            TerraModisTrueColor: 'Recent__TerraModisTrueColor',\n            PM_AeronetAOD: 'Recent__aeronet',\n            PM_usembassy: 'Recent__usembassy',\n            GEOS_PM2p5: 'Recent__GEOS_PM2p5',\n            TerraModisAOD: 'Recent__TerraModisAOD',\n            O3_GEOS: 'Recent__GEOS_O3',\n            O3_usembassy: 'Recent__usembassy_O3',\n            SO2_GEOS: 'Recent__GEOS_SO2',\n            NO2_GEOS: 'Recent__GEOS_NO2',\n            CO_GEOS: 'Recent__GEOS_CO',\n        }\n    },\n    archive: {\n        layerId: {\n            TerraModisTrueColor: 'Archive__TerraModisTrueColor',\n            GEOS_PM2p5: 'Archive__GEOS_PM2p5',\n            TerraModisAOD: 'Archive__TerraModisAOD',\n            PM_AeronetAOD: 'Archive__aeronet',\n            PM_usembassy: 'Archive__usembassy',\n            O3_usembassy: 'Archive__usembassy_O3',\n            O3_TROPOMI: 'Archive__TROPOMI_O3',\n            O3_GEOS: 'Archive__GEOS_O3',\n            SO2_TROPOMI: 'Archive__TROPOMI_SO2',\n            SO2_GEOS: 'Archive__GEOS_SO2',\n            NO2_TROPOMI: 'Archive__TROPOMI_NO2',\n            NO2_GEOS: 'Archive__GEOS_NO2',\n            CO_TROPOMI: 'Archive__TROPOMI_CO',\n            CO_GEOS: 'Archive__GEOS_CO',\n        }\n    },\n    forecast: {\n        layerId: {\n            GEOS_PM2p5: 'Forecast__GEOS_PM2p5',\n            O3_GEOS: 'Forecast__GEOS_O3',\n            SO2_GEOS: 'Forecast__GEOS_SO2',\n            NO2_GEOS: 'Forecast__GEOS_NO2',\n            CO_GEOS: 'Forecast__GEOS_CO'\n        }\n    }\n};\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\nmyApp.AllBindedLayersList = [];\nmyApp.OnlyOnce = true;\n\nmyApp.getLayer = function (id) {\n    // console.log(id)\n    var layer;\n    for (let i = 0; i < myApp.AllBindedLayersList.length; i++) {\n        // console.log(myApp.AllBindedLayersList[i].getProperties().id);\n        if (id == myApp.AllBindedLayersList[i].getProperties().id) { ///popDensityLayer.getProperties().id\n            layer = myApp.AllBindedLayersList[i].getLayer();\n            break;\n        }\n    }\n    return layer;\n};\n\nmyApp.AeronetAODStyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let AeronetStyle = null;\n    AeronetStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#D5212E'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 3,\n            radius: 10,\n            rotation: 0,\n            angle: 0\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return AeronetStyle;\n};\nmyApp.USEmbassyPM25StyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let USEmbassyAODStyle = null;\n    USEmbassyAODStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#CBCB59'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 4,\n            radius: 10,\n            angle: Math.PI / 4\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return USEmbassyAODStyle;\n};\nmyApp.USEmbassyO3StyleFun = function (feature, resolution) {\n    let name = feature.get('name');\n    if (resolution > 2445.98490512564) {\n        name = ''\n    }\n    let USEmbassyAODStyle = null;\n    USEmbassyAODStyle = new Style({\n        image: new RegularShape({\n            fill: new Fill({color: '#CBCB59'}),\n            stroke: new Stroke({color: 'black', width: 1}),\n            points: 4,\n            radius: 10,\n            angle: Math.PI / 4\n        }),\n        text: new Text({\n            font: \"normal 12px Arial\",\n            text: name,\n            fill: new Fill({color: '#aa3300'}),\n            stroke: new Stroke({color: '#ffffff', width: 3}),\n            offsetX: 0,\n            offsetY: 15,\n        })\n    });\n    return USEmbassyAODStyle;\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\n\nmyApp.LayerCollectionObjet = {\n    Recent: {\n        data: [\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/TerraMODIS-TrueColor1km/catalog.xml',\n                useSLD: true,\n                isTimeDimensionLayer: true,\n                SLD: `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"\n                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"\n                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:resc=\"http://www.resc.reading.ac.uk\">\n    <NamedLayer>\n     <se:Name>red</se:Name>\n        <UserStyle>\n            <se:Name>Thesholded colour scheme</se:Name>\n            <se:CoverageStyle>\n                <se:Rule>\n                    <resc:RasterRGBSymbolizer>\n                        <se:Opacity>1.0</se:Opacity>\n                        <se:ColorMap>\n                            <resc:RedBand>\n                                <resc:BandName>red</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:RedBand>\n                            <resc:GreenBand>\n                                <resc:BandName>green</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:GreenBand>\n                            <resc:BlueBand>\n                                <resc:BandName>blue</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>1</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                    <resc:Spacing>linear</resc:Spacing>\n                                </resc:Range>\n                            </resc:BlueBand>\n                        </se:ColorMap>\n                    </resc:RasterRGBSymbolizer>\n                </se:Rule>\n            </se:CoverageStyle>\n        </UserStyle>\n    </NamedLayer>\n</StyledLayerDescriptor>\n`,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.recent.layerId.TerraModisTrueColor,\n                    title: 'TerraModis-TrueColor (' + myApp.formatDate(myApp.startDate) + ')',\n                    visible: true,\n                    opacity: 0.5,\n                    legendPath: '/static/' + TethysAppName + '/images/rgbLegend.png',\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: false,\n                    zIndex: 10,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'red',\n                            'transparent': true\n                        }\n                    },\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                }\n            },\n        ]\n    },\n    Archive: {\n        data: [\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/TerraMODIS-TrueColor1km/catalog.xml',\n                useSLD: true,\n                isTimeDimensionLayer: true,\n                SLD: `<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"\n                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"\n                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:resc=\"http://www.resc.reading.ac.uk\">\n    <NamedLayer>\n     <se:Name>red</se:Name>\n        <UserStyle>\n            <se:Name>Thesholded colour scheme</se:Name>\n            <se:CoverageStyle>\n                <se:Rule>\n                    <resc:RasterRGBSymbolizer>\n                        <se:Opacity>1.0</se:Opacity>\n                        <se:ColorMap>\n                            <resc:RedBand>\n                                <resc:BandName>red</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:RedBand>\n                            <resc:GreenBand>\n                                <resc:BandName>green</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>0</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                </resc:Range>\n                            </resc:GreenBand>\n                            <resc:BlueBand>\n                                <resc:BandName>blue</resc:BandName>\n                                <resc:Range>\n                                    <resc:Minimum>1</resc:Minimum>\n                                    <resc:Maximum>255</resc:Maximum>\n                                    <resc:Spacing>linear</resc:Spacing>\n                                </resc:Range>\n                            </resc:BlueBand>\n                        </se:ColorMap>\n                    </resc:RasterRGBSymbolizer>\n                </se:Rule>\n            </se:CoverageStyle>\n        </UserStyle>\n    </NamedLayer>\n</StyledLayerDescriptor>\n`,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: true,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.TerraModisTrueColor,\n                    title: 'TerraModis-TrueColor',\n                    visible: true,\n                    opacity: 0.5,\n                    legendPath: '/static/' + TethysAppName + '/images/rgbLegend.png',\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    zIndex: 10,\n                    filterCoodrdinate: filterCoodrdinate,\n                    RGBComposite: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'red',\n                            'transparent': true\n                        }\n                    },\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/PM/GEOS-PM2p5/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.GEOS_PM2p5,\n                    title: 'GEOS PM2.5',\n                    visible: false,\n                    opacity: 0.5,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'PM2p5',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,100\",\n                            'transparent': true\n                        }\n                    },\n                    unit: 'µg/m<sup>3<sup>',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 11,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'GEOS $PM_{2.5}$(µg/$m^{3}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {title: 'GEOS', unit: 'PM<sub>2.5</sub>(µg/m<sup>3</sup>)', SeriesName: \"value\"},\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/PM/TerraModis-AOD/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.TerraModisAOD,\n                    title: 'TerraModis-AOD',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'aod_550',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0.01,1',\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 12,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TerraModis-AOD',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {title: 'TerraModis-AOD', unit: \"AOD\", SeriesName: \"value\"},\n                }\n            }\n\n\n            , {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/O3/TROPOMI-O3/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.O3_TROPOMI,\n                    title: 'TROPOMI O3',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'O3',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,1',\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 13,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI $O_{3}$($10^{19}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"O<sub>3</sub> (10<sup>19</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/O3/GEOS-O3/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.O3_GEOS,\n                    title: 'GEOS O3',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'O3',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,80',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 14,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $O_{3}$(ppb)', TimeZone: ' UTC'})\n                    }, chartDetail: {title: 'GEOS', unit: \" O<sub>3</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            },\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/TROPOMI-SO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.SO2_TROPOMI,\n                    title: 'TROPOMI SO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'SO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,1',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'molecules / sq.cm',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 15,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"SO<sub>2</sub> (10<sup>17</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/SO2/GEOS-SO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.SO2_GEOS,\n                    title: 'GEOS SO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'SO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,10',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 16,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $SO_{2}$(ppb)', TimeZone: ' UTC'})\n                    }, chartDetail: {title: 'GEOS', unit: \"SO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            },\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/TROPOMI-NO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate)\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate)\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.NO2_TROPOMI,\n                    title: 'TROPOMI NO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'NO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,10',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'molecules / sq.cm',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 17,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    },\n                    chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"NO<sub>2</sub> (10<sup>15</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/NO2/GEOS-NO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate);\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate);\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.NO2_GEOS,\n                    title: 'GEOS NO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'NO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,10',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 18,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $NO_{2}$(ppb)', TimeZone: ' UTC'})\n                    }, chartDetail: {title: 'GEOS', unit: \"NO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            },\n\n            {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/TROPOMI-CO/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate);\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate);\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.CO_TROPOMI,\n                    title: 'TROPOMI CO',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'CO',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '1,4',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'molecules / sq.cm',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 19,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {\n                            title: 'TROPOMI CO($10^{18}$ molecules/$cm^{2}$)',\n                            TimeZone: ' UTC'\n                        })\n                    }, chartDetail: {\n                        title: 'TROPOMI',\n                        unit: \"CO (10<sup>18</sup> molecules/cm<sup>2</sup>)\",\n                        SeriesName: \"value\"\n                    },\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/RecentAndArchive/CO/GEOS-CO/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                getStartDate: function () {\n                    return myApp.formatDate(myApp.startDate);\n                },\n                getEndDate: function () {\n                    return myApp.formatDate(myApp.endDate);\n                },\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.archive.layerId.CO_GEOS,\n                    title: 'GEOS CO',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'CO',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': '0,500',\n                            'transparent': true\n                        }\n                    },\n                    unit: 'ppb',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 20,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS CO(ppb)'})\n                    }, chartDetail: {title: 'GEOS', unit: \"CO (ppb)\", SeriesName: \"value\"},\n                }\n            },]\n    },\n    Forecast: {\n        data: [\n            {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/PM/GEOS-PM2p5/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.GEOS_PM2p5,\n                    title: 'GEOS PM2.5',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'PM2p5',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,100\",\n                            'transparent': true\n                        }\n                    },\n                    unit: 'µg/m<sup>3<sup>',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 20,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $PM_{2.5}$(µg/$m^{3}$)', TimeZone: ' UTC'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: 'PM<sub>2.5</sub>(µg/m<sup>3</sup>)', SeriesName: \"value\"},\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/CO/GEOS-CO/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.CO_GEOS,\n                    title: 'GEOS CO',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'CO',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,500\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 21,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS CO(ppb)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \"CO (ppb)\", SeriesName: \"value\"},\n\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/NO2/GEOS-NO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.NO2_GEOS,\n                    title: 'GEOS NO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'NO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,10\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 22,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \"NO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/O3/GEOS-O3/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.O3_GEOS,\n                    title: 'GEOS O3',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'O3',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,80\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 23,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'GEOS $O_{3}$(ppb)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \" O<sub>3</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            }, {\n                catalog: 'catalog/HKHAirQualityWatch/Forecast/SO2/GEOS-SO2/catalog.xml',\n                useSLD: false,\n                isTimeDimensionLayer: true,\n                VisibleDivBind: false,\n                threddLayerProp: {\n                    id: myApp.constants.forecast.layerId.SO2_GEOS,\n                    title: 'GEOS SO2',\n                    visible: false,\n                    opacity: 0.6,\n                    ThreddsDataServerVersion: 5,\n                    serverType: 'TDS',\n                    timeSeries: false,\n                    alignTimeSlider: 'left',\n                    timeSliderSize: 'small',\n                    showlegend: false,\n                    showControlPanel: true,\n                    source: {\n                        url: [],\n                        params: {\n                            'LAYERS': 'SO2',\n                            'STYLES': 'default-scalar/x-Rainbow',\n                            'COLORSCALERANGE': \"0,10\",\n                            'transparent': true\n                        }\n                    },\n                    unit: '',\n                    mask: DefaultMaskWMS,\n                    CropOrMask: 'crop',\n                    changeWMSProxy: true,\n                    filterCoodrdinate: filterCoodrdinate,\n                    aoi: true,\n                    zIndex: 24,\n                    api: {\n                        createGIF: myApp.APICollection.api.CreateGIFImage,\n                        GetImage: myApp.APICollection.api.GetImage,\n                        TimeZone: ' UTC'\n                    },\n                    plotInfo: function () {\n                        return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)'})\n                    },\n                    chartDetail: {title: 'GEOS', unit: \"SO<sub>2</sub> (ppb)\", SeriesName: \"value\"},\n                }\n            }\n        ]\n    }\n};\n\nmyApp.DefaultSations = {\n    aeronetAOD: [9, 14, 9, 14],\n    pm2p5Embassy: [6, 7, 6, 7],\n    o3Embassy: [6, 7, 6, 7]\n}\n\nmyApp.cascaderObject = {\n    Recent: {\n        data: [\n            {\n                label: 'PM',\n                value: 1,\n                children: [\n                    {\n                        label: 'Surface Observation-AOD (AERONET)',\n                        value: 11,\n                        layerId: myApp.constants.recent.layerId.PM_AeronetAOD,\n                        otherval: \"test\",\n                        stationData: true,\n                        styleFunction: myApp.AeronetAODStyleFun,\n                        NotificationWhenAdded: \"Please Select AERONET AOD Station on map\",\n                        ModelClass: 'AeronetAod',\n                        ModelClassDataList: 'AeronetDataList',\n                        typeName: 'aod',\n                        defaultStation: myApp.DefaultSations.aeronetAOD,\n                        chart: {\n                            title: function (stationName, sd) {\n                                return 'AERONET AOD at ' + stationName + ' (' + sd + ')';\n                            },\n                            subTitle: 'AERONET level 1.5 data measured at 500nm',\n                            SeriesName: 'SeriesName',\n                            YaxisLabel: 'AOD (500nm)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            },\n                            plotType: 'point'\n                        }\n                    },\n                    {\n                        label: 'Ground Observation-PM2.5',\n                        layerId: myApp.constants.recent.layerId.PM_usembassy,\n                        value: 12,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyPM25StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy 2.5 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'pm',\n                        defaultStation: myApp.DefaultSations.pm2p5Embassy,\n                        chart: {\n                            title: function (stationName, sd) {\n                                return stationName + ' (' + sd + ')'\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'PM2.5',\n                            YaxisLabel: 'PM<sub>2.5</sub>(μg/m<sup>3</sup>)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                ]\n            }, {\n                label: 'O3',\n                value: 2,\n                children: [\n                    {\n                        label: 'Surface Observation-O3',\n                        layerId: myApp.constants.recent.layerId.O3_usembassy,\n                        value: 23,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyO3StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy O3 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'O3',\n                        defaultStation: myApp.DefaultSations.o3Embassy,\n                        chart: {\n                            title: function (stationName, sd) {\n                                return stationName + ' (' + sd + ')'\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'O3',\n                            YaxisLabel: 'O<sub>3</sub>(ppb)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                ]\n            }]\n    },\n    Archive: {\n        data: [\n            {\n                label: 'PM',\n                value: 1,\n                children: [\n                    {\n                        label: 'Surface Observation-AOD (AERONET)',\n                        value: 11,\n                        layerId: myApp.constants.archive.layerId.PM_AeronetAOD,\n                        stationData: true,\n                        styleFunction: myApp.AeronetAODStyleFun,\n                        NotificationWhenAdded: \"Please Select AERONET AOD Station on map\",\n                        ModelClass: 'AeronetAod',\n                        ModelClassDataList: 'AeronetDataList',\n                        typeName: 'aod',\n                        defaultStation: myApp.DefaultSations.aeronetAOD,\n                        chart: {\n                            title: function (stationName, sd, ed) {\n                                return `${stationName} (${sd} - ${ed})`\n                            },\n                            subTitle: 'AERONET level 1.5 data measured at 500nm',\n                            SeriesName: 'SeriesName',\n                            YaxisLabel: 'AOD',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            },\n                            plotType: 'point'\n                        }\n                    },\n                    {\n                        label: 'Ground Observation-PM2.5',\n                        layerId: myApp.constants.archive.layerId.PM_usembassy,\n                        value: 12,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyPM25StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy 2.5 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'pm',\n                        defaultStation: myApp.DefaultSations.pm2p5Embassy,\n                        chart: {\n                            title: function (stationName, sd, ed) {\n                                return `${stationName} (${sd} - ${ed})`\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'PM2.5',\n                            YaxisLabel: 'PM<sub>2.5</sub>(μg/m<sup>3</sup>)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                    {\n                        label: 'Model-PM2.5 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.GEOS_PM2p5,\n                        value: 13,\n                    },\n                    {\n                        label: 'Satellite-AOD (Terra-MODIS)',\n                        layerId: myApp.constants.archive.layerId.TerraModisAOD,\n                        value: 14,\n                    }\n                ]\n            }, {\n                label: 'O3',\n                value: 2,\n                children: [\n                    // {\n                    //     label: 'Satellite-O3 (TROPOMI)',\n                    //     layerId: myApp.constants.archive.layerId.O3_TROPOMI,\n                    //     value: 21,\n                    // },\n                    {\n                        label: 'Model-O3 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.O3_GEOS,\n                        value: 22,\n                    }, {\n                        label: 'Surface Observation-O3',\n                        layerId: myApp.constants.archive.layerId.O3_usembassy,\n                        value: 23,\n                        stationData: true,\n                        styleFunction: myApp.USEmbassyO3StyleFun,\n                        NotificationWhenAdded: \"Please Select US Embassy O3 Station on map\",\n                        ModelClass: 'UsEmbassyPm',\n                        ModelClassDataList: 'UsEmbassyDataList',\n                        typeName: 'O3',\n                        defaultStation: myApp.DefaultSations.o3Embassy,\n                        chart: {\n                            title: function (stationName, sd, ed) {\n                                return `${stationName} (${sd} - ${ed})`\n                            },\n                            subTitle: 'source: AirNow',\n                            SeriesName: 'O3',\n                            YaxisLabel: 'O<sub>3</sub>(ppb)',\n                            XaxisLabel: function () {\n                                return 'Time (UTC)'\n                            }\n                        }\n                    },\n                ]\n            },\n            {\n                label: 'SO2',\n                value: 3,\n                children: [\n                    {\n                        label: 'Satellite-SO2 (TROPOMI)',\n                        layerId: myApp.constants.archive.layerId.SO2_TROPOMI,\n                        value: 31,\n                    },\n                    {\n                        label: 'Model-SO2 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.SO2_GEOS,\n                        value: 32,\n                    }\n                ]\n            },\n            {\n                label: 'NO2',\n                value: 4,\n                children: [\n                    {\n                        label: 'Satellite-NO2 (TROPOMI)',\n                        layerId: myApp.constants.archive.layerId.NO2_TROPOMI,\n                        value: 41,\n                    },\n                    {\n                        label: 'Model-NO2 (GEOS)',\n                        layerId: myApp.constants.archive.layerId.NO2_GEOS,\n                        value: 42,\n                    }\n                ]\n            },\n            {\n                label: 'CO',\n                value: 5,\n                children: [\n                    {\n                        label: 'Satellite-CO (TROPOMI)',\n                        layerId: myApp.constants.archive.layerId.CO_TROPOMI,\n                        value: 51,\n                    },\n                    {\n                        label: 'Model-CO (GEOS)',\n                        layerId: myApp.constants.archive.layerId.CO_GEOS,\n                        value: 52,\n                    }\n                ]\n            }]\n    },\n    Forecast: {\n        data: [\n            {\n                label: 'PM',\n                value: 1,\n                children: [\n                    {\n                        label: 'Model-PM2.5 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.GEOS_PM2p5,\n                        value: 13,\n                    }\n                ]\n            }, {\n                label: 'O3',\n                value: 2,\n                children: [\n                    {\n                        label: 'Model-O3 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.O3_GEOS,\n                        value: 22,\n                    }\n                ]\n            },\n            {\n                label: 'SO2',\n                value: 3,\n                children: [\n                    {\n                        label: 'Model-SO2 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.SO2_GEOS,\n                        value: 32,\n                    }\n                ]\n            },\n            {\n                label: 'NO2',\n                value: 4,\n                children: [\n                    {\n                        label: 'Model-NO2 (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.NO2_GEOS,\n                        value: 42,\n                    }\n                ]\n            },\n            {\n                label: 'CO',\n                value: 5,\n                children: [\n                    {\n                        label: 'Model-CO (GEOS)',\n                        layerId: myApp.constants.forecast.layerId.CO_GEOS,\n                        value: 52,\n                    }\n                ]\n            }]\n    }\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\n\nmyApp.makeRequest = function (method, url) {\n    return new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(method, url);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                resolve(xhr.response);\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n};\n\n\nmyApp.getForecastWMSList = async function (url) {\n    let result = await myApp.makeRequest(\"GET\", url);\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(result, \"text/xml\");\n    let wmsList = [];\n    let interestedDate = myApp.formatDate(myApp.forecastDate).replace(/-/g, '');\n    let DimensionTag = xmlDoc.getElementsByTagName(\"catalogRef\");\n    let DateHavingCatalog = null;\n    for (let kk of DimensionTag) {\n        if (interestedDate == kk.getAttribute('xlink:title')) {\n            DateHavingCatalog = url.replace('catalog.xml', kk.getAttribute('xlink:href'));\n            break;\n        }\n    }\n    if (DateHavingCatalog) {\n        let result1 = await this.makeRequest(\"GET\", DateHavingCatalog);\n        let parser1 = new DOMParser();\n        let xmlDoc1 = parser1.parseFromString(result1, \"text/xml\");\n        let dataset = xmlDoc1.getElementsByTagName(\"dataset\");\n        for (let jj of dataset) {\n            let name = jj.getAttribute('name');\n            if (name.slice(-3) == '.nc') {\n                wmsList.push(DateHavingCatalog.replace('/catalog/', '/wms/').replace('catalog.xml', name));\n            }\n        }\n    }\n    return wmsList.sort()\n};\n\nmyApp.datetimePointChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n            chart: {\n                marginLeft: 65,\n                /* marginRight: 0, */\n                /* spacingLeft: 0, */\n                /* spacingRight: 0 */\n                backgroundColor: 'transparent',\n                plotBorderColor: '#afafaf',\n                plotBorderWidth: 1,\n            },\n            title: {\n                text: title,\n                fontSize: '10px',\n                useHTML: true\n            },\n            subtitle: {\n                text: subTitle,\n                fontSize: '8px'\n            },\n            series: [{\n                name: SeriesName,\n                data: SeriesData,\n                lineWidth: 0,\n                marker: {\n                    enabled: true,\n                    symbol: 'diamond',\n                    radius: 2\n                },\n            }],\n            xAxis: {\n                type: 'datetime',\n                title: {\n                    text: XaxisLabel,\n                    align: 'high',\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0\n            },\n            yAxis: {\n                title: {\n                    text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                    useHTML: true,\n                    rotation: 0,\n                    // align: 'high',\n                    offset: 0,\n                    x: -50\n                },\n                tickLength: 0,\n                lineColor: 0,\n                lineWidth: 0,\n                gridLineWidth: 0\n            },\n            legend: {\n                enabled: false\n            },\n            credits: {\n                enabled: false\n            },\n            plotOptions: {\n                series: {\n                    color: plotColor\n                }\n            },\n            lang: {\n                noData: DataPeriod + 'data not available for this station.'\n            },\n            exporting: {\n                buttons: {\n                    contextButton: {\n                        menuItems: [\"printChart\",\n                            \"separator\",\n                            \"downloadPNG\",\n                            \"downloadJPEG\",\n                            \"downloadPDF\",\n                            \"downloadSVG\",\n                            \"separator\",\n                            \"downloadCSV\",\n                            \"downloadXLS\",\n                            //\"viewData\",\n                            \"openInCloud\"]\n                    }\n                },\n                // chartOptions: {\n                //     title: {\n                //         text: title,\n                //         fontSize: '10px',\n                //         useHTML: true\n                //     }, yAxis: {\n                //         title: {\n                //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                //             useHTML: true,\n                //             rotation: 250\n                //         }\n                //     },\n                // },\n                allowHTML: true,\n                // fallbackToExportServer: false,\n                // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n            }\n        }\n    ;\n    return data\n};\n\nmyApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n    let data = {\n        chart: {\n            marginLeft: 65,\n            /* marginRight: 0, */\n            /* spacingLeft: 0, */\n            /* spacingRight: 0 */\n            backgroundColor: 'transparent',\n            plotBorderColor: '#afafaf',\n            plotBorderWidth: 1,\n        },\n        title: {\n            text: title,\n            fontSize: '10px',\n            useHTML: true\n        },\n        subtitle: {\n            text: subTitle,\n            fontSize: '8px'\n        },\n        series: [{\n            name: SeriesName,\n            data: SeriesData,\n            // marker: {\n            //     enabled: true,\n            //     symbol: 'diamond',\n            //     radius: 3\n            // },\n        }],\n        xAxis: {\n            type: 'datetime',\n            title: {\n                text: XaxisLabel,\n                align: 'high',\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0\n        },\n        lang: {\n            noData: DataPeriod + 'data not available for this station.'\n        },\n        yAxis: {\n            title: {\n                text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                useHTML: true,\n                rotation: 0,\n                // align: 'high',\n                offset: 0,\n                x: -50\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0,\n            gridLineWidth: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                color: plotColor\n            }\n        },\n        exporting: {\n            buttons: {\n                contextButton: {\n                    menuItems: [\"printChart\",\n                        \"separator\",\n                        \"downloadPNG\",\n                        \"downloadJPEG\",\n                        \"downloadPDF\",\n                        \"downloadSVG\",\n                        \"separator\",\n                        \"downloadCSV\",\n                        \"downloadXLS\",\n                        //\"viewData\",\n                        \"openInCloud\"]\n                }\n            },\n            // chartOptions: {\n            //     title: {\n            //         text: title,\n            //         fontSize: '10px',\n            //         useHTML: true\n            //     }, yAxis: {\n            //         title: {\n            //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n            //             useHTML: true,\n            //             rotation: 250\n            //         }\n            //     },\n            // },\n            allowHTML: true,\n            // fallbackToExportServer: false,\n            // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n        }\n    };\n    return data\n};\n\nmyApp.forceDownload = function (url, fileName) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        var urlCreator = window.URL || window.webkitURL;\n        var imageUrl = urlCreator.createObjectURL(this.response);\n        var tag = document.createElement('a');\n        tag.href = imageUrl;\n        tag.download = fileName;\n        document.body.appendChild(tag);\n        tag.click();\n        document.body.removeChild(tag);\n    }\n    xhr.send();\n}\n\n// myApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor) {\n//     let data = {\n//             chart: {\n//                 marginLeft: 65,\n//                 /* marginRight: 0, */\n//                 /* spacingLeft: 0, */\n//                 /* spacingRight: 0 */\n//                 backgroundColor: 'transparent',\n//                 plotBorderColor: '#afafaf',\n//                 plotBorderWidth: 1,\n//             },\n//             title: {\n//                 text: title,\n//                 fontSize: '10px',\n//                 useHTML: true\n//             },\n//             subtitle: {\n//                 text: subTitle,\n//                 fontSize: '8px'\n//             },\n//             series: [{\n//                 name: SeriesName,\n//                 data: SeriesData,\n//                 // marker: {\n//                 //     enabled: true,\n//                 //     symbol: 'diamond',\n//                 //     radius: 3\n//                 // },\n//             }],\n//             xAxis: {\n//                 type: 'datetime',\n//                 title: {\n//                     text: XaxisLabel,\n//                     align: 'high',\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0\n//             },\n//             yAxis: {\n//                 title: {\n//                     text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                     useHTML: true,\n//                     rotation: 0,\n//                     // align: 'high',\n//                     offset: 0,\n//                     x: -50\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0,\n//                 gridLineWidth: 0\n//             },\n//             legend: {\n//                 enabled: false\n//             },\n//             credits: {\n//                 enabled: false\n//             },\n//             plotOptions: {\n//                 series: {\n//                     color: plotColor\n//                 }\n//             },\n//             exporting: {\n//                 buttons: {\n//                     contextButton: {\n//                         menuItems: [\"printChart\",\n//                             \"separator\",\n//                             \"downloadPNG\",\n//                             \"downloadJPEG\",\n//                             \"downloadPDF\",\n//                             \"downloadSVG\",\n//                             \"separator\",\n//                             \"downloadCSV\",\n//                             \"downloadXLS\",\n//                             //\"viewData\",\n//                             \"openInCloud\"]\n//                     }\n//                 },\n//                 // chartOptions: {\n//                 //     title: {\n//                 //         text: title,\n//                 //         fontSize: '10px',\n//                 //         useHTML: true\n//                 //     }, yAxis: {\n//                 //         title: {\n//                 //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                 //             useHTML: true,\n//                 //             rotation: 250\n//                 //         }\n//                 //     },\n//                 // },\n//                 allowHTML: true,\n//                 // fallbackToExportServer: false,\n//                 // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n//             }\n//         }\n//     ;\n//     console.log(JSON.stringify(data));\n//     return data\n// };\n\nexport var AirPollutionWatchApp = myApp;","import { render } from \"./mapComponentArchive.vue?vue&type=template&id=27dbe1b4\"\nimport script from \"./mapComponentArchive.vue?vue&type=script&lang=js\"\nexport * from \"./mapComponentArchive.vue?vue&type=script&lang=js\"\n\nimport \"./mapComponentArchive.vue?vue&type=style&index=0&id=27dbe1b4&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TabBodyArchive.vue?vue&type=template&id=15169806&scoped=true\"\nimport script from \"./TabBodyArchive.vue?vue&type=script&lang=js\"\nexport * from \"./TabBodyArchive.vue?vue&type=script&lang=js\"\n\nimport \"./TabBodyArchive.vue?vue&type=style&index=0&id=15169806&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-15169806\"]])\n\nexport default __exports__","<template>\n  <div class=\"full-height\">\n    <el-row class=\"first-row\">\n      <el-col :span=\"6\" class=\"full-height full-width padding-left-10 padding-bottom-5 padding-top-10 padding-right-5\">\n        <mapControlsForecast></mapControlsForecast>\n      </el-col>\n      <el-col :span=\"12\" class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-5\">\n        <mapComponentForecast></mapComponentForecast>\n      </el-col>\n      <el-col :span=\"6\" class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-10\">\n        <LayerSwitcherControl></LayerSwitcherControl>\n      </el-col>\n    </el-row>\n    <el-row class=\"second-row padding-left-5 padding-right-5\">\n      <el-col :span=\"6\"\n              class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n        <chartComponentForecast :IndexValue=\"1\"></chartComponentForecast>\n      </el-col>\n      <el-col :span=\"6\"\n              class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n        <chartComponentForecast :IndexValue=\"2\"></chartComponentForecast>\n      </el-col>\n      <el-col :span=\"6\"\n              class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n        <chartComponentForecast :IndexValue=\"3\"></chartComponentForecast>\n      </el-col>\n      <el-col :span=\"6\"\n              class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n        <chartComponentForecast :IndexValue=\"4\"></chartComponentForecast>\n      </el-col>\n\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport LayerSwitcherControl from './LayerSwitcherControl';\n\n// import about from \"./about\";\nimport chartComponentForecast from \"./chartComponentForecast\";\nimport mapControlsForecast from \"./mapControlsForecast\";\nimport mapComponentForecast from \"./mapComponentForecast\";\n// import {mapActions} from \"vuex\";\n\nexport default {\n  name: \"emissionTabBody\",\n  components: {\n    LayerSwitcherControl,\n    chartComponentForecast,\n    mapControlsForecast,\n    mapComponentForecast,\n  },\n  methods: {\n    // ...mapActions([\"getCascaderOptions\"]),\n  },\n  async mounted() {\n    // let data = await this.getCascaderOptions();\n    // console.log(data);\n  }\n}\n</script>\n\n<style scoped>\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n.full-height {\n  height: 100%;\n}\n\n.second-row div {\n  /*height: calc(100% - 12.5px);*/\n}\n</style>\n","<template>\n  <div class=\"card-box full-height full-width about-div\" ref=\"outerViz\">\n    <div v-if=\"visualizationIn =='chart'\" class=\"chart-div\" :id=\"'chart'+IndexValue\" ref=\"ChartDiv\">\n      <div class=\"flex-center-vertically\">\n        <!--        Please select a layer and draw a feature to view the chart-->\n        <el-skeleton :rows=\"5\" animated/>\n      </div>\n    </div>\n\n    <div v-if=\"visualizationIn =='2Dimage'\" class=\"position-relative  full-width full-height\" ref=\"Image2D\">\n      <div class=\"download-map-Image\" @click=\"downloadImage()\">\n        <i class=\"fas fa-download\"></i>\n      </div>\n      <div class=\"vertically-center\">\n        <img class=\"generated-image\" :width=\"imageInfo.width\" :src=\"imageInfo.url\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport eventHub from \"../utils/utils\"\n\nimport Highcharts from 'highcharts';\n\n// Alternatively, this is how to load Highstock. Highmaps is similar.\n// import Highcharts from 'highcharts/highstock';\n\n\n// Load the exporting module.\nimport Exporting from 'highcharts/modules/exporting';\nimport ExportData from 'highcharts/modules/export-data';\nimport NOdata from 'highcharts/modules/no-data-to-display'\nimport MoreHighcharts from 'highcharts/highcharts-more';\n\n// Initialize exporting module.\nExporting(Highcharts);\nNOdata(Highcharts);\nMoreHighcharts(Highcharts);\nExportData(Highcharts);\n\n// window.Highcharts = Highcharts;\nimport {AirPollutionWatchApp} from \"../utils/dataForecast\";\nimport {mapActions, mapState, mapGetters} from 'vuex';\n\n\nexport default {\n  name: \"chartComponent\",\n  props: {\n    IndexValue: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      visualizationIn: 'chart',\n      imageInfo: {\n        url: '',\n        downloadFileName: '',\n        width: ''\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"PostGetStationData\", \"PostGet2DImage\", \"TimeSeriesRasterQuery\"]),\n    async renderVisualization(isNoData) {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        let kk = this.getCascaderInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n        this.TimeSeriesPlot(kk, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].wktValue, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].geometryType, this.mapControlVariable[\"parameter_by_location__\" + this.IndexValue].default_level_value, isNoData);\n      } else {\n        //by location\n        let kk = this.getCascaderInfoObject(this.mapControlVariable[\"location_by_pollutant_value\" + this.IndexValue][1]);\n        this.TimeSeriesPlot(kk, this.mapControlVariable.location_by_wktValue, this.mapControlVariable.location_by_geometryType, this.mapControlVariable.location_by_default_level_value, isNoData);\n      }\n    },\n    getCascaderInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    async ObservationDatavisualization(kk, stationId) {\n      let layer = this.getBindedLayer(kk.layerId);\n      layer.setVisibleDivBind(true);\n      let param = {\n        stId: stationId,\n        ModelClass: kk.ModelClass,\n        ModelClassDataList: kk.ModelClassDataList,\n        typeName: kk.typeName,\n        StartDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate),\n        EndDate: this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate)\n      };\n      let parsedData = await this.PostGetStationData(param);\n      this.visualizationIn = 'chart'\n      var stationObject = kk.childrenData.filter((stdata) => {\n        return stdata.value == stationId\n      })[0]\n\n      let stationName = stationObject.folder_name;\n\n      let title;\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate));\n      } else {\n        title = kk.chart.title(stationName, this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.startDate), this.AirPollutionWatchApp.formatDate(AirPollutionWatchApp.endDate));\n      }\n      // debugger;\n      let XaxisLabel = kk.chart.XaxisLabel();\n      let plotType = kk.chart.plotType;\n      let highchartsObj = null;\n      if (plotType === 'point') {\n        highchartsObj = this.AirPollutionWatchApp.datetimePointChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel + ' (UTC)', this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      } else {\n        highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, kk.chart.subTitle, parsedData.SeriesData, kk.chart.SeriesName, kk.chart.YaxisLabel, XaxisLabel + ' (UTC)', this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], this.mapControlVariable.data_period + \" \")\n      }\n      Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n\n    },\n    downloadImage() {\n      this.AirPollutionWatchApp.forceDownload(this.imageInfo.url, this.imageInfo.downloadFileName);\n    },\n    async TimeSeriesPlot(kk, WKT, WKTType, default_level_value, isNoData) {\n      if (!isNoData) {\n        let layerBind = this.getBindedLayer(kk.layerId);\n        let layer = layerBind.getLayer();\n\n        let SourceParam = null;\n        let SourceURL = null;\n        let layerProperties = null;\n\n        if (layer.getProperties().ThreddsDataServerVersion) {\n          layerProperties = layer.getProperties();\n          SourceParam = layer.getCurrentLayer().getProperties().source.getParams();\n          SourceURL = [];\n          layerProperties.source.url.forEach(function (val) {\n            SourceURL.push(val.split('/wms/')[1]);\n          });\n\n        } else {\n          layerProperties = layer.getProperties();\n          SourceParam = layer.source.getParams();\n          SourceURL = layer.source.getUrls()[0].split('wms')[1];\n        }\n        let param = {\n          DATADIR: SourceURL,\n          LAYER: SourceParam.LAYERS,\n          wkt: WKT,\n          type: WKTType\n        };\n\n        let parsedData = await this.TimeSeriesRasterQuery(param);\n        if (parsedData.status === 200) {\n          let title = layerProperties.chartDetail.Product + \" (\" + layerProperties.chartDetail.Source + \")\";\n          let subTitle;\n          if (default_level_value) {\n            subTitle = default_level_value;\n          } else {\n            subTitle = parsedData.geom;\n          }\n          let YaxisLabel = layerProperties.chartDetail.unit;\n          let SeriesName = layerProperties.chartDetail.SeriesName;\n          let highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, subTitle, parsedData.SeriesData, SeriesName, YaxisLabel, parsedData.XaxisLabel + ' (UTC)', this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1])\n          Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n        }\n      } else {\n        // debugger;\n        let layerProperties = kk.layerProperties.threddLayerProp\n        let title = layerProperties.chartDetail.Product + \" (\" + layerProperties.chartDetail.Source + \")\";\n        let subTitle = '';\n        if (default_level_value) {\n          subTitle = default_level_value;\n        }\n        // let YaxisLabel = layerProperties.chartDetail.unit;\n        let SeriesName = layerProperties.chartDetail.SeriesName;\n        let forecastDate = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.forecastDate)\n        let highchartsObj = this.AirPollutionWatchApp.datetimeChartObj(title, subTitle, [], SeriesName, '', '', this.AirPollutionWatchApp.IndexColors[this.IndexValue - 1], forecastDate)\n        Highcharts.chart('chart' + this.IndexValue, highchartsObj);\n        console.log(kk);\n      }\n    }\n  },\n  computed: {\n    ...mapState([\"mapControlVariable\", \"TimeSeriesLayerCollection\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n  },\n  created() {\n    eventHub.$on(\"getVisualization\", () => {\n      this.renderVisualization();\n    });\n    eventHub.$on(\"ShowNoDataForecast\", () => {\n      this.renderVisualization(true);\n    });\n  },\n  async mounted() {\n\n    // Generate the chart\n//     Highcharts.chart('chart', {\n//       credits: {\n//         enabled: false\n//       },\n//       title: {\n//         align: \"center\",\n//         text: \"Select Indices to Display Chart\",\n//       },\n//       series: [{\n//         data: [],\n//       }],\n//       chart: {\n//         backgroundColor: 'rgba(255,255,255,0)',\n//         style: {\n//           \"fontFamily\": \"Lato,\\\"Lucida Grande\\\", \\\"Lucida Sans Unicode\\\", Verdana, Arial, Helvetica, sans-serif\",\n//           \"fontSize\": \"12px\"\n//         },\n//\n//         animation: true,\n//         zoomType: 'x',\n// //        borderColor: '#000000',\n// //        borderWidth: 2,\n//         type: 'area',\n//       },\n//       noData: {\n//         style: {\n//           fontWeight: 'bold',\n//           fontSize: '15px',\n//           color: '#303030'\n//         }\n//       },\n//     });\n    eventHub.$on('UpdateChart', (HcObject) => {\n      this.updateChart(HcObject);\n    });\n  },\n};\n</script>\n\n<style scoped>\n\n.chart-option .el-row {\n  margin-left: 5px !important;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-right: 8px !important;\n}\n\n.chart-option {\n  border-bottom: solid 1px #e2e2e2;\n}\n\n.chart-div {\n  height: 100%;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n.center-content-parent {\n  position: relative;\n}\n\n.center-content-child {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  margin: -70px 0 0 -170px;\n}\n\n.flex-center-vertically {\n  padding: 20px;\n  justify-content: center;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  height: 100%;\n}\n\n.plotSelection {\n  display: block;\n}\n\n.sync-chart .el-button {\n  width: 100%;\n}\n\n.position-relative {\n  position: relative !important;\n}\n\n.download-map-Image {\n  z-index: 1000;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  color: #afacac;\n  cursor: pointer;\n}\n\n.vertically-center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</style>\n","import {DefaultMaskWMS, DefaultPlotInfo, TethysAPIAppName} from \"../config\";\nimport {getURLParameters} from './helpers';\n\nvar myApp = {};\n// First need to initilize\nvar filterCoodrdinate = {};\n\n\nmyApp.forecastDate = new Date();\nmyApp.forecastDate.setDate(myApp.forecastDate.getDate() - 1);\n\n\nlet forecasteDate = getURLParameters()['date'];\nif (forecasteDate) {\n    if (forecasteDate.length == 8) {\n        let checkInt = parseInt(forecasteDate);\n        if (checkInt) {\n            // Number with valid\n            let YYYY = parseInt(forecasteDate.slice(0, 4));\n            let MM_index = parseInt(forecasteDate.slice(4, 6)) - 1;\n            let DD = parseInt(forecasteDate.slice(6, 8));\n            let dObject = new Date(YYYY, MM_index, DD);\n            myApp.forecastDate = dObject;\n        }\n    }\n}\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\n\n\nmyApp.APICollection = {\n    layerData: {\n        Aeronet: '/apps/' + TethysAPIAppName + '/aeronetaodpm/',\n        USEmbassyAOD: '/apps/' + TethysAPIAppName + '/usembassypm/',\n        getGeoJSONofStations: '/apps/' + TethysAPIAppName + '/getGeoJSONofStations/',\n        getGeoJsonForOneSatation: '/apps/' + TethysAPIAppName + '/getGeoJsonForOneSatation/',\n        getAllStationsID: '/apps/' + TethysAPIAppName + '/getAllStationsID/',\n    },\n    api: {\n        commonAPI: '/apps/' + TethysAPIAppName + '/getData/',\n        RegionGeojson: '/apps/' + TethysAPIAppName + '/geojsonregion/',\n        AOIPolygon: '/apps/' + TethysAPIAppName + '/aoipolygon/',\n        GetMapImage: '/apps/' + TethysAPIAppName + '/getmapimage/',\n        GetImage: '/apps/' + TethysAPIAppName + '/downloadImage/',\n        SlicedFromCatalog: '/apps/' + TethysAPIAppName + '/slicedfromcatalog/'\n    }\n};\n\n\nmyApp.constants = {\n    forecast: {\n        layerId: {\n            GEOS_PM2p5: 'Forecast__GEOS_PM2p5',\n            O3_GEOS: 'Forecast__GEOS_O3',\n            SO2_GEOS: 'Forecast__GEOS_SO2',\n            NO2_GEOS: 'Forecast__GEOS_NO2',\n            CO_GEOS: 'Forecast__GEOS_CO',\n            WRF_Chem_PM: 'Forecast__WRF_Chem_PM',\n            WRF_Chem_O3: 'Forecast__WRF_Chem_O3',\n            WRF_Chem_SO2: 'Forecast__WRF_Chem_SO2',\n            WRF_Chem_NO2: 'Forecast__WRF_Chem_NO2',\n            WRF_Chem_CO: 'Forecast__WRF_Chem_CO',\n        }\n    }\n};\n\nmyApp.IndexColors = ['#0C6CE9', '#962422', '#1D5430', '#F76743'];\nmyApp.AllBindedLayersList = [];\nmyApp.OnlyOnce = true;\n\nmyApp.getLayer = function (id) {\n    // console.log(id)\n    var layer;\n    for (let i = 0; i < myApp.AllBindedLayersList.length; i++) {\n        // console.log(myApp.AllBindedLayersList[i].getProperties().id);\n        if (id == myApp.AllBindedLayersList[i].getProperties().id) { ///popDensityLayer.getProperties().id\n            layer = myApp.AllBindedLayersList[i].getLayer();\n            break;\n        }\n    }\n    return layer;\n};\n\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n    return [year, month, day].join('-');\n};\n\n\nmyApp.DefaultSations = {\n    aeronetAOD: [9, 14, 9, 14],\n    pm2p5Embassy: [6, 7, 6, 7],\n    o3Embassy: [6, 7, 6, 7]\n}\n\nmyApp.cascaderObj = [\n    {\n        label: 'PM',\n        value: 1,\n        children: [\n            {\n                label: 'Model-PM2.5 (GEOS)',\n                layerId: myApp.constants.forecast.layerId.GEOS_PM2p5,\n                value: 13,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/PM/GEOS-PM2p5/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.GEOS_PM2p5,\n                        title: 'GEOS PM2.5',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'PM2p5',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,100\",\n                                'transparent': true\n                            }\n                        },\n                        unit: 'µg/m<sup>3<sup>',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 20,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'GEOS $PM_{2.5}$(µg/$m^{3}$)',\n                                TimeZone: ' UTC'\n                            })\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: 'µg/m<sup>3</sup>', SeriesName: \"value\",\n                            Product: 'PM<sub>2.5</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Model-PM2.5 (WRF-Chem)',\n                layerId: myApp.constants.forecast.layerId.WRF_Chem_PM,\n                value: 14,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/WRF_Chem/d1_HKH/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.WRF_Chem_PM,\n                        title: 'WRF-Chem PM2.5',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'PM25_SFC',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,100\",\n                                'transparent': true\n                            }\n                        },\n                        unit: 'µg/m<sup>3<sup>',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 20,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {\n                                title: 'WRF-Chem $PM_{2.5}$(µg/$m^{3}$)',\n                                TimeZone: ' UTC'\n                            })\n                        },\n                        chartDetail: {\n                            title: 'WRF-Chem',\n                            unit: 'µg/m<sup>3</sup>',\n                            SeriesName: \"value\",\n                            Product: 'PM<sub>2.5</sub>',\n                            Source: 'WRF-Chem'\n                        },\n                    }\n                }\n            }\n        ]\n    }, {\n        label: 'O3',\n        value: 2,\n        children: [\n            {\n                label: 'Model-O3 (GEOS)',\n                layerId: myApp.constants.forecast.layerId.O3_GEOS,\n                value: 22,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/O3/GEOS-O3/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.O3_GEOS,\n                        title: 'GEOS O3',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'O3',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,80\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 23,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS $O_{3}$(ppb)'})\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'O<sub>3</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                },\n            }, {\n                label: 'Model-O3 (WRF-Chem)',\n                layerId: myApp.constants.forecast.layerId.WRF_Chem_O3,\n                value: 23,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/WRF_Chem/d1_HKH/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.WRF_Chem_O3,\n                        title: 'WRF-Chem O3',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'O3_TOTCOL',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,80\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 23,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS Dobson Units'})\n                        },\n                        chartDetail: {\n                            title: 'WRF-Chem', unit: \"Dobson Units\", SeriesName: \"value\",\n                            Product: 'O<sub>3</sub>',\n                            Source: 'WRF-Chem'\n                        },\n                    }\n                },\n            }\n        ]\n    },\n    {\n        label: 'SO2',\n        value: 3,\n        children: [\n            {\n                label: 'Model-SO2 (GEOS)',\n                layerId: myApp.constants.forecast.layerId.SO2_GEOS,\n                value: 32,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/SO2/GEOS-SO2/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.SO2_GEOS,\n                        title: 'GEOS SO2',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'SO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,10\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 24,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)'})\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'SO<sub>2</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                }\n            },\n            {\n                label: 'Model-SO2 (WRF-Chem)',\n                layerId: myApp.constants.forecast.layerId.WRF_Chem_SO2,\n                value: 32,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/WRF_Chem/d1_HKH/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.WRF_Chem_SO2,\n                        title: 'WRF-Chem SO2',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'SO2_SFC',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,10\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 24,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $SO_{2}$($10^{17}$ molecules/$cm^{2}$)'})\n                        },\n                        chartDetail: {\n                            title: 'WRF-Chem', unit: \" ppbv\", SeriesName: \"value\",\n                            Product: 'SO<sub>2</sub>',\n                            Source: 'WRF-Chem'\n                        },\n                    }\n                }\n            }\n        ]\n    },\n    {\n        label: 'NO2',\n        value: 4,\n        children: [\n            {\n                label: 'Model-NO2 (GEOS)',\n                layerId: myApp.constants.forecast.layerId.NO2_GEOS,\n                value: 42,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/NO2/GEOS-NO2/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.NO2_GEOS,\n                        title: 'GEOS NO2',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'NO2',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,10\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 22,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)'})\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'NO<sub>2</sub>',\n                            Source: 'GEOS'\n                        },\n                    }\n                },\n            },\n            {\n                label: 'Model-NO2 (WRF-Chem)',\n                layerId: myApp.constants.forecast.layerId.WRF_Chem_NO2,\n                value: 43,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/WRF_Chem/d1_HKH/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.WRF_Chem_NO2,\n                        title: 'WRF-Chem NO2',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'NO2_SFC',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,10\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 22,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'TROPOMI $NO_{2}$($10^{15}$ molecules/$cm^{2}$)'})\n                        },\n                        chartDetail: {\n                            title: 'WRF-Chem', unit: \"ppbv\", SeriesName: \"value\",\n                            Product: 'NO<sub>2</sub>',\n                            Source: 'WRF-Chem'\n                        },\n                    }\n                },\n            }\n        ]\n    },\n    {\n        label: 'CO',\n        value: 5,\n        children: [\n            {\n                label: 'Model-CO (GEOS)',\n                layerId: myApp.constants.forecast.layerId.CO_GEOS,\n                value: 52,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/CO/GEOS-CO/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.CO_GEOS,\n                        title: 'GEOS CO',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'CO',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,500\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 21,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'GEOS CO(ppb)'})\n                        },\n                        chartDetail: {\n                            title: 'GEOS', unit: \"ppb\", SeriesName: \"value\",\n                            Product: 'CO',\n                            Source: 'GEOS'\n                        },\n\n                    }\n                },\n            },\n            {\n                label: 'Model-CO (WRF-Chem)',\n                layerId: myApp.constants.forecast.layerId.WRF_Chem_CO,\n                value: 53,\n                stationData: false,\n                layerProperties: {\n                    catalog: 'catalog/HKHAirQualityWatch/Forecast/WRF_Chem/d1_HKH/catalog.xml',\n                    initilize: false,\n                    useSLD: false,\n                    isTimeDimensionLayer: true,\n                    VisibleDivBind: false,\n                    threddLayerProp: {\n                        id: myApp.constants.forecast.layerId.WRF_Chem_CO,\n                        title: 'WRF-Chem CO',\n                        visible: false,\n                        opacity: 0.6,\n                        ThreddsDataServerVersion: 5,\n                        serverType: 'TDS',\n                        timeSeries: false,\n                        alignTimeSlider: 'right',\n                        timeSliderSize: 'small',\n                        showlegend: false,\n                        showControlPanel: true,\n                        source: {\n                            url: [],\n                            params: {\n                                'LAYERS': 'CO_SFC',\n                                'STYLES': 'default-scalar/x-Rainbow',\n                                'COLORSCALERANGE': \"0,500\",\n                                'transparent': true\n                            }\n                        },\n                        unit: '',\n                        mask: DefaultMaskWMS,\n                        CropOrMask: 'crop',\n                        changeWMSProxy: true,\n                        filterCoodrdinate: filterCoodrdinate,\n                        aoi: true,\n                        zIndex: 21,\n                        api: {\n                            createGIF: myApp.APICollection.api.CreateGIFImage,\n                            GetImage: myApp.APICollection.api.GetImage,\n                            TimeZone: ' UTC'\n                        },\n                        plotInfo: function () {\n                            return Object.assign(DefaultPlotInfo, {title: 'WRF-Chem CO(ppb)'});\n                        },\n                        chartDetail: {\n                            title: 'WRF-Chem', unit: \"ppbv\", SeriesName: \"value\",\n                            Product: 'CO',\n                            Source: 'WRF-Chem'\n                        },\n                    }\n                },\n            }\n        ]\n    }];\n\nmyApp.formatDate = function (date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n};\n\nmyApp.makeRequest = function (method, url) {\n    return new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.open(method, url);\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                resolve(xhr.response);\n            } else {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        xhr.onerror = function () {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n        xhr.send();\n    });\n};\n\n\nmyApp.getForecastWMSList = async function (url) {\n    let result = await myApp.makeRequest(\"GET\", url);\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(result, \"text/xml\");\n    let wmsList = [];\n    let interestedDate = myApp.formatDate(myApp.forecastDate).replace(/-/g, '');\n    let DimensionTag = xmlDoc.getElementsByTagName(\"catalogRef\");\n    let DateHavingCatalog = null;\n    for (let kk of DimensionTag) {\n        if (interestedDate == kk.getAttribute('xlink:title')) {\n            DateHavingCatalog = url.replace('catalog.xml', kk.getAttribute('xlink:href'));\n            break;\n        }\n    }\n    if (DateHavingCatalog) {\n        let result1 = await this.makeRequest(\"GET\", DateHavingCatalog);\n        let parser1 = new DOMParser();\n        let xmlDoc1 = parser1.parseFromString(result1, \"text/xml\");\n        let dataset = xmlDoc1.getElementsByTagName(\"dataset\");\n        for (let jj of dataset) {\n            let name = jj.getAttribute('name');\n            if (name.slice(-3) == '.nc') {\n                wmsList.push(DateHavingCatalog.replace('/catalog/', '/wms/').replace('catalog.xml', name));\n            }\n        }\n    }\n    return wmsList.sort()\n};\n\nmyApp.datetimePointChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod) {\n\n    let data = {\n        chart: {\n            marginLeft: 65,\n            /* marginRight: 0, */\n            /* spacingLeft: 0, */\n            /* spacingRight: 0 */\n            backgroundColor: 'transparent',\n            plotBorderColor: '#afafaf',\n            plotBorderWidth: 1,\n        },\n        title: {\n            text: title,\n            fontSize: '10px',\n            useHTML: true\n        },\n        subtitle: {\n            text: subTitle,\n            fontSize: '8px'\n        },\n        series: [{\n            name: SeriesName,\n            data: SeriesData,\n            lineWidth: 0,\n            marker: {\n                enabled: true,\n                symbol: 'diamond',\n                radius: 2\n            },\n        }],\n        xAxis: {\n            type: 'datetime',\n            title: {\n                text: XaxisLabel,\n                align: 'high',\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0\n        },\n        yAxis: {\n            title: {\n                text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                useHTML: true,\n                rotation: 0,\n                // align: 'high',\n                offset: 0,\n                x: -50\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0,\n            gridLineWidth: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                color: plotColor,\n                marker: {\n                    enabled: false,\n                    radius: 4\n                }\n            }\n        },\n        lang: {\n            noData: DataPeriod + 'data not available for this station.'\n        },\n        exporting: {\n            buttons: {\n                contextButton: {\n                    menuItems: [\"printChart\",\n                        \"separator\",\n                        \"downloadPNG\",\n                        \"downloadJPEG\",\n                        \"downloadPDF\",\n                        \"downloadSVG\",\n                        \"separator\",\n                        \"downloadCSV\",\n                        \"downloadXLS\",\n                        //\"viewData\",\n                        \"openInCloud\"]\n                }\n            },\n            // chartOptions: {\n            //     title: {\n            //         text: title,\n            //         fontSize: '10px',\n            //         useHTML: true\n            //     }, yAxis: {\n            //         title: {\n            //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n            //             useHTML: true,\n            //             rotation: 250\n            //         }\n            //     },\n            // },\n            allowHTML: true,\n            // fallbackToExportServer: false,\n            // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n        }\n    };\n\n    return data;\n};\n\nmyApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor, DataPeriod,forecastDate) {\n    let data = {\n        chart: {\n            marginLeft: 65,\n            /* marginRight: 0, */\n            /* spacingLeft: 0, */\n            /* spacingRight: 0 */\n            backgroundColor: 'transparent',\n            plotBorderColor: '#afafaf',\n            plotBorderWidth: 1,\n        },\n        title: {\n            text: title,\n            fontSize: '10px',\n            useHTML: true\n        },\n        subtitle: {\n            text: subTitle,\n            fontSize: '8px'\n        },\n        series: [{\n            name: SeriesName,\n            data: SeriesData,\n            marker: {\n                enabled: false,\n                symbol: 'diamond',\n                radius: 3\n            },\n        }],\n        xAxis: {\n            type: 'datetime',\n            title: {\n                text: XaxisLabel,\n                align: 'high',\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0\n        },\n        lang: {\n            noData: 'data not available for '+forecastDate\n        },\n        yAxis: {\n            title: {\n                text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n                useHTML: true,\n                rotation: 0,\n                // align: 'high',\n                offset: 0,\n                x: -50\n            },\n            tickLength: 0,\n            lineColor: 0,\n            lineWidth: 0,\n            gridLineWidth: 0\n        },\n        legend: {\n            enabled: false\n        },\n        credits: {\n            enabled: false\n        },\n        plotOptions: {\n            series: {\n                color: plotColor\n            }\n        },\n        exporting: {\n            buttons: {\n                contextButton: {\n                    menuItems: [\"printChart\",\n                        \"separator\",\n                        \"downloadPNG\",\n                        \"downloadJPEG\",\n                        \"downloadPDF\",\n                        \"downloadSVG\",\n                        \"separator\",\n                        \"downloadCSV\",\n                        \"downloadXLS\",\n                        //\"viewData\",\n                        \"openInCloud\"]\n                }\n            },\n            // chartOptions: {\n            //     title: {\n            //         text: title,\n            //         fontSize: '10px',\n            //         useHTML: true\n            //     }, yAxis: {\n            //         title: {\n            //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n            //             useHTML: true,\n            //             rotation: 250\n            //         }\n            //     },\n            // },\n            allowHTML: true,\n            // fallbackToExportServer: false,\n            // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n        }\n    };\n    return data\n};\n\nmyApp.forceDownload = function (url, fileName) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"blob\";\n    xhr.onload = function () {\n        var urlCreator = window.URL || window.webkitURL;\n        var imageUrl = urlCreator.createObjectURL(this.response);\n        var tag = document.createElement('a');\n        tag.href = imageUrl;\n        tag.download = fileName;\n        document.body.appendChild(tag);\n        tag.click();\n        document.body.removeChild(tag);\n    }\n    xhr.send();\n}\n\n// myApp.datetimeChartObj = function (title, subTitle, SeriesData, SeriesName, YaxisLabel, XaxisLabel, plotColor) {\n//     let data = {\n//             chart: {\n//                 marginLeft: 65,\n//                 /* marginRight: 0, */\n//                 /* spacingLeft: 0, */\n//                 /* spacingRight: 0 */\n//                 backgroundColor: 'transparent',\n//                 plotBorderColor: '#afafaf',\n//                 plotBorderWidth: 1,\n//             },\n//             title: {\n//                 text: title,\n//                 fontSize: '10px',\n//                 useHTML: true\n//             },\n//             subtitle: {\n//                 text: subTitle,\n//                 fontSize: '8px'\n//             },\n//             series: [{\n//                 name: SeriesName,\n//                 data: SeriesData,\n//                 // marker: {\n//                 //     enabled: true,\n//                 //     symbol: 'diamond',\n//                 //     radius: 3\n//                 // },\n//             }],\n//             xAxis: {\n//                 type: 'datetime',\n//                 title: {\n//                     text: XaxisLabel,\n//                     align: 'high',\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0\n//             },\n//             yAxis: {\n//                 title: {\n//                     text: `<span style=\"display:inline-block; -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                     useHTML: true,\n//                     rotation: 0,\n//                     // align: 'high',\n//                     offset: 0,\n//                     x: -50\n//                 },\n//                 tickLength: 0,\n//                 lineColor: 0,\n//                 lineWidth: 0,\n//                 gridLineWidth: 0\n//             },\n//             legend: {\n//                 enabled: false\n//             },\n//             credits: {\n//                 enabled: false\n//             },\n//             plotOptions: {\n//                 series: {\n//                     color: plotColor\n//                 }\n//             },\n//             exporting: {\n//                 buttons: {\n//                     contextButton: {\n//                         menuItems: [\"printChart\",\n//                             \"separator\",\n//                             \"downloadPNG\",\n//                             \"downloadJPEG\",\n//                             \"downloadPDF\",\n//                             \"downloadSVG\",\n//                             \"separator\",\n//                             \"downloadCSV\",\n//                             \"downloadXLS\",\n//                             //\"viewData\",\n//                             \"openInCloud\"]\n//                     }\n//                 },\n//                 // chartOptions: {\n//                 //     title: {\n//                 //         text: title,\n//                 //         fontSize: '10px',\n//                 //         useHTML: true\n//                 //     }, yAxis: {\n//                 //         title: {\n//                 //             text: `<span style=\"display:inline-block; -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\">${YaxisLabel}</span>`,\n//                 //             useHTML: true,\n//                 //             rotation: 250\n//                 //         }\n//                 //     },\n//                 // },\n//                 allowHTML: true,\n//                 // fallbackToExportServer: false,\n//                 // libURL: 'http://localhost:8000/static/airqualitywatch/js/Highcharts/lib/'\n//             }\n//         }\n//     ;\n//     console.log(JSON.stringify(data));\n//     return data\n// };\n\nexport var AirPollutionWatchApp = myApp;","import { render } from \"./chartComponentForecast.vue?vue&type=template&id=45972e81&scoped=true\"\nimport script from \"./chartComponentForecast.vue?vue&type=script&lang=js\"\nexport * from \"./chartComponentForecast.vue?vue&type=script&lang=js\"\n\nimport \"./chartComponentForecast.vue?vue&type=style&index=0&id=45972e81&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-45972e81\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Map Controls\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n\n        <el-form\n            label-position=\"left\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n        >\n\n          <!--          <el-form-item label=\"Data Period\" prop=\"data_period\">-->\n          <!--            <el-select v-model=\"mapControlVariable.data_period\" placeholder=\"Data Period\"-->\n          <!--                       style=\"width: 100%\">-->\n          <!--              <el-option-->\n          <!--                  v-for=\"item in options.data_period\"-->\n          <!--                  :key=\"item.value\"-->\n          <!--                  :label=\"item.label\"-->\n          <!--                  :value=\"item.value\"-->\n          <!--                  :disabled=\"item.disabled\"-->\n          <!--              >-->\n          <!--              </el-option>-->\n          <!--            </el-select>-->\n          <!--          </el-form-item>-->\n\n          <el-form-item label=\"Select By\" prop=\"select_by\">\n            <el-select v-model=\"mapControlVariable.select_by\" placeholder=\"Select By\" style=\"width: 100%\">\n\n              <el-option\n                  v-for=\"item in options.select_by\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                  :disabled=\"item.disabled\"\n              >\n              </el-option>\n\n            </el-select>\n          </el-form-item>\n\n        </el-form>\n\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n            v-if=\"mapControlVariable.select_by ==='Location'\"\n        >\n\n          <el-form-item v-show=\"mapControlVariable.data_period !=='Recent'\" label=\"Select Location\"\n                        prop=\"Select Location\">\n\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-model=\"mapControlVariable.location_by\" placeholder=\"Select Location\" style=\"width: 100%\">\n                <el-option\n                    v-for=\"item in options.location_by\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n\n              </el-select>\n            </el-col>\n            <el-col :span=\"2\" style=\"width: 100%\">\n              <div class=\"\" style=\"width: 100%;text-align: center;\">\n                -\n              </div>\n            </el-col>\n            <el-col :span=\"11\" style=\"width: 100%\">\n              <el-select v-show=\"mapControlVariable.location_by ==='default_locations'\"\n                         v-model=\"mapControlVariable.default_location\"\n                         placeholder=\"Select Location\" style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.default_location\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n              <div class=\"\" v-show=\"mapControlVariable.location_by ==='AOI'\">\n                <div class=\"feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===true\">Feature\n                  selected\n                </div>\n                <div class=\"no-feature-selected\" v-show=\"mapControlVariable.is_AOI_Feature_selected ===false\">No Feature\n                  selected\n                </div>\n              </div>\n            </el-col>\n\n          </el-form-item>\n\n          <el-form-item label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value1\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value2\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value3\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n            <div class=\"pollutant-cascader\">\n              <el-cascader\n                  v-model=\"mapControlVariable.location_by_pollutant_value4\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n\n        <el-form\n            label-position=\"top\"\n            label-width=\"120px\"\n            class=\"demo-ruleForm\"\n            size=\"mini\"\n\n        >\n          <el-form-item v-show=\"mapControlVariable.select_by ==='Parameter'\" label=\"Pollutants\" prop=\"Pollutants\">\n            <div class=\"pollutant-cascader\">\n\n              <el-cascader\n                  v-model=\"mapControlVariable.parameter_by_pollutant_value\"\n                  :options=\"cascaderData\"\n                  style=\"width: 100%\"\n              ></el-cascader>\n\n            </div>\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===false\"\n              label=\"Select Locations\" prop=\"Locations\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--              -->\n            <!--            </el-radio-group>-->\n\n            <el-radio-group v-model=\"mapControlVariable.radioValue\">\n              <el-radio :label=\"1\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='1'?false:true\"\n\n                                :IndexValue=\"1\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"2\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='2'?false:true\"\n                                :IndexValue=\"2\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"3\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='3'?false:true\"\n                                :IndexValue=\"3\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n              <el-radio :label=\"4\" name=\"radio1\" style=\"width: 100%\">\n                <selectLocation :isDisable=\"mapControlVariable.radioValue=='4'?false:true\"\n                                :IndexValue=\"4\"\n                                :Select_Option_Default_Location=\"options.default_location\">\n                </selectLocation>\n              </el-radio>\n            </el-radio-group>\n\n\n          </el-form-item>\n\n          <el-form-item\n              v-show=\"mapControlVariable.select_by ==='Parameter' && mapControlVariable.is_parameter_by_pollutant_value_stationData===true\"\n              label=\"Select Stations\" prop=\"station\">\n\n            <!--            <el-radio-group v-model=\"radio4\" size=\"mini\" disabled>-->\n            <!--              <el-radio label=\"1\" border>Option A</el-radio>-->\n            <!--              <el-radio label=\"2\" border>Option B</el-radio>-->\n            <!--              -->\n            <!--            </el-radio-group>-->\n\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val1\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val2\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val3\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n            <div class=\"pollutant-cascader\">\n              <el-select v-model=\"mapControlVariable.parameter_by_pollutant_value_stationData_val4\"\n                         placeholder=\"Select station\"\n                         style=\"width: 100%\">\n\n                <el-option\n                    v-for=\"item in options.ObservationStationOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >\n                </el-option>\n              </el-select>\n\n            </div>\n\n          </el-form-item>\n\n        </el-form>\n\n        <el-button class=\"compute-now\" type=\"primary\" size=\"mini\" style=\"width: 100%\" @click=\"computeData\">compute\n        </el-button>\n\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapActions, mapGetters, mapMutations, mapState} from \"vuex\";\nimport OLWKT from \"ol/format/WKT\";\nimport selectLocation from \"./selectLocation\";\nimport {threddDataSource} from \"../config\"\nimport TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\nimport {AirPollutionWatchApp} from \"../utils/dataForecast\";\nimport OlVectorLayer from \"ol/layer/Vector\";\nimport OlVectorSource from \"ol/source/Vector\";\nimport OlGeoJSON from \"ol/format/GeoJSON\";\nimport {getCenter as ol_extent_getCenter} from \"ol/extent\";\nimport eventHub from \"../utils/utils\";\n\n// import {ElLoading} from 'element-plus';\nimport rgbLegend from '../assets/rgblegend.jpg';\nimport usembassyPm2p5 from '../assets/usembassyPm2p5.jpg';\nimport AODAeroNet from '../assets/AODAeroNet.jpg';\nimport {Action} from \"../store/actionType\";\nimport {Image as ImageLayer} from \"ol/layer\";\nimport ImageWMS from \"ol/source/ImageWMS\";\nimport Style from \"ol/style/Style\";\nimport {Icon} from \"ol/style\";\n\nexport default {\n  name: \"mapControlsForecast\",\n  data() {\n    return {\n      maskCoordinate: null,\n      data__layer__initilize__Recent: false,\n      data__layer__initilize__Archive: false,\n      data__layer__initilize__Forecast: false,\n      AirPollutionWatchApp: AirPollutionWatchApp,\n      options: {\n        data_period: [\n          {\n            value: 'Recent',\n            label: 'Recent',\n          },\n          {\n            value: 'Archive',\n            label: 'Archive',\n          },\n          {\n            value: 'Forecast',\n            label: 'Forecast',\n          }\n        ], select_by: [\n          {\n            value: 'Location',\n            label: 'Location',\n          },\n          {\n            value: 'Parameter',\n            label: 'Parameter',\n          }\n        ], location_by: [\n          {\n            value: 'default_locations',\n            label: 'Major Cities',\n          },\n          {\n            value: 'AOI',\n            label: 'Select on map',\n          }\n        ],\n        default_location: [],\n        ObservationStationOptions: []\n      },\n      PROXY_PREFIX: Action.Base + '/apps/airqualitynp/WMSProxy/',\n      OnlyOnceForInitialCompute: true\n    }\n  },\n  watch: {\n    async SelectDataPeriod() {\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        this.AirPollutionWatchApp.startDate = new Date();\n        this.AirPollutionWatchApp.startDate.setDate(this.AirPollutionWatchApp.startDate.getDate() - 1);\n        this.AirPollutionWatchApp.endDate = new Date();\n\n      } else if (this.mapControlVariable.data_period == \"Archive\") {\n\n        this.AirPollutionWatchApp.startDate = new Date();\n        this.AirPollutionWatchApp.startDate.setDate(this.AirPollutionWatchApp.startDate.getDate() - 8);\n        this.AirPollutionWatchApp.endDate = new Date();\n        this.AirPollutionWatchApp.endDate.setDate(this.AirPollutionWatchApp.endDate.getDate() - 1);\n\n      } else {\n        this.AirPollutionWatchApp.forecastDate = new Date();\n        this.AirPollutionWatchApp.forecastDate.setDate(this.AirPollutionWatchApp.forecastDate.getDate() - 1);\n\n      }\n      // await this.addLayersToMap();\n      console.log(\"-----------------kkkk-------------------------\");\n      if (this.mapControlVariable.data_period == \"Recent\") {\n        //  set defaults\n        this.mapControlVariable.select_by = \"Parameter\";\n        let recentPollutant = [1, 12];\n        this.mapControlVariable.parameter_by_pollutant_value = recentPollutant;\n        let kk = this.getStationInfoObject(recentPollutant[1]);\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = kk.defaultStation[0];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = kk.defaultStation[1];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = kk.defaultStation[2];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = kk.defaultStation[3];\n        // this.setLayerVisible(kk.layerId, true);\n\n      } else if (this.mapControlVariable.data_period == \"Archive\") {\n        //  set defaults\n        this.mapControlVariable.select_by = \"Parameter\";\n        let recentPollutant = [1, 12]\n        this.mapControlVariable.parameter_by_pollutant_value = recentPollutant;\n        let kk = this.getStationInfoObject(recentPollutant[1]);\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val1 = kk.defaultStation[0];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val2 = kk.defaultStation[1];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val3 = kk.defaultStation[2];\n        this.mapControlVariable.parameter_by_pollutant_value_stationData_val4 = kk.defaultStation[3];\n        // this.setLayerVisible(kk.layerId, true);\n      } else {\n        //  set defaults\n        this.mapControlVariable.select_by = \"Parameter\";\n        let recentPollutant = [1, 13];\n        this.mapControlVariable.parameter_by_pollutant_value = recentPollutant;\n        // let kk = this.getStationInfoObject(recentPollutant[1]);\n        // this.setLayerVisible(kk.layerId, true);\n\n      }\n\n\n    },\n    SelectDefaultLocation(newVal, oldVal) {\n      if (newVal) {\n        // add it to vectorLayer\n        let selNewValObj = this.options.default_location.filter(function (x) {\n          return newVal == x.value\n        })[0];\n\n        let Feature = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        Feature.set(\"SelectBy\", \"Location\");\n        Feature.set(\"LocationBy\", \"default_location\");\n        this.WorkingVectorLayer.getSource().addFeature(Feature);\n\n        var view = this.mapObject.getView();\n        var resolution = view.getResolutionForExtent(Feature.getGeometry().getExtent(), this.mapObject.getSize());\n        var zoom = view.getZoomForResolution(resolution);\n        var center = ol_extent_getCenter(Feature.getGeometry().getExtent());\n        // redraw before zoom\n        setTimeout(function () {\n          view.animate({\n            center: center,\n            zoom: Math.min(zoom, 11)\n          });\n        }, 100);\n\n        var format = new OLWKT();\n        var wktfeaturegeom = format.writeGeometry(Feature.getGeometry(), {\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        var geometryType = Feature.getGeometry().getType();\n\n        // let featureExtent = (new OLWKT()).readFeature(wktfeaturegeom);\n\n        // let featureForExtent = (new OlGeoJSON()).readFeature(selNewValObj.geoJSON.features[0]);\n        // featureExtent = featureExtent.getGeometry().getExtent();\n\n        this.mapControlVariable.location_by_wktValue = wktfeaturegeom;\n        this.mapControlVariable.location_by_geometryType = geometryType;\n        this.mapControlVariable.location_by_default_level_value = selNewValObj.label;\n\n      } else {\n        this.mapControlVariable.location_by_wktValue = '';\n        this.mapControlVariable.location_by_geometryType = '';\n        this.mapControlVariable.location_by_default_level_value = '';\n      }\n\n      if (oldVal) {\n        // remove it from vector layer\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Location\" && f.get(\"LocationBy\") == \"default_location\" && f.get(\"id\") == oldVal) {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n      }\n    },\n    SelectLocationBy() {\n      this.mapControlVariable.default_location = '';\n    },\n    SelectByOption() {\n\n      if (this.mapControlVariable.select_by == \"Location\") {\n        this.WorkingVectorLayer.getSource().getFeatures().forEach((f) => {\n          if (f.get(\"SelectBy\") == \"Parameter\" && f.get(\"LocationBy\") == \"default_location\") {\n            this.WorkingVectorLayer.getSource().removeFeature(f);\n          }\n        });\n\n        // this.mapControlVariable.parameter_by_pollutant_value = '';\n\n        //remove the layers which are on select by parameter\n        this.SetLayerOfSelectByParameterLayer(false);\n\n        if (this.mapControlVariable.data_period == \"Recent\") {\n          this.mapControlVariable.location_by_pollutant_value1 = [1, 12, 6];\n          this.mapControlVariable.location_by_pollutant_value2 = [1, 12, 7];\n          this.mapControlVariable.location_by_pollutant_value3 = [1, 11, 9];\n          this.mapControlVariable.location_by_pollutant_value4 = [1, 11, 14];\n        } else if (this.mapControlVariable.data_period == \"Archive\") {\n\n\n          this.mapControlVariable.location_by = 'default_locations';\n          this.mapControlVariable.default_location = 1;\n          this.mapControlVariable.location_by_pollutant_value1 = [1, 12, 6];\n          this.mapControlVariable.location_by_pollutant_value2 = [1, 12, 7];\n          this.mapControlVariable.location_by_pollutant_value3 = [1, 11, 9];\n          this.mapControlVariable.location_by_pollutant_value4 = [1, 11, 14];\n        } else {\n          this.mapControlVariable.location_by = 'default_locations';\n          this.mapControlVariable.default_location = 1;\n          this.mapControlVariable.location_by_pollutant_value1 = [1, 13];\n          this.mapControlVariable.location_by_pollutant_value2 = [2, 22];\n          this.mapControlVariable.location_by_pollutant_value3 = [3, 32];\n          this.mapControlVariable.location_by_pollutant_value4 = [4, 42];\n        }\n      } else {\n\n        if (this.mapControlVariable.data_period == \"Recent\") {\n          this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n        } else if (this.mapControlVariable.data_period == \"Archive\") {\n          this.mapControlVariable.parameter_by_pollutant_value = [1, 12];\n        } else {\n          this.mapControlVariable.parameter_by_pollutant_value = [1, 13];\n        }\n\n        // no single default location on parameter\n        this.mapControlVariable.default_location = '';\n\n        this.SetLayerOfSelectByParameterLayer(true);\n      }\n\n      this.ObservationStationOption();\n\n    },\n    async SelectByParameterPollutant(newPollutant, oldPollutant) {\n\n      if (oldPollutant) {\n        if (oldPollutant.length) {\n          let kk = this.getStationInfoObject(oldPollutant[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            if (kk.layerProperties.initilize == true) {\n              layer.setVisibleDivBind(false);\n            }\n          }\n        }\n      }\n      let kk = this.getStationInfoObject(newPollutant[1]);\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        await this.AddLayerToLayerList(kk);\n        let layer = this.getBindedLayer(kk.layerId);\n        if (kk.layerProperties.initilize == true) {\n          console.log(\"newPollutant\");\n          console.log(newPollutant);\n          layer.setVisibleDivBind(true);\n        }\n        // else {\n        //   this.mapControlVariable.parameter_by_pollutant_value = [];\n        // }\n        if (layer == undefined) {\n          if (this.OnlyOnceForInitialCompute) {\n            this.OnlyOnceForInitialCompute = false;\n\n            setTimeout(() => {\n              eventHub.$emit('ShowNoDataForecast');\n            }, 1500);\n          }\n        }\n        if (kk.stationData) {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = true;\n          this.options.ObservationStationOptions = kk.childrenData;\n        } else {\n          this.mapControlVariable.is_parameter_by_pollutant_value_stationData = false;\n          this.options.ObservationStationOptions = [];\n        }\n      }\n\n      //  forecast\n      this.mapControlVariable.is_parameter_by_pollutant_value_stationData = false;\n      this.mapControlVariable.parameter_by_location__1.location_by = 'default_locations';\n      this.mapControlVariable.parameter_by_location__2.location_by = 'default_locations';\n      this.mapControlVariable.parameter_by_location__3.location_by = 'default_locations';\n      this.mapControlVariable.parameter_by_location__4.location_by = 'default_locations';\n\n      this.mapControlVariable.parameter_by_location__1.default_location = 1;\n      this.mapControlVariable.parameter_by_location__2.default_location = 2;\n      this.mapControlVariable.parameter_by_location__3.default_location = 3;\n      this.mapControlVariable.parameter_by_location__4.default_location = 4;\n\n      eventHub.$emit('SelectByParameterDefaultLocation');\n\n\n    },\n    location_by_pollutant_value1(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    }, location_by_pollutant_value2(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    }, location_by_pollutant_value3(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    }, location_by_pollutant_value4(newVal, oldVal) {\n      this.onChangePollutantsOnSelectByLocation(newVal, oldVal);\n    },\n  },\n  components: {selectLocation},\n  methods: {\n    ...mapActions([\"getCityData\", \"PostSlicedFromCatalog\", \"getGeoJsonForOneSatation\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\", \"addLegend\", \"removeLegend\"]),\n    changeDataPeriod() {\n\n\n    },\n    featureSelectorDeleteUpdate() {\n      var wktfeaturegeom, geometryType;\n      if (this.selectInteraction) {\n        if (this.SelectByOption == 'Location') {\n          if (this.selectInteraction.getFeatures().getLength()) {\n\n            var features = this.selectInteraction.getFeatures();\n            features.forEach(function (f) {\n              var format = new OLWKT();\n              wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n                dataProjection: 'EPSG:4326',\n                featureProjection: 'EPSG:3857'\n              });\n              geometryType = f.getGeometry().getType();\n            });\n            // let Param = {\n            //   geometryType: geometryType,\n            //   wkt: wktfeaturegeom,\n            // };\n            // console.log(Param);\n            if (this.mapControlVariable.location_by == 'AOI') {\n\n              this.mapControlVariable.is_AOI_Feature_selected = true;\n              this.mapControlVariable.location_by_wktValue = wktfeaturegeom;\n              this.mapControlVariable.location_by_geometryType = geometryType;\n            } else {\n              this.$notify({\n                title: 'Warning',\n                message: \"To select this feature you need to select 'Select on map' from drop down menu\",\n                type: 'warning'\n              });\n              this.selectInteraction.getFeatures().clear();\n              this.mapControlVariable.is_AOI_Feature_selected = false;\n              this.mapControlVariable.location_by_wktValue = '';\n              this.mapControlVariable.location_by_geometryType = '';\n            }\n\n          } else {\n            if (this.mapControlVariable.location_by == 'AOI') {\n              this.mapControlVariable.is_AOI_Feature_selected = false;\n              this.mapControlVariable.location_by_wktValue = '';\n              this.mapControlVariable.location_by_geometryType = '';\n            }\n          }\n        }\n      }\n    },\n    CatalogSlicingParam(url, startDate, endDate) {\n      let param = {\n        url: url,\n        data_ext: '.nc',\n        startDate: startDate,\n        endDate: endDate,\n      }\n      return param\n    },\n    async addRasterLayerToMap(kk) {\n      let slicingParam, responseData, resPonseParsed, wmsList = [], isTrue;\n      let catalogURl = threddDataSource + kk.catalog;\n      if (this.mapControlVariable.data_period != \"Forecast\") {\n        slicingParam = this.CatalogSlicingParam(catalogURl, kk.getStartDate(), kk.getEndDate());\n        responseData = await this.PostSlicedFromCatalog(slicingParam);\n        resPonseParsed = responseData;\n        isTrue = resPonseParsed.data.length;\n        if (isTrue) {\n          resPonseParsed.data.forEach(function (fileName) {\n            let url = catalogURl.replace(\"/catalog/\", \"/wms/\").replace(\"catalog.xml\", fileName);\n            wmsList.push(url)\n          });\n        }\n      } else {\n        wmsList = await this.AirPollutionWatchApp.getForecastWMSList(catalogURl);\n        isTrue = wmsList.length;\n        console.log(isTrue)\n      }\n      if (isTrue) {\n        var Newlayer;\n        if (kk.isTimeDimensionLayer) {\n          if (kk.useSLD) {\n            let SLD = kk.SLD.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n            let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&SLD_BODY=';\n            let legendWMS = '';\n            if (!kk.legendPath) {\n              if (Array.isArray(wmsList)) {\n                legendWMS = wmsList[0] + LegendParameter + encodeURIComponent(SLD).toString();\n              } else {\n                legendWMS = wmsList + LegendParameter + encodeURIComponent(SLD).toString();\n              }\n            } else {\n              legendWMS = kk.legendPath\n            }\n            console.log(legendWMS);\n            let timedimensionTilePara = kk.threddLayerProp;\n            timedimensionTilePara.source.params.SLD_BODY = SLD;\n            timedimensionTilePara.source.url = wmsList;\n            timedimensionTilePara.legendPath = rgbLegend;\n            timedimensionTilePara.wmsList = wmsList;\n            timedimensionTilePara.changeWMSProxy = true;\n            // timedimensionTilePara.showAnimationButton = true;\n            // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n            let le = {\n              title: timedimensionTilePara.title,\n              // typeGeom: 'Point',\n              style: new Style({\n                image: new Icon({\n                  src: rgbLegend,\n                  crossOrigin: 'anonymous' // Enable print\n                })\n              }),\n              size: [60, 30]\n            };\n            timedimensionTilePara.OLEXTLegendObject = le;\n            Newlayer = new TimeDimensionTile(timedimensionTilePara);\n            await Newlayer.init().then(() => {\n              this.mapObject.addThreddsLayer(Newlayer);\n              let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true, 'withOpacityChange');\n              l5.setVisibleDivBind(kk.VisibleDivBind);\n              let properties = Newlayer.getProperties()\n              if (properties.mask) {\n                console.log(properties)\n                if (properties.CropOrMask == 'crop') {\n                  Newlayer.setCrop(this.maskCoordinate);\n                } else {\n                  Newlayer.setMask(this.maskCoordinate);\n                }\n              }\n              this.appendTimeSeriesLayerCollection(l5);\n              // myApp.AllBindedLayersList.push(l5);\n            });\n          } else {\n            let timedimensionTilePara = kk.threddLayerProp;\n            let LegendParameter = '?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&LAYERS=' + timedimensionTilePara.source.params.LAYERS + '&COLORSCALERANGE=' + timedimensionTilePara.source.params.COLORSCALERANGE + '&STYLES=' + timedimensionTilePara.source.params.STYLES;\n            let legendWMS = '';\n            if (!kk.legendPath) {\n              if (Array.isArray(wmsList)) {\n                legendWMS = wmsList[0] + LegendParameter;\n              } else {\n                legendWMS = wmsList + LegendParameter;\n              }\n            } else {\n              legendWMS = kk.legendPath\n            }\n            timedimensionTilePara.source.url = wmsList;\n            timedimensionTilePara.legendPath = this.PROXY_PREFIX + legendWMS;\n            timedimensionTilePara.wmsList = wmsList;\n            timedimensionTilePara.changeWMSProxy = true;\n            // timedimensionTilePara.showAnimationButton = true;\n            // timedimensionTilePara.animationGIFFunction = this.downloadAnimation;\n            let le = {\n              id: timedimensionTilePara.id,\n              title: timedimensionTilePara.title,\n              typeGeom: 'Point',\n              style: new Style({\n                image: new Icon({\n                  src: this.PROXY_PREFIX + legendWMS,\n                  crossOrigin: 'anonymous' // Enable print\n                })\n              }),\n              size: [60, 250]\n            };\n            timedimensionTilePara.OLEXTLegendObject = le;\n            Newlayer = new TimeDimensionTile(timedimensionTilePara);\n            let AddRemoveLegendFunction = function () {\n              if (this.getProperties().visible) {\n                that.addLegend(this.getProperties().OLEXTLegendObject);\n              } else {\n                that.removeLegend(this.getProperties().OLEXTLegendObject);\n              }\n            };\n\n            let that = this;\n            Newlayer.on('change:visible', AddRemoveLegendFunction);\n            await Newlayer.init().then(() => {\n              this.mapObject.addThreddsLayer(Newlayer);\n              // myApp.map.addThreddsLayer(val);\n              let l5 = new LayerSwitcher(\".layerCollection\", Newlayer, true);\n              l5.setVisibleDivBind(kk.VisibleDivBind);\n              let properties = Newlayer.getProperties()\n              if (properties.mask) {\n                if (properties.CropOrMask == 'crop') {\n                  Newlayer.setCrop(this.maskCoordinate);\n                } else {\n                  Newlayer.setMask(this.maskCoordinate);\n                }\n              }\n              this.appendTimeSeriesLayerCollection(l5);\n              // myApp.AllBindedLayersList.push(l5);\n            });\n          }\n        }\n        kk.isDataThere = true;\n\n\n        if (this.OnlyOnceForInitialCompute) {\n          this.OnlyOnceForInitialCompute = false;\n          setTimeout(() => {\n            this.computeData();\n          }, 1500);\n        }\n      } else {\n        kk.initilize = false;\n        this.$notify({\n          title: 'Warning',\n          message: kk.threddLayerProp.title + ' data is not available.',\n          type: 'warning'\n        });\n      }\n    },\n\n    async addVectorLayerToMap(obj1, obj2, resolve) {\n      let sd = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n      let ed = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.endDate);\n      let regionOrCountry = 0;\n      let Param = '?ModelClass=' + obj2.ModelClass + \"&ModelClassDataList=\" + obj2.ModelClassDataList + '&typeName=' + obj2.typeName + '&StartDate=' + sd + '&EndDate=' + ed + '&rid=' + regionOrCountry\n      let GeoJSON = await this.getGeoJsonForOneSatation(Param);\n      let GeoJSONParse = GeoJSON;\n      obj2.childrenData = [];\n      GeoJSONParse.features.forEach(function (objFeature) {\n        let stationOnCascaderObject = {\n          label: objFeature.properties.name,\n          value: objFeature.properties.id, folder_name: objFeature.properties.folder_name\n        };\n        obj2.childrenData.push(stationOnCascaderObject);\n      });\n      if (GeoJSONParse.features.length) {\n        obj2.isDatathere = true;\n        let legendPathImage = obj2.value == 11 ? AODAeroNet : usembassyPm2p5;\n        var VectorLayer = new OlVectorLayer({\n          id: obj2.layerId,\n          title: obj2.label,\n          visible: false,\n          legendPath: legendPathImage,\n          selId: [],\n          source: new OlVectorSource({\n            features: (new OlGeoJSON()).readFeatures(GeoJSONParse),\n          }),\n          style: obj2.styleFunction,\n          zIndex: 22\n        });\n        this.mapObject.addLayer(VectorLayer);\n        let l3 = new LayerSwitcher(\".layerCollection\", VectorLayer, false);\n        l3.setVisibleDivBind(false);\n        this.appendTimeSeriesLayerCollection(l3);\n      } else {\n        obj2.isDatathere = false;\n      }\n      resolve();\n    },\n    ClearWMSWithNoDataAndVectorDatawithNodata() {\n      // for clearing wms with no data on data base\n      this.AirPollutionWatchApp.cascaderObj.forEach((value) => {\n        let id = value.threddLayerProp.id;\n        let isDatathere = value.isDataThere;\n        this.AirPollutionWatchApp.cascaderObj.reduce(function (total, currentValue) {\n          let dd = currentValue.children.filter(function (currentValue1) {\n            if (currentValue1.layerId === id) {\n              if (isDatathere === false) {\n                return false\n              } else {\n                return true\n              }\n            } else {\n              return true\n            }\n          });\n          currentValue.children = dd;\n        }, 0)\n        this.AirPollutionWatchApp.cascaderObj.reduce(function (total, currentValue, currentIndex, arr) {\n          if (!currentValue.children.length) {\n            arr.splice(currentIndex, 1);\n          }\n        }, 0);\n      });\n\n      // for clearing vector data with no data\n      this.AirPollutionWatchApp.cascaderObj.reduce(function (total, currentValue, currentIndex, arr) {\n        let dd = currentValue.children.filter(function (currentValue1) {\n          if (currentValue1.stationData === true && currentValue1.isDatathere === false) {\n            return false\n          } else {\n            return true\n          }\n        });\n        currentValue.children = dd;\n        if (!currentValue.children.length) {\n          arr.splice(currentIndex, 1);\n        }\n      }, 0);\n\n    },\n    enableTrueColorMap() {\n      this.TimeSeriesLayerCollection.forEach((val) => {\n        let id = val.getProperties().id;\n        if (id.split(\"__\")[0].toUpperCase() == this.mapControlVariable.data_period.toUpperCase()) {\n          if (id == this.mapControlVariable.data_period + \"__TerraModisTrueColor\") {\n            val.setVisibleDivBind(true);\n          } else {\n            val.setVisibleDivBind(false);\n          }\n        } else {\n          val.setVisibleDivBind(false);\n        }\n      });\n    },\n    // async addLayersToMap() {\n    //   var that = this;\n    //   let aa = \"data__layer__initilize__\" + that.mapControlVariable.data_period;\n    //\n    //   if (that[aa] == false) {\n    //     const loading = ElLoading.service({\n    //       lock: true,\n    //       text: 'Loading ' + that.mapControlVariable.data_period + \" data.....\",\n    //       background: 'rgba(0, 0, 0, 0.7)',\n    //     });\n    //     var PromiseListRasterData = [];\n    //     for (let kk of this.AirPollutionWatchApp.cascaderObj) {\n    //       let al1 = new Promise((resolve) => {\n    //         setTimeout(this.addRasterLayerToMap, 1, kk, resolve);\n    //       });\n    //       PromiseListRasterData.push(al1);\n    //     }\n    //     // var PromiseListVectorData = [];\n    //     for (let obj1 of this.AirPollutionWatchApp.cascaderObj) {\n    //       for (let obj2 of obj1.children) {\n    //         if (obj2.stationData == true) {\n    //           let al2 = new Promise((resolve) => {\n    //             setTimeout(this.addVectorLayerToMap, 1, obj1, obj2, resolve);\n    //           });\n    //           // PromiseListVectorData.push(al2);\n    //           PromiseListRasterData.push(al2);\n    //         }\n    //       }\n    //     }\n    //     console.log(\"------------------Before promise-----------------\");\n    //     await Promise.all(PromiseListRasterData).then(() => {\n    //       this.enableTrueColorMap();\n    //       this.ClearWMSWithNoDataAndVectorDatawithNodata();\n    //       that[aa] = true;\n    //       this.ObservationStationOption();\n    //       console.log(\"------------------Inside promise-----------------\");\n    //       loading.close();\n    //     });\n    //   } else {\n    //     this.enableTrueColorMap();\n    //   }\n    // },\n    //\n    computeData() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n          if (this.mapControlVariable.parameter_by_location__1.wktValue && this.mapControlVariable.parameter_by_location__2.wktValue && this.mapControlVariable.parameter_by_location__3.wktValue && this.mapControlVariable.parameter_by_location__4.wktValue) {\n            eventHub.$emit('getVisualization');\n          } else {\n            this.$notify({\n              title: 'Warning',\n              message: 'Please select locations on all dropdown menu.',\n              type: 'warning'\n            });\n          }\n\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please Select a pollutant',\n            type: 'warning'\n          });\n        }\n      } else {\n        if (this.location_by_pollutant_value1.length > 0 && this.location_by_pollutant_value2.length > 0 && this.location_by_pollutant_value3.length > 0 && this.location_by_pollutant_value4.length > 0 && this.mapControlVariable.location_by_wktValue) {\n          eventHub.$emit('getVisualization');\n        } else {\n\n\n          this.$notify({\n            title: 'Warning',\n            message: 'Please select pollutants on all dropdown menu.',\n            type: 'warning'\n          });\n        }\n      }\n    },\n    ObservationStationOption() {\n      if (this.mapControlVariable.select_by == \"Parameter\") {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.children) {\n              delete obj2.children;\n            }\n          });\n        });\n      } else {\n        this.AirPollutionWatchApp.cascaderObj.forEach((obj1) => {\n          obj1.children.forEach((obj2) => {\n            if (obj2.childrenData) {\n              obj2.children = obj2.childrenData;\n            }\n          });\n        });\n      }\n    },\n    getStationInfoObject(stationObjectValue) {\n      let interestedObje = {};\n      this.AirPollutionWatchApp.cascaderObj.filter((obj1) => {\n        return obj1.children.filter((obj2) => {\n          if (obj2.value == stationObjectValue) {\n            interestedObje = obj2;\n          }\n          return obj2.value == stationObjectValue\n        }).length > 0 ? true : false;\n      });\n      return interestedObje;\n    },\n    SetLayerOfSelectByParameterLayer(IsViz) {\n      if (this.mapControlVariable.parameter_by_pollutant_value.length) {\n        let kk = this.getStationInfoObject(this.mapControlVariable.parameter_by_pollutant_value[1]);\n        let layer = this.getBindedLayer(kk.layerId);\n        if (IsViz) {\n          layer.setVisibleDivBind(IsViz);\n        } else {\n          layer.setVisibleDivBind(IsViz);\n        }\n      }\n    },\n    setLayerVisible(layerId, IsViz) {\n      let layer = this.getBindedLayer(layerId);\n      if (IsViz) {\n        layer.setVisible(IsViz);\n      } else {\n        layer.setVisibleDivBind(IsViz);\n      }\n    },\n    async onChangePollutantsOnSelectByLocation(newVal, oldVal) {\n      if (newVal.length) {\n        let kk = this.getStationInfoObject(newVal[1]);\n        if (Object.keys(kk).length != 0) {\n          await this.AddLayerToLayerList(kk);\n          let layer = this.getBindedLayer(kk.layerId);\n          layer.setVisibleDivBind(true);\n        }\n      }\n      if (oldVal.length) {\n        let count = 0;\n        if (this.location_by_pollutant_value1.length) {\n          if (this.location_by_pollutant_value1[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value2.length) {\n          if (this.location_by_pollutant_value2[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value3.length) {\n          if (this.location_by_pollutant_value3[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (this.location_by_pollutant_value4.length) {\n          if (this.location_by_pollutant_value4[1] == oldVal[1]) {\n            count = count + 1\n          }\n        }\n        if (count === 0) {\n          let kk = this.getStationInfoObject(oldVal[1]);\n          if (Object.keys(kk).length != 0) {\n            let layer = this.getBindedLayer(kk.layerId);\n            layer.setVisibleDivBind(false);\n          }\n        }\n      }\n      console.log(newVal)\n      console.log(oldVal)\n    },\n    async AddLayerToLayerList(kk) {\n      console.log(\"called\");\n\n      if (kk.layerProperties.initilize == false) {\n        console.log(\"ok not initilized\");\n\n        kk.layerProperties.initilize = true;\n        if (kk.stationData == true) {\n          let GeoServerWMSURL = 'http://localhost:8080/geoserver/AirQuality/wms';\n          let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n          let lyr = kk.layerProperties.layer;\n          let le = {\n            title: kk.layerProperties.title,\n            // typeGeom: 'Point',\n            style: new Style({\n              image: new Icon({\n                src: WMSURLWithRequestParameter + lyr,\n                crossOrigin: 'anonymous' // Enable print\n              })\n            }),\n            size: [60, 30]\n          };\n          let layerObj = new ImageLayer({\n            id: kk.layerProperties.id,\n            title: kk.layerProperties.title,\n            visible: kk.layerProperties.visible,\n            legendPath: WMSURLWithRequestParameter + lyr,\n            zIndex: kk.layerProperties.zIndex,\n            OLEXTLegendObject: le,\n            opacity: kk.layerProperties.opacity,\n            source: new ImageWMS({\n              url: GeoServerWMSURL,\n              crossOrigin: 'anonymous',\n              params: {'LAYERS': lyr},\n              serverType: 'geoserver',\n            }),\n          });\n          this.mapObject.addLayer(layerObj);\n          let l5 = new LayerSwitcher(\".layerCollection\", layerObj, false, false);\n          this.appendTimeSeriesLayerCollection(l5);\n          let sd = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.startDate);\n          let ed = this.AirPollutionWatchApp.formatDate(this.AirPollutionWatchApp.endDate);\n          let regionOrCountry = 0;\n          let Param = '?ModelClass=' + kk.ModelClass + \"&ModelClassDataList=\" + kk.ModelClassDataList + '&typeName=' + kk.typeName + '&StartDate=' + sd + '&EndDate=' + ed + '&rid=' + regionOrCountry\n          let dataResponse = await this.getGeoJsonForOneSatation(Param);\n          kk.childrenData = dataResponse.data\n        } else {\n          console.log(\"before-----\");\n          await this.addRasterLayerToMap(kk.layerProperties);\n          // await this.addRasterLayerToMap(kk.layerProperties);\n          console.log(\"after-----\");\n        }\n      }\n    },\n  },\n  computed: {\n    ...mapState([\"selectInteraction\", \"mapObject\", \"TimeSeriesLayerCollection\", \"WorkingVectorLayer\", \"mapControlVariable\"]),\n    ...mapGetters([\"getBindedLayer\", \"getLayer\"]),\n    cascaderData() {\n      return this.AirPollutionWatchApp.cascaderObj;\n    },\n    SelectDefaultLocation() {\n      return this.mapControlVariable.default_location;\n    },\n    SelectLocationBy() {\n      return this.mapControlVariable.location_by;\n    },\n    SelectByOption() {\n      return this.mapControlVariable.select_by;\n    },\n    SelectDataPeriod() {\n      return this.mapControlVariable.data_period;\n    },\n    SelectByParameterPollutant() {\n      return this.mapControlVariable.parameter_by_pollutant_value;\n    },\n    location_by_pollutant_value1() {\n      return this.mapControlVariable.location_by_pollutant_value1;\n    },\n    location_by_pollutant_value2() {\n      return this.mapControlVariable.location_by_pollutant_value2;\n    },\n    location_by_pollutant_value3() {\n      return this.mapControlVariable.location_by_pollutant_value3;\n    },\n    location_by_pollutant_value4() {\n      return this.mapControlVariable.location_by_pollutant_value4;\n    },\n  },\n  async mounted() {\n    setTimeout(() => {\n      this.mapControlVariable.parameter_by_pollutant_value = [1, 14];\n    }, 1500);\n\n    setTimeout(() => {\n      this.selectInteraction.on('select', () => {\n        this.featureSelectorDeleteUpdate();\n      });\n    }, 2000);\n\n    // setTimeout(() => {\n    //\n    //   this.computeData();\n    // }, 2500);\n\n  },\n  async created() {\n    let defaultLocation = await this.getCityData();\n    this.options.default_location = defaultLocation.data;\n  },\n  deactivated() {\n\n  }\n}\n</script>\n\n<style scoped>\n.feature-selected {\n  color: #67C23A;\n  border: 1px solid #67C23A5C;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.no-feature-selected {\n  color: #E6A23C;\n  border: 1px solid #e6a23c5c;\n  border-radius: 5px;\n  padding: 0px 5px;\n  text-align: center;\n}\n\n.pollutant-cascader:not(:last-child) {\n  padding-bottom: 10px;\n}\n\n.body-container {\n  height: calc(100% - 50px);\n}\n\nbutton.el-button.el-button--primary.el-button--mini.compute-now, button.el-button.el-button--primary.el-button--mini.compute-now:focus, button.el-button.el-button--primary.el-button--mini.compute-now:hover {\n  background-color: #66b1ff;\n  border-color: #66b1ff;\n}\n</style>","import { render } from \"./mapControlsForecast.vue?vue&type=template&id=31601d0e&scoped=true\"\nimport script from \"./mapControlsForecast.vue?vue&type=script&lang=js\"\nexport * from \"./mapControlsForecast.vue?vue&type=script&lang=js\"\n\nimport \"./mapControlsForecast.vue?vue&type=style&index=0&id=31601d0e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-31601d0e\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div id=\"map-container2\" ref=\"LayerSelectorDropdown\">\n    </div>\n    <!--    <div id=\"layerSwitcherDiv\" class=\"ol-unselectable ol-control\" @click=\"LayerSwitcherClick()\">-->\n    <!--      <button>-->\n    <!--        <img src=\"@/assets/layers.svg\" style=\"height: 20px;width: 20px;\">-->\n    <!--      </button>-->\n    <!--    </div>-->\n\n    <!--    <el-drawer-->\n    <!--        title=\"Layers\"-->\n    <!--        v-model=\"drawer\"-->\n    <!--        custom-class=\"drawerCustomCSS\"-->\n    <!--        :append-to-body=\"drawerAppendToBody\"-->\n    <!--        :modal=\"false\"-->\n    <!--        :modal-class=\"'drawerForLayersList'\"-->\n    <!--    >-->\n    <!--      <span>-->\n    <!--        <div class=\"layerCollection\"></div>-->\n    <!--          </span>-->\n    <!--    </el-drawer>-->\n    <PrintMap></PrintMap>\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\n// import Control from \"ol/control/Control\"\n// import OSM from \"ol/source/OSM\";\nimport XYZ from 'ol/source/XYZ';\n// import {Image as ImageLayer, Tile as TileLayer} from 'ol/layer';\nimport {Tile as TileLayer} from 'ol/layer';\n// import TileWMS from \"ol/source/TileWMS\";\n// import ImageWMS from 'ol/source/ImageWMS';\nimport View from \"ol/View\";\nimport {dataSelect} from \"../utils/data\";\nimport eventHub from \"../utils/utils\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import EDALSLD from 'ol-plus/sld/EDALSLD';\n// import {ThreddsServer} from '../config';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n// import {lineString, lineDistance, area as turfArea,polygon as turfPolygon, length as turfLength} from '@turf/turf';\nimport {getArea, getLength,} from 'ol/sphere';\nimport LineString from 'ol/geom/LineString';\n// import LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n\n// import {MajorBasinExtent, BasinExtent, mbasin, dataSelect, WMSSLD, legendImage} from \"../utils/data\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import {ThreddsServer} from \"../utils/config\";\n\n\n// import 'ol-ext/control/Search.css';\nimport SearchNominatim from 'ol-ext/control/SearchNominatim';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nimport Text from \"ol/style/Text\";\nimport {Icon} from 'ol/style';\nimport {toSize} from 'ol/size';\nimport ImageIcon from '../assets/markers_default.png';\nimport {getCenter as ol_extent_getCenter} from 'ol/extent';\nimport GeoJSON from \"ol/format/GeoJSON\";\n// import Legend from \"ol-ext/legend/Legend\";\nimport Legend from \"../utils/customLegend\"\nimport LegendControl from \"ol-ext/control/Legend\";\nimport CanvasScaleLine from \"ol-ext/control/CanvasScaleLine\";\nimport PrintDialog from \"ol-ext/control/PrintDialog\";\n\nimport OLPolygon from 'ol/geom/Polygon';\nimport OlSelect from 'ol/interaction/Select';\nimport OlDraw from 'ol/interaction/Draw';\nimport OlExtTextButton from 'ol-ext/control/TextButton';\nimport Bar from 'ol-ext/control/Bar';\nimport OlExtButton from 'ol-ext/control/Button';\nimport OlExtToggle from 'ol-ext/control/Toggle';\n// import 'ol-ext/control/Bar.css'\nimport CircleStyle from \"ol/style/Circle\";\n// import ScaleLine from \"ol/control/ScaleLine\";\nimport CanvasTitle from \"ol-ext/control/CanvasTitle\";\nimport {defaults} from \"ol/control\";\n\nimport {saveAs} from 'file-saver';\nimport {jsPDF} from \"jspdf\";\n\nimport {mapMutations, mapState} from 'vuex';\n\nimport PrintMap from \"./PrintMap\";\n\n// import {GeoServerHost} from \"../config\";\n\nexport default {\n  name: \"mapComponentEmission\",\n  components: {PrintMap},\n  data() {\n    return {\n      // drawerAppendToBody: true,\n      mapObj: '',\n      HighLightedLayer: '',\n      view: '',\n      mapObject: '',\n      MajorBasin: '',\n      AllLayers: '',\n      selectedFilesOnAYear: [],\n      // drawer: true,\n    }\n  },\n  created() {\n    this.mapControlVariable.LegendObject = new Legend({\n      title: 'Legend',\n      margin: 3,\n      // items: legendItems\n      size: [60, 30]\n    });\n\n  },\n  methods: {\n    ...mapMutations([\"setSelectedLayerObj\", \"appendTimeSeriesLayerCollection\", \"setSelectInteraction\", \"setMapObject\", \"setWorkingVectorLayer\", \"addLegend\", \"removeLegend\"]),\n    ...mapMutations([\"appendTimeSeriesLayerCollection\"]),\n    mapInitilization() {\n\n      // let osm = new TileLayer({\n      //   source: new OSM({attributions: [],}),\n      //   // visible:false\n      // });\n\n      let esri_world_topomap = new TileLayer({\n        visible: true,\n        zIndex: 1,\n        source: new XYZ({\n          attributions: [],\n          url:\n              'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n              'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n          crossOrigin: \"Anonymous\"\n        }),\n      });\n\n      let view = new View({\n        center: [9388155.512006583, 3291367.8109067543],\n        zoom: 4,\n        // extent: [ 5709706.0674567185, 1775943.9109664306, 12063988.064014196, 4819310.551422906 ]\n\n      });\n      // let ScaleControl = new ScaleLine({\n      //   units: 'metric'\n      // });\n      //\n      var map = new Map({\n        layers: [],\n        // target: this.$refs['map-root'],\n        renderer: 'canvas',\n        target: 'map-container2',\n        controls: defaults({\n          attribution: false\n        }).extend([]),\n        view: view,\n      });\n      // map.addLayer(osm);\n      map.addLayer(esri_world_topomap);\n      this.mapObject = map;\n      window.mapObject = map;\n      this.view = view;\n\n      // this.mapObject.addControl(\n      //     new Control({\n      //       element: document.getElementById('layerSwitcherDiv')\n      //     })\n      // );\n      map.getView().fit([5709706.0674567185, 1775943.9109664306, 12063988.064014196, 4819310.551422906], map.getView());\n      this.setMapObject(this.mapObject);\n    },\n    legendObjectCollection() {\n      let legendObjectEnabled = [];\n      this.TimeSeriesLayerCollection.forEach(function (layerObj) {\n        let Properties = layerObj.getProperties();\n        console.log(Properties.legendPath);\n        let lObj = {\n          title: Properties.title,\n          // typeGeom: 'Point',\n          style: new Style({\n            image: new Icon({\n              src: Properties.legendPath,\n              crossOrigin: 'anonymous' // Enable print\n            })\n          })\n        };\n        legendObjectEnabled.push(lObj)\n      });\n      return legendObjectEnabled;\n    },\n    addGeoCodingAndInteractionBar() {\n      var map = this.mapObject;\n\n// Set the control grid reference\n      var search = new SearchNominatim({\n        polygon: true,\n        reverse: false,\n        position: true,\t// Search, with priority to geo position,\n        // maxHistory: -1,\n        className: 'OSMBasedGeocodingEmissionPage',\n      });\n\n// search.set('copy', false)\n\n      var GeoCodingAndDrawLayer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 999\n      });\n\n      this.setWorkingVectorLayer(GeoCodingAndDrawLayer);\n\n      map.addLayer(GeoCodingAndDrawLayer);\n\n      map.addControl(search);\n\n\n// Select feature when click on the reference index\n      search.on('select', function (e) {\n        // console.log(e);\n        // GeoCodingAndDrawLayer.getSource().clear();\n        removePreviousSearchFeature();\n        // Check if we get a geojson to describe the search\n        if (e.search.geojson) {\n          var format = new GeoJSON();\n          var f = format.readFeature(e.search.geojson, {\n            dataProjection: \"EPSG:4326\",\n            featureProjection: map.getView().getProjection()\n          });\n          delete e.search.geojson;\n          f.setProperties(e.search);\n          GeoCodingAndDrawLayer.getSource().addFeature(f);\n          var view = map.getView();\n          var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n          var zoom = view.getZoomForResolution(resolution);\n          var center = ol_extent_getCenter(f.getGeometry().getExtent());\n          // redraw before zoom\n          setTimeout(function () {\n            view.animate({\n              center: center,\n              zoom: Math.min(zoom, 16)\n            });\n          }, 100);\n        } else {\n          map.getView().animate({\n            center: e.coordinate,\n            zoom: Math.max(map.getView().getZoom(), 16)\n          });\n        }\n        UpDateVectorLayerStyle();\n      });\n\n      // Main control bar\n      var mainbar = new Bar();\n      mainbar.setPosition('top-left');\n\n      map.addControl(mainbar);\n\n// Edit control bar\n      var editbar = new Bar({\n        toggleOne: true,\t// one control active at the same time\n        group: false\t\t\t// group controls together\n      });\n      mainbar.addControl(editbar);\n\n// Add selection tool:\n//  1- a toggle control with a select interaction\n//  2- an option bar to delete / get information on the selected feature\n      var sbar = new Bar();\n      sbar.addControl(new OlExtButton({\n        html: '<i class=\"fa fa-times\"></i>',\n        title: \"Delete\",\n        handleClick: function () {\n          var features = selectCtrl.getInteraction().getFeatures();\n          if (!features.getLength()) info(\"Select an object first...\");\n          else info(features.getLength() + \" object(s) deleted.\");\n\n          features.forEach(function (f) {\n            console.log(f);\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          });\n          selectCtrl.getInteraction().getFeatures().clear();\n          selectCtrl.getInteraction().dispatchEvent({type: 'select'});\n        }\n      }));\n\n\n      var selectCtrl = new OlExtToggle({\n        html: '<i class=\"fa fa-hand-pointer\"></i>',\n        title: \"Select\",\n        interaction: new OlSelect({\n          hitTolerance: 2,\n          style: new Style({\n            image: new CircleStyle({\n              radius: 5,\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              }),\n            }),\n            stroke: new Stroke({\n              color: [255, 0, 0, 1],\n              opacity: 1,\n              width: 2\n            }),\n            fill: new Fill({\n              color: '#e5e5ff50'\n            })\n            // Commented to only see the lines\n            //,fill: new ol.style.Stroke ({\n            //  color: [155, 155, 155, 0.4]\n            //})\n          }),\n          layers: [GeoCodingAndDrawLayer]\n        }),\n        bar: sbar,\n        autoActivate: true,\n        active: true\n      });\n      this.setSelectInteraction(selectCtrl.getInteraction());\n\n      editbar.addControl(selectCtrl);\n      this.setSelectedLayerObj(selectCtrl.getInteraction());\n// Add editing tools\n      var pedit = new OlExtToggle({\n        html: '<i class=\"fa fa-map-marker-alt\" ></i>',\n        title: 'Point',\n        interaction: new OlDraw({\n          type: 'Point',\n          source: GeoCodingAndDrawLayer.getSource()\n        })\n      });\n      editbar.addControl(pedit);\n      var fedit = new OlExtToggle({\n        html: '<i class=\"fa fa-draw-polygon\" ></i>',\n        title: 'Polygon',\n        interaction: new OlDraw({\n          type: 'Polygon',\n          source: GeoCodingAndDrawLayer.getSource(),\n          // Count inserted points\n          geometryFunction: function (coordinates, geometry) {\n            this.nbpts = coordinates[0].length;\n            if (geometry) geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            else geometry = new OLPolygon(coordinates);\n            return geometry;\n          }\n        }),\n        // Options bar ssociated with the control\n        bar: new Bar({\n          controls: [new OlExtTextButton({\n            html: 'undo',//'<i class=\"fa fa-mail-reply\"></i>',\n            title: \"undo last point\",\n            handleClick: function () {\n              if (fedit.getInteraction().nbpts > 1) fedit.getInteraction().removeLastPoint();\n            }\n          }),\n            new OlExtTextButton({\n              html: 'finish',\n              title: \"finish\",\n              handleClick: function () {\n                // Prevent null objects on finishDrawing\n                if (fedit.getInteraction().nbpts > 3) fedit.getInteraction().finishDrawing();\n              }\n            })\n          ]\n        })\n      });\n      editbar.addControl(fedit);\n\n\n      // fedit.getInteraction().on('drawend', function (e) {\n      //\n      //   console.log(e.feature);\n      //   console.log(e.feature);\n      //\n      //   // GeoCodingAndDrawLayer.getSource().removeFeature(e.feature);\n      //\n      //\n      // });\n\n      fedit.getInteraction().on('drawstart', function () {\n        GeoCodingAndDrawLayer.getSource().once('addfeature', handleAddFeature);\n      });\n\n      function handleAddFeature(evt) {\n        let coordi = evt.feature.getGeometry().getCoordinates();\n\n        const area = getArea(evt.feature.getGeometry());\n        // Sq.Km\n        let outputArea = Math.round((area / 1000000) * 100) / 100;\n        console.log(outputArea);\n\n        let li = new LineString(coordi);\n        const length = getLength(li);\n        // In Km\n        let outputLength = Math.round((length / 1000) * 100) / 100;\n        console.log(outputLength);\n        // GeoCodingAndDrawLayer.getSource().removeFeature(evt.feature);\n      }\n\n// Show info\n      function info(i) {\n        console.log(i);\n        // document.querySelector(\"#info\").innerHTML(i || \"\");\n      }\n\n      function UpDateVectorLayerStyle() {\n        GeoCodingAndDrawLayer.getSource().forEachFeature(function (feature) {\n          let StyleObj = null;\n          if (feature.getProperties().osm_id) {\n            StyleObj = [\n              new Style({\n                stroke: new Stroke({\n                  color: [0, 0, 0, 0],\n                  opacity: 1,\n                  width: 3\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff00'\n                })\n                // Commented to only see the lines\n                //,fill: new ol.style.Stroke ({\n                //  color: [155, 155, 155, 0.4]\n                //})\n              }),\n              // Dash white lines (second style, on the top)\n              new Style({\n                image: new Icon({\n                  anchor: [0.5, 46],\n                  anchorXUnits: 'fraction',\n                  anchorYUnits: 'pixels',\n                  src: ImageIcon,\n                  size: toSize([40, 45]),\n                  // offset:[20,20]\n                }),\n                stroke: new Stroke({\n                  color: [0, 0, 255, 1.0],\n                  opacity: 1,\n                  width: 3,\n                  lineDash: [4, 8, 4, 8]\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff40'\n                })\n              })\n            ];\n\n          } else {\n            StyleObj = new Style({\n              image: new CircleStyle({\n                radius: 5,\n                stroke: new Stroke({\n                  color: [255, 0, 0, 1],\n                  opacity: 1,\n                  width: 2\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff50'\n                }),\n              }),\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              })\n              // Commented to only see the lines\n              //,fill: new ol.style.Stroke ({\n              //  color: [155, 155, 155, 0.4]\n              //})\n            });\n\n          }\n          feature.setStyle(StyleObj);\n\n        });\n      }\n\n      function removePreviousSearchFeature() {\n        var features = GeoCodingAndDrawLayer.getSource().getFeatures();\n        features.forEach(function (f) {\n          if (f.getProperties().osm_id) {\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          }\n        });\n        // console.log(features);\n      }\n\n      console.log(\"second\");\n      eventHub.$emit('runFeatureInteractionCode');\n    },\n    addPrintMapFunctionality() {\n      // Add a custom push button with onToggle function\n      // let that = this;\n      var PrintButton = new OlExtButton({\n        html: '<i class=\"fas fa-print\"></i>',\n        className: \"PrintMap\",\n        title: \"Print map\",\n        handleClick: () => {\n\n          // that.PrintMapComponentData.PrintMapDialogVisible = true;\n          // setTimeout(() => {\n          //   eventHub.$emit('OpenDialogOfPrintAndProxyfy');\n          // }, 500);\n\n        }\n      });\n\n      this.mapObject.addControl(PrintButton);\n    },\n    olExtLegentItem(title, id, legend) {\n      return {\n        id: id,\n        title: title,\n        typeGeom: 'Point',\n        style: new Style({\n          image: new Icon({\n            src: legend,\n            crossOrigin: 'anonymous' // Enable print\n          })\n        })\n      };\n\n    },\n    LayerSwitcherClick() {\n      this.drawer = true;\n    },\n    handleClose(done, e) {\n      console.log(e);\n\n      // this.$confirm('You still have unsaved data, proceed?')\n      //     .then(()=> {\n      //       done();\n      //     })\n      //     .catch(()=> {\n      //     });\n    },\n    olextPrintFunction() {\n      // Add a title control\n      this.mapObject.addControl(new CanvasTitle({\n        title: 'my title',\n        visible: false,\n        style: new Style({text: new Text({font: '20px \"Lucida Grande\",Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif'})})\n      }));\n      // let legendItems=[];\n\n\n      // Add a legend to the print\n      var legendCtrl = new LegendControl({legend: this.mapControlVariable.LegendObject});\n      this.mapObject.addControl(legendCtrl);\n\n      // Add a ScaleLine control\n      this.mapObject.addControl(new CanvasScaleLine());\n\n      // Print control\n      var printControl = new PrintDialog({lang: 'en'});\n      printControl.setSize('A4');\n      printControl.setOrientation('landscape');\n      this.mapObject.addControl(printControl);\n\n\n      /* On print > save image file */\n      printControl.on(['print', 'error'], (e) => {\n        // let LegendImageArray = this.legendObjectCollection();\n        // LegendImageArray.forEach(function (ii) {\n        //   console.log(ii);\n        //   legendd.addItem(ii);\n        // });\n        // // legendItems = LegendImageArray;\n        // console.log(LegendImageArray);\n\n        // Print success\n        if (e.image) {\n          if (e.pdf) {\n            // Export pdf using the print info\n            var pdf = new jsPDF({\n              orientation: e.print.orientation,\n              unit: e.print.unit,\n              format: e.print.size\n            });\n            pdf.addImage(e.image, 'JPEG', e.print.position[0], e.print.position[0], e.print.imageWidth, e.print.imageHeight);\n            pdf.save(e.print.legend ? 'legend.pdf' : 'map.pdf');\n          } else {\n            // Save image as file\n            e.canvas.toBlob(function (blob) {\n              var name = (e.print.legend ? 'legend.' : 'map.') + e.imageType.replace('image/', '');\n              saveAs(blob, name);\n            }, e.imageType, e.quality);\n          }\n        } else {\n          console.warn('No canvas to export');\n        }\n      });\n\n    },\n  },\n  computed: {\n    ...mapState([\"TimeSeriesLayerCollection\", \"PrintMapComponentData\", \"mapControlVariable\"]),\n    getInventory() {\n      return dataSelect.Inventory;\n    },\n  },\n\n  beforeMount() {\n  },\n  mounted() {\n    this.mapInitilization();\n    // this.addGeoCoding();\n    this.addGeoCodingAndInteractionBar();\n    // this.addPrintMapFunctionality();\n    this.olextPrintFunction();\n    //\n    // let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n    // let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n    //\n    // let AddRemoveLegendFunction = function () {\n    //\n    //   if (this.getProperties().visible) {\n    //     that.addLegend(this.getProperties().OLEXTLegendObject);\n    //   } else {\n    //     that.removeLegend(this.getProperties().OLEXTLegendObject);\n    //   }\n    // };\n    //\n    // let le1 = this.olExtLegentItem('Country Outline', 'Country_Outline', WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry')\n    // // this.drawer = false;\n    // let countryBoundary = new ImageLayer({\n    //   id: 'Country_Outline',\n    //   title: 'Country Outline',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry',\n    //   zIndex: 6,\n    //   OLEXTLegendObject: le1,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_country_boundry'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le2 = this.olExtLegentItem('Province', 'Province', WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary')\n    //\n    // let provinceBoundary = new ImageLayer({\n    //   id: 'Province',\n    //   title: 'Province',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary',\n    //   zIndex: 5,\n    //   OLEXTLegendObject: le2,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_provincial_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le3 = this.olExtLegentItem('District', 'District', WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary')\n    //\n    // let DistrictBoundary = new ImageLayer({\n    //   id: 'District',\n    //   title: 'District',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary',\n    //   zIndex: 4,\n    //   OLEXTLegendObject: le3,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_district_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let le4 = this.olExtLegentItem('Palika', 'Palika', WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary')\n    //\n    // let PalikaBoundary = new ImageLayer({\n    //   id: 'Palika',\n    //   title: 'Palika',\n    //   visible: false,\n    //   legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary',\n    //   zIndex: 3,\n    //   OLEXTLegendObject: le4,\n    //   source: new ImageWMS({\n    //     url: GeoServerWMSURL,\n    //     crossOrigin: 'anonymous',\n    //     params: {'LAYERS': 'AirQuality:nepal_palika_boundary'},\n    //     serverType: 'geoserver',\n    //   }),\n    // });\n    // let that = this;\n    // countryBoundary.on('change:visible', AddRemoveLegendFunction);\n    // provinceBoundary.on('change:visible', AddRemoveLegendFunction);\n    // DistrictBoundary.on('change:visible', AddRemoveLegendFunction);\n    // PalikaBoundary.on('change:visible', AddRemoveLegendFunction);\n    //\n    // this.mapObject.addLayer(countryBoundary);\n    // this.mapObject.addLayer(provinceBoundary);\n    // this.mapObject.addLayer(DistrictBoundary);\n    // this.mapObject.addLayer(PalikaBoundary);\n    //\n    // let l1 = new LayerSwitcher(\".layerCollection\", countryBoundary, false, false);\n    // let l2 = new LayerSwitcher(\".layerCollection\", provinceBoundary, false, false);\n    // let l3 = new LayerSwitcher(\".layerCollection\", DistrictBoundary, false, false);\n    // let l4 = new LayerSwitcher(\".layerCollection\", PalikaBoundary, false, false);\n    //\n    // l1.setVisible(true);\n    // l2.setVisible(true);\n    // l3.setVisible(true);\n    // l4.setVisible(true);\n    //\n    // this.appendTimeSeriesLayerCollection(l1);\n    // this.appendTimeSeriesLayerCollection(l2);\n    // this.appendTimeSeriesLayerCollection(l3);\n    // this.appendTimeSeriesLayerCollection(l4);\n  },\n}\n</script>\n\n<style>\n#map-container2 {\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n}\n\n#map-container2 .ol-viewport {\n  border-radius: 5px;\n}\n\n#layerSwitcherDiv {\n  right: 0.5em;\n  top: 0.5em;\n  position: absolute;\n}\n\n#layerSwitcherDiv button {\n  line-height: unset;\n  border-radius: 1px;\n}\n\n\n.drawerForLayersList {\n  position: initial !important;\n}\n\n/* OSM Based Geocoding*/\n.ol-search ul li {\n  border-bottom: 1px solid lightgray;\n\n  padding: 10px 5px 10px 5px !important;\n  flex: 1;\n  max-width: 608px;\n  white-space: normal !important;\n  overflow: unset;\n  flex-grow: 1;\n  text-overflow: ellipsis;\n}\n\n.ol-search ul li:last-child {\n  border-bottom: none;\n  border-radius: 0px;\n}\n\n.ol-search ul {\n  list-style: none;\n  cursor: pointer;\n  padding: 0px 5px 0px 5px !important;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  clear: both;\n  cursor: pointer;\n  max-width: 618px;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #fff;\n  font-size: 13px;\n}\n\n.ol-search {\n  z-index: 999;\n}\n\n.ol-search {\n  top: 4.1em;\n  left: 0.5em;\n  /*width: 500px;*/\n}\n\n.ol-search input {\n  width: 600px;\n}\n\n\n.ol-control.ol-bar {\n  left: 3.2em;\n  top: 6em;\n}\n\n.ol-control.ol-bar.ol-top.ol-left, .ol-control.ol-bar.ol-top.ol-right {\n  top: 6.5em;\n  transform: none;\n}\n\n.PrintMap.ol-button.ol-unselectable.ol-control {\n  top: 12em;\n  left: 0.5em;\n}\n\n.LayerDiv {\n  margin-top: 10px;\n}\n\n.withOpacityChange {\n  margin-bottom: 18px;\n}\n\n.ol-scale-line {\n  right: 0;\n  left: auto;\n  bottom: 2em;\n}\n</style>","import { render } from \"./mapComponentForecast.vue?vue&type=template&id=e9fa308c\"\nimport script from \"./mapComponentForecast.vue?vue&type=script&lang=js\"\nexport * from \"./mapComponentForecast.vue?vue&type=script&lang=js\"\n\nimport \"./mapComponentForecast.vue?vue&type=style&index=0&id=e9fa308c&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TabBodyForecast.vue?vue&type=template&id=2b534622&scoped=true\"\nimport script from \"./TabBodyForecast.vue?vue&type=script&lang=js\"\nexport * from \"./TabBodyForecast.vue?vue&type=script&lang=js\"\n\nimport \"./TabBodyForecast.vue?vue&type=style&index=0&id=2b534622&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2b534622\"]])\n\nexport default __exports__","<template>\n  <el-row class=\"full-height\">\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapControlsEmission></mapControlsEmission>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-10 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentEmission :IndexValue=\"1\"></chartComponentEmission>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"12\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-5\">\n          <mapComponentEmission></mapComponentEmission>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentEmission :IndexValue=\"2\" ></chartComponentEmission>\n        </el-col>\n        <el-col :span=\"12\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-5\">\n          <chartComponentEmission :IndexValue=\"3\" ></chartComponentEmission>\n        </el-col>\n      </el-row>\n    </el-col>\n    <el-col :span=\"6\" class=\"full-height\">\n      <el-row class=\"first-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-5 padding-top-10 padding-right-10\">\n          <EmissionStatistics></EmissionStatistics>\n        </el-col>\n      </el-row>\n      <el-row class=\"second-row\">\n        <el-col :span=\"24\"\n                class=\"full-height full-width padding-left-5 padding-bottom-10 padding-top-5 padding-right-10\">\n          <chartComponentEmission :IndexValue=\"4\"></chartComponentEmission>\n        </el-col>\n      </el-row>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\n\n// import about from \"./about\";\nimport chartComponentEmission from \"./chartComponentEmission\";\nimport mapControlsEmission from \"./mapControlsEmission\";\nimport mapComponentEmission from \"./mapComponentEmission\";\nimport EmissionStatistics from \"./EmissionStatistics\";\nimport {mapActions} from \"vuex\";\n\nexport default {\n  name: \"TabBodyEmission\",\n  components: {\n    // about,\n    chartComponentEmission,\n    mapControlsEmission,\n    mapComponentEmission,\n    EmissionStatistics,\n  },\n  methods: {\n    ...mapActions([\"getCascaderOptions\"]),\n  },\n  async mounted() {\n    let data = await this.getCascaderOptions();\n    console.log(data);\n  }\n}\n</script>\n\n<style scoped>\n\n.bg-purple-dark {\n  background: #99a9bf;\n}\n\n.bg-purple {\n  background: #d3dce6;\n}\n\n.bg-purple-light {\n  background: #e5e9f2;\n}\n\n.grid-content {\n  min-height: 36px;\n}\n\n.row-bg {\n  padding: 10px 0;\n  background-color: #f9fafc;\n}\n\n.full-height {\n  height: 100%;\n}\n</style>\n","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <!--    <div class=\"body-container full-height\" >-->\n    <!--    </div>-->\n    <div class=\"chart-option\">\n      <el-row :gutter=\"5\">\n        <el-col :span=\"10\">\n          <div class=\"grid-content bg-purple\">\n            <el-select v-model=\"PlotOptionValue\" placeholder=\"Select plot type\" size=\"mini\" class=\"plotSelection\"\n                       @change=\"ChangePlotOption()\">\n              <el-option\n                  v-for=\"item in PlotOptions\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </div>\n        </el-col>\n        <el-col :span=\"11\">\n          <div class=\"grid-content bg-purple\">\n            <el-cascader\n                v-if=\"PlotOptionValue ==='InventriesComparison'\"\n                v-model=\"CascaderValue\"\n                :options=\"CascaderInventriesComparison\"\n                :props=\"{ expandTrigger: 'hover' }\"\n                size=\"mini\"\n                class=\"full-width\"\n            ></el-cascader>\n            <el-cascader\n                v-if=\"PlotOptionValue ==='SectorContribution'\"\n                v-model=\"CascaderValue\"\n                :options=\"CascaderSectorContribution\"\n                :props=\"{ expandTrigger: 'hover' }\"\n                size=\"mini\"\n                class=\"full-width\"\n            ></el-cascader>\n            <el-cascader\n                v-if=\"PlotOptionValue ==='SectorShare'\"\n                v-model=\"CascaderValue\"\n                :options=\"CascaderSectorShare\"\n                :props=\"{ expandTrigger: 'hover' }\"\n                size=\"mini\"\n                class=\"full-width\"\n            ></el-cascader>\n            <el-cascader\n                v-if=\"PlotOptionValue ==='Timeseries'\"\n                v-model=\"CascaderValue\"\n                :options=\"CascaderTimeSeries\"\n                :props=\"{ expandTrigger: 'hover' }\"\n                size=\"mini\"\n                class=\"full-width\"\n            ></el-cascader>\n\n          </div>\n        </el-col>\n        <el-col :span=\"3\">\n          <div class=\"grid-content bg-purple sync-chart\">\n            <el-button size=\"mini\" @click=\"RefreshChart()\"><i class=\"fas fa-sync\"></i></el-button>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n    <div class=\"chart-div\" id=\"chart\" ref=\"ChartDiv\">\n      <!--      <div class=\"center-content-parent\">-->\n      <!--        <div class=\"center-content-child\">-->\n      <!--          Please select a layer and draw a feature to view the chart-->\n      <!--        </div>-->\n      <!--      </div>      -->\n      <!--      -->\n      <div class=\"flex-center-vertically\">\n        Please select a layer and draw a feature to view the chart\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport eventHub from \"../utils/utils\"\n\nimport Highcharts from 'highcharts';\n// Alternatively, this is how to load Highstock. Highmaps is similar.\n// import Highcharts from 'highcharts/highstock';\n\n// Load the exporting module.\nimport Exporting from 'highcharts/modules/exporting';\nimport NOdata from 'highcharts/modules/no-data-to-display'\nimport MoreHighcharts from 'highcharts/highcharts-more';\n\n// Initialize exporting module.\nExporting(Highcharts);\nNOdata(Highcharts);\nMoreHighcharts(Highcharts);\n// window.Highcharts = Highcharts;\n\nimport {mapState, mapActions} from 'vuex';\n\nimport '@fortawesome/fontawesome-free/js/brands';\nimport '@fortawesome/fontawesome-free/js/solid';\nimport '@fortawesome/fontawesome-free/js/fontawesome';\n\nimport OLWKT from 'ol/format/WKT'\n\nexport default {\n  name: \"chartComponentEmission\",\n  props: {\n    IndexValue: {\n      type: Number,\n      required: true\n    },\n  },\n  data() {\n    return {\n      value1: '',\n      PlotOptions: [{\n        value: 'SectorShare',\n        label: 'Sector share (%)'\n      }, {\n        value: 'SectorContribution',\n        label: 'Sector contribution'\n      }, {\n        value: 'InventriesComparison',\n        label: 'Inventory comparison'\n      }, {\n        value: 'Timeseries',\n        label: 'Time series'\n      }],\n      PlotOptionValue: 'SectorShare',\n      CascaderValue: [],\n    }\n  },\n  methods: {\n    ...mapActions([\"PostChartDataProcess\"]),\n    updateChart(HcObject) {\n      Highcharts.chart('chart', HcObject);\n    },\n    ChangePlotOption() {\n      this.CascaderValue = [];\n    },\n    getHCObject(response, ArgParam) {\n      if (this.PlotOptionValue == 'SectorShare') {\n        let SectorShare = {\n          chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false,\n            type: 'pie'\n          },\n          credits: {\n            enabled: false\n          },\n          title: {\n            text: ArgParam.cascaderValue[0] + ' - ' + ArgParam.cascaderValue[1] + ' (' + ArgParam.cascaderValue[2] + ')'\n          },\n          tooltip: {\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n          },\n          accessibility: {\n            point: {\n              valueSuffix: '%'\n            }\n          },\n          plotOptions: {\n            pie: {\n              allowPointSelect: true,\n              cursor: 'pointer',\n              dataLabels: {\n                enabled: true,\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                connectorColor: 'silver'\n              },\n              showInLegend: true\n            }\n          },\n          series: [{\n            name: 'Sector',\n            colorByPoint: true,\n            data: response.data\n          }]\n        }\n        return SectorShare;\n      } else if (this.PlotOptionValue == 'SectorContribution') {\n        let SectorContribution = {\n          chart: {\n            type: 'column'\n          },\n          title: {\n            text: ArgParam.cascaderValue[0] + ' - ' + ArgParam.cascaderValue[1] + ' (' + ArgParam.cascaderValue[2] + ')'\n          },\n          subtitle: {\n            text: ''\n          },\n          accessibility: {\n            announceNewData: {\n              enabled: true\n            }\n          },\n          credits: {\n            enabled: false\n          },\n          xAxis: {\n            type: 'category'\n          },\n          yAxis: {\n            title: {\n              text: 'Emission (kt)'\n            }\n          },\n          legend: {\n            enabled: false\n          },\n          plotOptions: {\n            series: {\n              borderWidth: 0,\n              dataLabels: {\n                enabled: false,\n                format: '{point.y:.1f}%'\n              }\n            }\n          },\n          tooltip: {\n            headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n            pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}</b> kt<br/>'\n          },\n          series: [\n            {\n              name: \"Sector\",\n              colorByPoint: true,\n              data: response.data\n            }\n          ]\n        };\n        return SectorContribution\n      } else if (this.PlotOptionValue == 'InventriesComparison') {\n        let InventriesComparison = {\n          chart: {\n            type: 'column'\n          },\n          title: {\n            text: ArgParam.cascaderValue[0] + ' - ' + ArgParam.cascaderValue[1] + ' (' + ArgParam.cascaderValue[2] + ')'\n          },\n          subtitle: {\n            text: ''\n          },\n          accessibility: {\n            announceNewData: {\n              enabled: true\n            }\n          },\n          credits: {\n            enabled: false\n          },\n          xAxis: {\n            type: 'category'\n          },\n          yAxis: {\n            title: {\n              text: 'Emission (kt)'\n            }\n          },\n          legend: {\n            enabled: false\n          },\n          plotOptions: {\n            series: {\n              borderWidth: 0,\n              dataLabels: {\n                enabled: false,\n                format: '{point.y:.1f}%'\n              }\n            }\n          },\n          tooltip: {\n            headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n            pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}</b> kt<br/>'\n          },\n          series: [\n            {\n              name: \"Sector\",\n              colorByPoint: true,\n              data: response.data\n            }\n          ]\n        };\n        return InventriesComparison;\n      } else if (this.PlotOptionValue == 'Timeseries') {\n        let TickPositioner__yyyy_func = function (data) {\n          let PositionList = [];\n          data.forEach(function (val) {\n            PositionList.push(val[0])\n          })\n          let TickPositionerFunction = function () {\n            return PositionList;\n          }\n          return TickPositionerFunction\n        };\n\n        let TickPositioner__yyyy = TickPositioner__yyyy_func(response.data);\n\n        let DateFormatter__dd_func = function () {\n          return Highcharts.dateFormat('%Y', this.value);\n        };\n\n        let Timeseries = {\n          chart: {\n            type: 'spline',\n            zoomType: 'x'\n          },\n          title: {\n            text: response.title\n          },\n          subtitle: {\n            text: ''\n          },\n          xAxis: {\n            type: 'datetime',\n            dateTimeLabelFormats: { // don't display the dummy year\n              month: '%e. %b',\n              year: '%b'\n            },\n            title: {\n              text: 'Date'\n            },\n            tickPositioner: TickPositioner__yyyy,\n            labels: {\n              formatter: DateFormatter__dd_func\n            }\n          },\n          yAxis: {\n            title: {\n              text: 'Emission (kt)'\n            },\n          },\n          legend: {\n            enabled: false\n          },\n          credits: {\n            enabled: false\n          },\n          plotOptions: {\n            series: {\n              label: {\n                enabled: false\n              },\n              marker: {\n                enabled: true\n              }\n            }\n          },\n          series: [{\n            name: \"Pollutant\",\n            data: response.data\n          }],\n        };\n        return Timeseries\n      }\n    },\n    async RefreshChart() {\n      // debugger;\n      if (this.selectInteractionObj) {\n\n        if (this.selectInteractionObj.getFeatures().getLength()) {\n          var wktfeaturegeom, geometryType;\n          var features = this.selectInteractionObj.getFeatures();\n\n          features.forEach(function (f) {\n            var format = new OLWKT();\n            wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            });\n            geometryType = f.getGeometry().getType();\n          });\n\n          if (this.CascaderValue.length) {\n            let Param = {\n              cascaderValue: this.CascaderValue,\n              geometryType: geometryType,\n              wkt: wktfeaturegeom,\n              plotType: this.PlotOptionValue\n            };\n            console.log(Param);\n            let response = await this.PostChartDataProcess(Param);\n            if (response.code == 200) {\n              let hcObject = this.getHCObject(response, Param);\n              this.HCObject = Highcharts.chart(this.$refs.ChartDiv, hcObject);\n            } else {\n              this.$notify({\n                title: 'Error',\n                message: 'Please select a valid polygon or point',\n                type: 'error'\n              });\n              if (this.HCObject) {\n                this.HCObject.destroy();\n              }\n            }\n          } else {\n            this.$notify({\n              title: 'Warning',\n              message: 'Please select plot parameters',\n              type: 'warning'\n            });\n          }\n        } else {\n          this.$notify({\n            title: 'Warning',\n            message: 'Please select a feature on map.',\n            type: 'warning'\n          });\n        }\n\n      }\n    }\n  },\n\n  computed: {\n    ...mapState([\"CascaderInventriesComparison\", \"CascaderSectorContribution\", \"CascaderSectorShare\", \"CascaderTimeSeries\", \"selectInteractionObj\"]),\n  },\n\n  async mounted() {\n    // Generate the chart\n//     Highcharts.chart('chart', {\n//       credits: {\n//         enabled: false\n//       },\n//       title: {\n//         align: \"center\",\n//         text: \"Select Indices to Display Chart\",\n//       },\n//       series: [{\n//         data: [],\n//       }],\n//       chart: {\n//         backgroundColor: 'rgba(255,255,255,0)',\n//         style: {\n//           \"fontFamily\": \"Lato,\\\"Lucida Grande\\\", \\\"Lucida Sans Unicode\\\", Verdana, Arial, Helvetica, sans-serif\",\n//           \"fontSize\": \"12px\"\n//         },\n//\n//         animation: true,\n//         zoomType: 'x',\n// //        borderColor: '#000000',\n// //        borderWidth: 2,\n//         type: 'area',\n//       },\n//       noData: {\n//         style: {\n//           fontWeight: 'bold',\n//           fontSize: '15px',\n//           color: '#303030'\n//         }\n//       },\n//     });\n    eventHub.$on('UpdateChart', (HcObject) => {\n      this.updateChart(HcObject);\n    });\n  },\n\n  beforeCreate() {\n    eventHub.$on('setDefaultCascaterForChart', (indexVal, pltOpt, casVal) => {\n      if (this.IndexValue == indexVal) {\n        this.PlotOptionValue = pltOpt;\n        setTimeout(() => {\n          this.CascaderValue = casVal;\n          this.RefreshChart();\n        },500);\n      }\n    });\n  },\n};\n</script>\n\n<style scoped>\n\n.chart-option .el-row {\n  margin-left: 5px !important;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-right: 8px !important;\n}\n\n.chart-option {\n  border-bottom: solid 1px #e2e2e2;\n}\n\n.chart-div {\n  height: calc(100% - 40px);\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n}\n\n.center-content-parent {\n  position: relative;\n}\n\n.center-content-child {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  margin: -70px 0 0 -170px;\n}\n\n.flex-center-vertically {\n  padding: 20px;\n  justify-content: center;\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  height: 100%;\n}\n\n.plotSelection {\n  display: block;\n}\n\n.sync-chart .el-button {\n  width: 100%;\n}\n</style>\n","import { render } from \"./chartComponentEmission.vue?vue&type=template&id=9e37318e&scoped=true\"\nimport script from \"./chartComponentEmission.vue?vue&type=script&lang=js\"\nexport * from \"./chartComponentEmission.vue?vue&type=script&lang=js\"\n\nimport \"./chartComponentEmission.vue?vue&type=style&index=0&id=9e37318e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9e37318e\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading\">Map Controls\n      </h6>\n    </div>\n    <div class=\"body-container\">\n      <el-scrollbar height=\"100%\">\n        <el-form ref=\"form\" :model=\"form\" label-width=\"auto\" :inline=\"getIsInlineFormorNot\" size=\"mini\"\n                 label-position=\"left\">\n          <!--        <el-form-item label=\"Region\">-->\n          <!--          <el-select v-model=\"form.region\" placeholder=\"Select region\" class=\"full-width\">-->\n          <!--            <el-option-->\n          <!--                v-for=\"item in data.region\"-->\n          <!--                :key=\"item.value\"-->\n          <!--                :label=\"item.label\"-->\n          <!--                :value=\"item.value\">-->\n          <!--            </el-option>-->\n          <!--          </el-select>-->\n          <!--        </el-form-item>-->\n\n          <el-form-item label=\"Inventory\" class=\"full-width\">\n            <el-select v-model=\"form.inventory\" placeholder=\"Select\" @change=\"updateMapLayer()\" class=\"full-width\">\n              <el-option\n                  v-for=\"item in data.Inventory\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"Pollutants\" class=\"full-width\">\n            <el-select v-model=\"form.pollutants\" placeholder=\"Select\" @change=\"updateMapLayer()\" class=\"full-width\">\n              <el-option\n                  v-for=\"item in data.pollutants\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"Sectors\" class=\"full-width\">\n            <el-select v-model=\"form.sectors\" placeholder=\"Select\" @change=\"updateMapLayer()\" class=\"full-width\">\n              <el-option\n                  v-for=\"item in data.sectors\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"year\" class=\"full-width\">\n            <el-select v-model=\"form.year\" placeholder=\"Select\" @change=\"updateMapLayer()\" class=\"full-width\">\n              <el-option\n                  v-for=\"item in data.year\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item class=\"submit-btn full-width\">\n            <!--          <el-button type=\"primary\" class=\"full-width\">Get Emission Plot</el-button>-->\n          </el-form-item>\n        </el-form>\n      </el-scrollbar>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {dataSelect} from '../utils/dataEmission'\nimport eventHub from \"../utils/utils\";\nimport {mapActions, mapState} from 'vuex';\nimport GeoJSON from \"ol/format/GeoJSON\";\n// import {getCenter as ol_extent_getCenter} from \"ol/extent\";\n\nexport default {\n  name: \"mapControlsEmission\",\n  data() {\n    return {\n      form: {\n        region: '',\n        pollutants: '',\n        periodicity: '',\n        year: '',\n        sectors: '',\n        inventory: ''\n      },\n      isInlineForm: true,\n      data: dataSelect\n    }\n  }, methods: {\n    ...mapActions([\"GETCountryGeojson\"]),\n    async onSubmit() {\n\n    },\n\n    getInLineData() {\n      return this.isInlineForm\n    },\n\n    updateMapLayer() {\n      this.$store.state.pollutants = this.form.pollutants;\n      this.$store.state.sectors = this.form.sectors;\n      this.$store.state.year = this.form.year;\n      this.$store.state.inventory = this.form.inventory;\n      eventHub.$emit(\"InventoryChange\");\n    },\n    async setDefaultMap() {\n\n\n      this.form.pollutants = 'PM2p5';\n      this.form.sectors = 'Total';\n      this.form.year = '2015';\n      this.form.inventory = 'REAS';\n\n      // Javasctipt API Stack\n      setTimeout(() => {\n        this.updateMapLayer();\n      }, 0);\n      let geoJson = await this.GETCountryGeojson();\n      console.log(\"geoJson\");\n      console.log(geoJson);\n      // this.vectorLayerSource.\n      var format = new GeoJSON();\n      var f = format.readFeature(geoJson.features[0], {\n        dataProjection: \"EPSG:4326\",\n        featureProjection: this.mapObject.getView().getProjection()\n      });\n      this.vectorLayerSource.addFeature(f);\n      this.selectInteractionObj.getFeatures().push(f);\n      this.selectInteractionObj.dispatchEvent({type: 'select'});\n      // Zoom to map centre*****\n      // var view = this.mapObject.getView();\n      // var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), this.mapObject.getSize());\n      // var zoom = view.getZoomForResolution(resolution);\n      // var center = ol_extent_getCenter(f.getGeometry().getExtent());\n      // // redraw before zoom\n      // setTimeout(function () {\n      //   view.animate({\n      //     center: center,\n      //     zoom: Math.min(zoom, 16)\n      //   });\n      // }, 100);\n\n      // Zoom to map centre*****\n\n\n      eventHub.$emit('setDefaultCascaterForChart', 1, 'SectorShare', [\"REAS\", \"PM2p5\", \"2015\"]);\n      eventHub.$emit('setDefaultCascaterForChart', 2, 'SectorContribution', [\"REAS\", \"PM2p5\", \"2015\"]);\n      eventHub.$emit('setDefaultCascaterForChart', 3, 'Timeseries', [\"REAS\", \"PM2p5\", \"Total\"]);\n      eventHub.$emit('setDefaultCascaterForChart', 4, 'InventriesComparison', [\"PM2p5\", \"Total\", \"2015\"]);\n\n      setTimeout(() => {\n        eventHub.$emit('setDefaultEmissionStatistics');\n      }, 1000)\n    },\n  },\n  computed: {\n    ...mapState([\"vectorLayerSource\", \"mapObject\", \"selectInteractionObj\"]),\n    getIsInlineFormorNot() {\n      return this.getInLineData();\n    },\n  },\n  created() {\n    this.form.region = this.$store.state.region;\n    this.form.pollutants = this.$store.state.pollutants;\n    this.form.sectors = this.$store.state.sectors;\n    this.form.year = this.$store.state.year;\n  },\n\n  mounted() {\n    // Generate the chart\n    // eslint-disable-next-line no-undef\n\n    this.setDefaultMap();\n  },\n}\n</script>\n\n<style scoped>\n.body-container {\n  height: calc(100% - 50px);\n}\n</style>","let allYears = [];\nlet initialYear;\nfor (initialYear = 2000; initialYear <= new Date().getFullYear(); initialYear++) {\n    allYears.unshift({\n        value: initialYear,\n        label: initialYear\n    });\n}\n\n\nexport const dataSelect = {\n    region: [{value: \"HKH\", label: \"HKH\"},\n        {value: \"AFGHANISTAN\", label: \"AFGHANISTAN\"},\n        {value: \"BANGLADESH\", label: \"BANGLADESH\"},\n        {value: \"BHUTAN\", label: \"BHUTAN\"},\n        {value: \"CHINA\", label: \"CHINA\"},\n        {value: \"INDIA\", label: \"INDIA\"},\n        {value: \"MYANMAR\", label: \"MYANMAR\"},\n        {value: \"NEPAL\", label: \"NEPAL\"},\n        {value: \"PAKISTAN\", label: \"PAKISTAN\"}],\n    pollutants: [{value: \"BC\", label: \"BC\"},\n        {value: \"CO\", label: \"CO\",},\n        {value: \"NOx\", label: \"NOx\",},\n        {value: \"OC\", label: \"OC\",},\n        {value: \"PM10\", label: \"PM10\"},\n        {value: \"PM2p5\", label: \"PM25\",},\n        {value: \"SO2\", label: \"SO2\"},\n    ],\n    periodicity: [\n        {\n            value: \"dekad\",\n            label: \"Dekad (10 day)\"\n        },\n        {value: \"monthly\", label: \"Monthly\"},\n        {\n            value: \"quartly\",\n            label: \"Quartly\"\n        }\n    ],\n    periodicityOutlook: [{value: \"monthly\", label: \"Monthly Anomaly\"}],\n    year: [{value: '1990', label: \"1990\"}, {value: '1995', label: \"1995\"}, {\n        value: '2000',\n        label: \"2000\"\n    }, {value: '2005', label: \"2005\"}, {value: '2010', label: \"2010\"}, {value: '2015', label: \"2015\"}],\n    ensemble: [{value: \"mean\", label: \"Mean\"}, {value: \"ens0\", label: \"1\"}, {\n        value: \"ens1\",\n        label: \"2\"\n    }, {value: \"ens2\", label: \"3\"}, {value: \"ens3\", label: \"4\"}, {\n        value: \"ens4\",\n        label: \"5\"\n    }, {value: \"ens5\", label: \"6\"}, {value: \"ens6\", label: \"7\"}],\n    sectors: [{value: \"Total\", label: \"Total\"},\n        {value: \"Residential\", label: \"Residential\"},\n        {value: \"Industry\", label: \"Industry\"},\n        {value: \"Transport\", label: \"Transport\"},\n        {value: \"Energy\", label: \"Energy\"},],\n    Inventory: [{value: \"GAINS\", label: \"GAINS\"},\n\n        {value: \"REAS\", label: \"REAS\"},\n        {value: \"EDGAR\",label: \"EDGAR\"}\n    ]\n};\n\n\nexport var mbasin = [\"Amudarya\", \"Brahmaputra\", \"Eastern Asian\", \"Ganga\", \"Indus\", \"Irrawaddy\", \"Mekong\", \"Qinghai-Tibetan\", \"Salween\", \"Tarim\", \"Yangtze\", \"Yellow River\"];\n\nexport var WMSLAYERS = {\n    \"Tair_f_tavg\": \"Air Temperature\",\n    \"Rainf_f_tavg\": \"Rainfall flux\",\n    \"SoilMoist_inst\": \"Soil moisture content\",\n    \"Evap_tavg\": \"Total evapotranspiration\"\n};\nexport var WMSSLD = {\n    \"Tair_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>Tair_f_tavg</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-5</se:Threshold><se:Value>#9999FF</se:Value><se:Threshold>-4.5</se:Threshold><se:Value>#99A7FF</se:Value><se:Threshold>-4</se:Threshold><se:Value>#9CB6FF</se:Value><se:Threshold>-3.5</se:Threshold><se:Value>#9CC2FF</se:Value><se:Threshold>-3</se:Threshold><se:Value>#9CD1FF</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#9CDEFF</se:Value><se:Threshold>-2</se:Threshold><se:Value>#9CEDFF</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#99FCFF</se:Value><se:Threshold>-1</se:Threshold><se:Value>#A6FFF6</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#B5FFE6</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>1</se:Threshold><se:Value>#FFFFBE</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#FFEBAF</se:Value><se:Threshold>2</se:Threshold><se:Value>#FFD37F</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#E69800</se:Value><se:Threshold>3</se:Threshold><se:Value>#FF7F7F</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#E64C00</se:Value><se:Threshold>4</se:Threshold><se:Value>#A83800</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#732600</se:Value><se:Threshold>5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n    \"Rainf_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>Rainf_f_tavg</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#C2523C</se:Value><se:Threshold>-2</se:Threshold><se:Value>#FFAA01</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#FFD380</se:Value><se:Threshold>-1</se:Threshold><se:Value>#FEFF73</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E9FFBE</se:Value><se:Threshold>1</se:Threshold><se:Value>#7BED01</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#21DD00</se:Value><se:Threshold>2</se:Threshold><se:Value>#0ACC2E</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#17B568</se:Value><se:Threshold>3</se:Threshold><se:Value>#1E9B89</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#1A828F</se:Value><se:Threshold>4</se:Threshold><se:Value>#135784</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n    \"SoilMoist_inst\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>SoilMoist_inst</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#C2523C</se:Value><se:Threshold>-2</se:Threshold><se:Value>#FFAA01</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#FFD380</se:Value><se:Threshold>-1</se:Threshold><se:Value>#FEFF73</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E9FFBE</se:Value><se:Threshold>1</se:Threshold><se:Value>#7BED01</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#21DD00</se:Value><se:Threshold>2</se:Threshold><se:Value>#0ACC2E</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#17B568</se:Value><se:Threshold>3</se:Threshold><se:Value>#1E9B89</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#1A828F</se:Value><se:Threshold>4</se:Threshold><se:Value>#135784</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n    \"Evap_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><NamedLayer><se:Name>Evap_tavg</se:Name><UserStyle><se:Name>Thesholded colour scheme</se:Name><se:CoverageStyle><se:Rule><se:RasterSymbolizer><se:Opacity>1.0</se:Opacity><se:ColorMap><se:Categorize fallbackValue=\"#00000000\"><se:LookupValue>Rasterdata</se:LookupValue><se:Value>#00000000</se:Value><se:Threshold>-2.5</se:Threshold><se:Value>#C2523C</se:Value><se:Threshold>-2</se:Threshold><se:Value>#FFAA01</se:Value><se:Threshold>-1.5</se:Threshold><se:Value>#FFD380</se:Value><se:Threshold>-1</se:Threshold><se:Value>#FEFF73</se:Value><se:Threshold>-0.5</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0</se:Threshold><se:Value>#E1E1E1</se:Value><se:Threshold>0.5</se:Threshold><se:Value>#E9FFBE</se:Value><se:Threshold>1</se:Threshold><se:Value>#7BED01</se:Value><se:Threshold>1.5</se:Threshold><se:Value>#21DD00</se:Value><se:Threshold>2</se:Threshold><se:Value>#0ACC2E</se:Value><se:Threshold>2.5</se:Threshold><se:Value>#17B568</se:Value><se:Threshold>3</se:Threshold><se:Value>#1E9B89</se:Value><se:Threshold>3.5</se:Threshold><se:Value>#1A828F</se:Value><se:Threshold>4</se:Threshold><se:Value>#135784</se:Value><se:Threshold>4.5</se:Threshold><se:Value>#00000000</se:Value></se:Categorize></se:ColorMap></se:RasterSymbolizer></se:Rule></se:CoverageStyle></UserStyle></NamedLayer></StyledLayerDescriptor>',\n};\nexport var WMSSLDCurrent = {\n    \"Tair_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>Tair_f_tavg</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#0c2c84</se:Value><se:Threshold>273</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>278</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>283</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>288</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>293</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>298</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>303</se:Threshold><se:Value>#b10026</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n    \"Rainf_f_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>Rainf_f_tavg</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#b10026</se:Value><se:Threshold>5</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>10</se:Threshold><se:Value>#feb24c</se:Value><se:Threshold>15</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>20</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>25</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>30</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>35</se:Threshold><se:Value>#0c2c84</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n    \"SoilMoist_inst\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>SoilMoist_inst</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#b10026</se:Value><se:Threshold>5</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>10</se:Threshold><se:Value>#feb24c</se:Value><se:Threshold>15</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>20</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>25</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>30</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>35</se:Threshold><se:Value>#0c2c84</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n    \"Evap_tavg\": '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?><StyledLayerDescriptor version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/sldStyledLayerDescriptor.xsd\"                       xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\"                       xmlns:se=\"http://www.opengis.net/se\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"                       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">    <NamedLayer>        <se:Name>Evap_tavg</se:Name>        <UserStyle>            <se:Name>Thesholded colour scheme</se:Name>            <se:CoverageStyle>                <se:Rule>                    <se:RasterSymbolizer>                        <se:Opacity>1.0</se:Opacity>                        <se:ColorMap>                            <se:Categorize fallbackValue=\"#00000000\">                                <se:LookupValue>Rasterdata</se:LookupValue>                                <se:Value>#b10026</se:Value><se:Threshold>5</se:Threshold><se:Value>#fc4e2a</se:Value><se:Threshold>10</se:Threshold><se:Value>#feb24c</se:Value><se:Threshold>15</se:Threshold><se:Value>#ffeda0</se:Value><se:Threshold>20</se:Threshold><se:Value>#c7e9b4</se:Value><se:Threshold>25</se:Threshold><se:Value>#7fcdbb</se:Value><se:Threshold>50</se:Threshold><se:Value>#1d91c0</se:Value><se:Threshold>75</se:Threshold><se:Value>#0c2c84</se:Value>                            </se:Categorize>                        </se:ColorMap>                    </se:RasterSymbolizer>                </se:Rule>            </se:CoverageStyle>        </UserStyle>    </NamedLayer></StyledLayerDescriptor>',\n};\n\nexport var legendImage = {\n    \"Tair_f_tavg\": \"FinalNewAirTemperature.jpg\",\n    \"Rainf_f_tavg\": \"final_rain.jpg\",\n    \"SoilMoist_inst\": \"soil.jpg\",\n    \"Evap_tavg\": \"evaporation.jpg\"\n};\n\n// var colorList = ['#ffffff', '#e6ffff', '#66ccff', '#00ff00', '#bfff00', '#ffff00', '#ffbf00', '#ff0000', '#b30000'];\n\n\n// let SLDParam = {\n//     title: 'Air Temperature',\n//     showLegendTitle: false,\n//     parameterName: 'Tair_f_tavg',\n//     propForSLD: [{\n//         classType: 'Below',\n//         label: [\"less than -5\", \"\"],\n//         color: '#00000000',\n//         value: -5\n//     }, {\n//         label: [\"-5 to -4.5\", \"\"], color: '#9999FF',\n//         range: [-5, -4.5]\n//     }, {\n//         label: [\"-4.5 to -4\", \"\"], color: '#99A7FF',\n//         range: [-4.5, -4]\n//     }, {\n//         label: [\"-4 to -3.5\", \"\"], color: '#9CB6FF',\n//         range: [-4, -3.5]\n//     }, {\n//         label: [\"1.5 to 2\", \"\"], color: '#FFEBAF',\n//         range: [1.5, 2]\n//     }, {\n//         label: [\"3 to 3.5\", \"\"], color: '#FF7F7F',\n//         range: [3, 3.5]\n//     }, {\n//         label: [\"3.5 to 4\", \"\"], color: '#E64C00',\n//         range: [3.5, 4]\n//     }, {\n//         label: [\"4 to 4.5\", \"\"], color: '#A83800',\n//         range: [4, 4.5]\n//     }, {\n//         classType: 'Above',\n//         label: [\"5 or more\", \"\"], color: '#00000000',\n//         value: 5\n//     }],\n// };\n\n\n// let layerPropertiesList = [{\n//     id: '',\n//     title: 'Air Temperature',\n//     showLegendTitle: false,\n//     parameterName: 'Tair_f_tavg',\n//     propForSLD: [{\n//         classType: 'Below',\n//         label: [\"less than -5\", \"\"],\n//         color: '#00000000',\n//         value: -5\n//     }, {\n//         label: [\"-5 to -4.5\", \"\"], color: '#9999FF',\n//         range: [-5, -4.5]\n//     }, {\n//         label: [\"-4.5 to -4\", \"\"], color: '#99A7FF',\n//         range: [-4.5, -4]\n//     }, {\n//         label: [\"-4 to -3.5\", \"\"], color: '#9CB6FF',\n//         range: [-4, -3.5]\n//     }, {\n//         label: [\"1.5 to 2\", \"\"], color: '#FFEBAF',\n//         range: [1.5, 2]\n//     }, {\n//         label: [\"3 to 3.5\", \"\"], color: '#FF7F7F',\n//         range: [3, 3.5]\n//     }, {\n//         label: [\"3.5 to 4\", \"\"], color: '#E64C00',\n//         range: [3.5, 4]\n//     }, {\n//         label: [\"4 to 4.5\", \"\"], color: '#A83800',\n//         range: [4, 4.5]\n//     }, {\n//         classType: 'Above',\n//         label: [\"5 or more\", \"\"], color: '#00000000',\n//         value: 5\n//     }],\n// }];\n\n\n\nlet layerList =[\n['REAS___BC___Total','REAS','BC','Total',5.90635967254638,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___BC___Residential','REAS','BC','Residential',3.36123776435852,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___BC___Transport','REAS','BC','Transport',4.53458881378173,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___BC___Industry','REAS','BC','Industry',4.90902614593505,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___BC___Energy','REAS','BC','Energy',0.42021644115448,['0.00000001', '0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1],[['less than 1e-08', ''], ['1e-08 to 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___CO___Total','REAS','CO','Total',2492.0791015625,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___CO___Residential','REAS','CO','Residential',305.503173828125,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___CO___Transport','REAS','CO','Transport',340.202941894531,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___CO___Industry','REAS','CO','Industry',2484.740234375,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___CO___Energy','REAS','CO','Energy',12.5061283111572,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___NOx___Total','REAS','NOx','Total',140.212326049804,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___NOx___Residential','REAS','NOx','Residential',22.4503192901611,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___NOx___Transport','REAS','NOx','Transport',44.1139068603515,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___NOx___Industry','REAS','NOx','Industry',114.093849182128,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___NOx___Energy','REAS','NOx','Energy',52.9525299072265,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___OC___Total','REAS','OC','Total',17.145128250122,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___OC___Residential','REAS','OC','Residential',12.6038732528686,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___OC___Transport','REAS','OC','Transport',1.6988251209259,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___OC___Industry','REAS','OC','Industry',8.57281112670898,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___OC___Energy','REAS','OC','Energy',0.172008112072944,['0.00000001', '0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1],[['less than 1e-08', ''], ['1e-08 to 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM10___Total','REAS','PM10','Total',182.490966796875,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM10___Residential','REAS','PM10','Residential',19.7488594055175,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM10___Transport','REAS','PM10','Transport',7.37015295028686,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM10___Industry','REAS','PM10','Industry',157.537033081054,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM10___Energy','REAS','PM10','Energy',13.6437997817993,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM2p5___Total','REAS','PM2p5','Total',106.149459838867,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM2p5___Residential','REAS','PM2p5','Residential',18.8245296478271,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM2p5___Transport','REAS','PM2p5','Transport',7.26222372055053,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM2p5___Industry','REAS','PM2p5','Industry',92.1728286743164,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___PM2p5___Energy','REAS','PM2p5','Energy',8.57247734069824,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___SO2___Total','REAS','SO2','Total',644.566772460937,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___SO2___Residential','REAS','SO2','Residential',53.7299194335937,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___SO2___Transport','REAS','SO2','Transport',9.21748828887939,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___SO2___Industry','REAS','SO2','Industry',198.901260375976,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['REAS___SO2___Energy','REAS','SO2','Energy',134.010818481445,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___BC___Total','GAINS','BC','Total',16.3189430236816,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___BC___Residential','GAINS','BC','Residential',9.50524234771728,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___BC___Transport','GAINS','BC','Transport',5.65739822387695,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___BC___Industry','GAINS','BC','Industry',2.57163405418395,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___BC___Energy','GAINS','BC','Energy',1.42664492130279,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___CO___Total','GAINS','CO','Total',856.674133300781,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___CO___Residential','GAINS','CO','Residential',344.522766113281,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___CO___Transport','GAINS','CO','Transport',362.705108642578,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___CO___Industry','GAINS','CO','Industry',650.939453125,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___CO___Energy','GAINS','CO','Energy',80.8608322143554,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___NOx___Total','GAINS','NOx','Total',255.737258911132,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___NOx___Residential','GAINS','NOx','Residential',9.66963100433349,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___NOx___Transport','GAINS','NOx','Transport',130.639373779296,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___NOx___Industry','GAINS','NOx','Industry',97.3676528930664,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___NOx___Energy','GAINS','NOx','Energy',120.853538513183,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___OC___Total','GAINS','OC','Total',25.4911918640136,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___OC___Residential','GAINS','OC','Residential',14.6601982116699,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___OC___Transport','GAINS','OC','Transport',12.4218959808349,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___OC___Industry','GAINS','OC','Industry',1.0705087184906,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___OC___Energy','GAINS','OC','Energy',2.24600028991699,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM10___Total','GAINS','PM10','Total',197.56867980957,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM10___Residential','GAINS','PM10','Residential',77.9535980224609,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM10___Transport','GAINS','PM10','Transport',23.6912956237792,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM10___Industry','GAINS','PM10','Industry',71.7012100219726,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM10___Energy','GAINS','PM10','Energy',75.0917663574218,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM2p5___Total','GAINS','PM2p5','Total',126.906242370605,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM2p5___Residential','GAINS','PM2p5','Residential',56.9104270935058,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM2p5___Transport','GAINS','PM2p5','Transport',22.4125061035156,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM2p5___Industry','GAINS','PM2p5','Industry',49.1257705688476,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___PM2p5___Energy','GAINS','PM2p5','Energy',22.2145442962646,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___SO2___Total','GAINS','SO2','Total',326.366882324218,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___SO2___Residential','GAINS','SO2','Residential',39.0412864685058,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___SO2___Transport','GAINS','SO2','Transport',13.1418828964233,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___SO2___Industry','GAINS','SO2','Industry',241.244338989257,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['GAINS___SO2___Energy','GAINS','SO2','Energy',286.270538330078,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___BC___Total','EDGAR','BC','Total',26.9559309951782,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___BC___Residential','EDGAR','BC','Residential',0.354042315262556,['0.00000001', '0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1],[['less than 1e-08', ''], ['1e-08 to 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___BC___Transport','EDGAR','BC','Transport',1.14314790644645,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___BC___Industry','EDGAR','BC','Industry',26.9498316467285,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___BC___Energy','EDGAR','BC','Energy',2.66838060007095,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___CO___Total','EDGAR','CO','Total',2438.45105273437,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___CO___Residential','EDGAR','CO','Residential',38.9738866333007,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___CO___Transport','EDGAR','CO','Transport',394.993021508789,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___CO___Industry','EDGAR','CO','Industry',2437.77045893554,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___CO___Energy','EDGAR','CO','Energy',135.711784698486,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___NOx___Total','EDGAR','NOx','Total',508.899899377441,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___NOx___Residential','EDGAR','NOx','Residential',7.26847960882186,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___NOx___Transport','EDGAR','NOx','Transport',37.0271012695312,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___NOx___Industry','EDGAR','NOx','Industry',508.875351196289,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___NOx___Energy','EDGAR','NOx','Energy',182.588888891601,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___OC___Total','EDGAR','OC','Total',64.4831109832763,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___OC___Residential','EDGAR','OC','Residential',1.91931391060352,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___OC___Transport','EDGAR','OC','Transport',0.702768021583557,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___OC___Industry','EDGAR','OC','Industry',64.4528027252197,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___OC___Energy','EDGAR','OC','Energy',2.28398028459548,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM10___Total','EDGAR','PM10','Total',347.986421136474,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM10___Residential','EDGAR','PM10','Residential',5.42583458833694,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM10___Transport','EDGAR','PM10','Transport',2.34391590156555,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM10___Industry','EDGAR','PM10','Industry',347.892540930175,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM10___Energy','EDGAR','PM10','Energy',88.236288432312,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM2p5___Total','EDGAR','PM2p5','Total',305.428198480224,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM2p5___Residential','EDGAR','PM2p5','Residential',3.77355011987686,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM2p5___Transport','EDGAR','PM2p5','Transport',2.19737603931427,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM2p5___Industry','EDGAR','PM2p5','Industry',305.366345507812,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___PM2p5___Energy','EDGAR','PM2p5','Energy',61.9245888656616,['0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0],[['less than 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___SO2___Total','EDGAR','SO2','Total',1067.37240783691,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___SO2___Residential','EDGAR','SO2','Residential',15.9809639419555,['0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0, 10.0],[['less than 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___SO2___Transport','EDGAR','SO2','Transport',2.31042273187637,['0.0000001', '0.000001', '0.00001', 0.0001, 0.001, 0.01, 0.1, 1.0],[['less than 1e-07', ''], ['1e-07 to 1e-06', ''], ['1e-06 to 1e-05', ''], ['1e-05 to 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___SO2___Industry','EDGAR','SO2','Industry',1067.32620659179,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']],\n['EDGAR___SO2___Energy','EDGAR','SO2','Energy',780.430286535644,[0.0001, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0],[['less than 1e-04', ''], ['1e-04 to 1e-03', ''], ['1e-03 to 1e-02', ''], ['1e-02 to 1e-01', ''], ['1e-01 to 1e+00', ''], ['1e+00 to 1e+01', ''], ['1e+01 to 1e+02', ''], ['1e+02 to 1e+03', ''], ['1e+03 or more', '']],['#00008F', '#006BFF', '#00DBFF', '#47FFB7', '#B7FF47', '#FFD700', '#FF6700', '#F60000', '#8C0000']]\n];\n\nexport function getLayerPropObj(Invertory, pollutant, sectors) {\n    let selArray = layerList.filter(function (ar) {\n        return ar[0] == Invertory + '___' + pollutant + '___' + sectors;\n    });\n    if (selArray.length) {\n        selArray.forEach(function (arr) {\n            if (arr.length <= 8) {\n                let propForSLD = []\n                let rangeLength = arr[5].length - 1;\n                arr[5].forEach(function (RangeVal, index) {\n                    if (index === 0) {\n                        propForSLD.push({\n                            classType: 'Below',\n                            label: arr[6][0],\n                            color: arr[7][0],\n                            value: RangeVal\n                        });\n                        propForSLD.push({\n                            label: arr[6][1], color: arr[7][1],\n                            range: [RangeVal, arr[5][1]]\n                        });\n                    } else if (index == rangeLength) {\n                        propForSLD.push({\n                            classType: 'Above',\n                            label: arr[6][index + 1], color: arr[7][index + 1],\n                            value: RangeVal\n                        });\n                    } else {\n                        propForSLD.push({\n                            label: arr[6][index + 1], color: arr[7][index + 1],\n                            range: [RangeVal, arr[5][index + 1]]\n                        });\n                    }\n                });\n                arr.push(propForSLD)\n            }\n        });\n\n        // let title = [selArray[0][1], selArray[0][2], selArray[0][3]].join(' ').toString()+'<br> suman';\n\n        let retObj = {\n            id: selArray[0][0],\n            title: [selArray[0][1], selArray[0][2], selArray[0][3]],\n            showLegendTitle: true,\n            parameterName: selArray[0][3],\n            propForSLD: selArray[0][8],\n        };\n        return retObj;\n    } else {\n        return false;\n    }\n};\n\n\nexport const AllInventory = ['GAINS'];\n\n\n\n\n\n\n\n\n\n","import { render } from \"./mapControlsEmission.vue?vue&type=template&id=fb7955d2&scoped=true\"\nimport script from \"./mapControlsEmission.vue?vue&type=script&lang=js\"\nexport * from \"./mapControlsEmission.vue?vue&type=script&lang=js\"\n\nimport \"./mapControlsEmission.vue?vue&type=style&index=0&id=fb7955d2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb7955d2\"]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div id=\"map-container2\" ref=\"LayerSelectorDropdown\">\n    </div>\n    <div id=\"layerSwitcherDiv\" class=\"ol-unselectable ol-control\" @click=\"LayerSwitcherClick()\">\n      <button>\n        <img src=\"@/assets/layers.svg\" style=\"height: 20px;width: 20px;padding-top: 2px;\">\n      </button>\n    </div>\n\n    <el-drawer\n        title=\"Layers\"\n        v-model=\"drawer\"\n        :custom-class=\"'drawerCustomCSS'\"\n        :append-to-body=\"drawerAppendToBody\"\n        :modal=\"false\"\n    >\n      <span>\n        <div class=\"layerCollection\"></div>\n          </span>\n    </el-drawer>\n\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport Control from \"ol/control/Control\";\n// import OSM from \"ol/source/OSM\";\nimport TileLayer from \"ol/layer/Tile\";\n// import TileWMS from \"ol/source/TileWMS\";\nimport View from \"ol/View\";\nimport {dataSelect, getLayerPropObj} from \"../utils/dataEmission\";\nimport eventHub from \"../utils/utils\";\nimport TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\nimport EDALSLD from 'ol-plus/sld/EDALSLD';\nimport {GeoServerHost, threddDataSource} from '../config';\nimport LayerSwitcher from 'ol-plus/ui/LayerSwitcher';\n// import {lineString, lineDistance, area as turfArea,polygon as turfPolygon, length as turfLength} from '@turf/turf';\nimport {getArea, getLength,} from 'ol/sphere';\nimport LineString from 'ol/geom/LineString';\n\n\n// import {MajorBasinExtent, BasinExtent, mbasin, dataSelect, WMSSLD, legendImage} from \"../utils/data\";\n// import TimeDimensionTile from \"ol-plus/layer/TimeDimensionTile\";\n// import {ThreddsServer} from \"../utils/config\";\n\nimport 'ol-ext/control/Search.css';\nimport SearchNominatim from 'ol-ext/control/SearchNominatim';\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Style from \"ol/style/Style\";\nimport Stroke from \"ol/style/Stroke\";\nimport Fill from \"ol/style/Fill\";\nimport {Icon} from 'ol/style';\nimport {toSize} from 'ol/size';\nimport ImageIcon from '../assets/markers_default.png';\nimport {getCenter as ol_extent_getCenter} from 'ol/extent';\nimport GeoJSON from \"ol/format/GeoJSON\";\n\n\nimport '@fortawesome/fontawesome-free/js/brands';\nimport '@fortawesome/fontawesome-free/js/solid';\nimport '@fortawesome/fontawesome-free/js/fontawesome';\n\n\nimport OLPolygon from 'ol/geom/Polygon'\nimport OlSelect from 'ol/interaction/Select'\nimport OlDraw from 'ol/interaction/Draw'\nimport OlExtTextButton from 'ol-ext/control/TextButton'\nimport Bar from 'ol-ext/control/Bar'\nimport OlExtButton from 'ol-ext/control/Button'\nimport OlExtToggle from 'ol-ext/control/Toggle';\nimport 'ol-ext/control/Bar.css'\nimport CircleStyle from \"ol/style/Circle\";\nimport {mapMutations, mapState} from 'vuex';\nimport XYZ from \"ol/source/XYZ\";\nimport {Image as ImageLayer} from \"ol/layer\";\nimport ImageWMS from \"ol/source/ImageWMS\";\nimport CanvasTitle from \"ol-ext/control/CanvasTitle\";\nimport Text from \"ol/style/Text\";\nimport LegendControl from \"ol-ext/control/Legend\";\nimport CanvasScaleLine from \"ol-ext/control/CanvasScaleLine\";\nimport PrintDialog from \"ol-ext/control/PrintDialog\";\nimport {jsPDF} from \"jspdf\";\nimport {saveAs} from \"file-saver\";\n\n\nexport default {\n  name: \"mapComponentEmission\",\n  components: {},\n  data() {\n    return {\n      drawerAppendToBody: true,\n      mapObj: '',\n      HighLightedLayer: '',\n      view: '',\n      mapObject: '',\n      MajorBasin: '',\n      AllLayers: '',\n      selectedFilesOnAYear: [],\n      drawer: true,\n    }\n  },\n  methods: {\n    ...mapMutations([\"setSelectInteractionObj\", \"appendTimeSeriesLayerCollection\", \"setVectorLayerSource\", \"setmapObject\"]),\n    mapInitilization() {\n      // let osm = new TileLayer({\n      //   source: new OSM({attributions: [],}),\n      // });\n      let esri_world_topomap = new TileLayer({\n        visible: true,\n        zIndex: 1,\n        source: new XYZ({\n          attributions: [],\n          url:\n              'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n              'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n          crossOrigin: \"Anonymous\"\n        }),\n      });\n\n      let view = new View({\n        center: [9388155.512006583, 3291367.8109067543],\n        zoom: 4,\n        extent: [6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793]\n      });\n      var map = new Map({\n        layers: [],\n        // target: this.$refs['map-root'],\n        target: 'map-container2',\n        view: view,\n      });\n\n      // map.addLayer(osm);\n      map.addLayer(esri_world_topomap);\n      this.mapObject = map;\n      //setmapObject to store\n      this.setmapObject(map);\n      window.mapObject = map;\n      this.view = view;\n      this.mapObject.addControl(\n          new Control({\n            element: document.getElementById('layerSwitcherDiv')\n          })\n      );\n      map.getView().fit([6702855.884774126, 1769255.1930753174, 12194542.852403797, 4812621.833531793], map.getView());\n    },\n    changeInventory() {\n      this.addTimeDimensionLayer();\n    },\n    async addTimeDimensionLayer() {\n      console.log(this.$store.state);\n      var mapObject = this.mapObject;\n      var layerId = this.$store.state.inventory + '___' + this.$store.state.pollutants + '___' + this.$store.state.sectors + '___' + this.$store.state.year;\n      var selectedLayr = this.TimeSeriesLayerCollection.filter(function (x) {\n        var checkLayer = x.getProperties().id === layerId;\n        if (!checkLayer) {\n          x.setVisibleDivBind(false);\n        }\n        return checkLayer;\n      });\n      if (selectedLayr.length) {\n        if (selectedLayr.length === 1) {\n          selectedLayr[0].setVisibleDivBind(true);\n        } else {\n          console.log(\"there are multiple layer added!!!!\");\n        }\n      } else {\n        let ll = getLayerPropObj(this.$store.state.inventory, this.$store.state.pollutants, this.$store.state.sectors);\n        let title = [ll.title[0], ll.title[2], this.$store.state.year, ll.title[1]].join(' ') + ' (kt)';\n        ll.title = [ll.title[0], ll.title[2], this.$store.state.year].join(' ') + \"</br> \" + ll.title[1] + ' (kt)';\n        let EdalSldObj = new EDALSLD(ll);\n        let WMSList = `${threddDataSource}wms/HKHEmissions/${this.$store.state.inventory}/${this.$store.state.pollutants}/${this.$store.state.inventory}_${this.$store.state.pollutants}_${this.$store.state.year}.nc`;\n        let legendUrl = WMSList + `?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&WIDTH=10&HEIGHT=230&LAYERS=${this.$store.state.sectors}&SLD_BODY=${encodeURIComponent(EdalSldObj.getEDALSLD())}`;\n\n        var mm = new TimeDimensionTile({\n          id: layerId,\n          title: title,\n          visible: true,\n          opacity: 0.7,\n          legendPath: legendUrl,\n          showlegend: true,\n          showControlPanel: false,\n          ThreddsDataServerVersion: \"5\",\n          zIndex: 500,\n          timeSliderSize: \"small\",\n          alignTimeSlider: \"right\",\n          customLegendElement: EdalSldObj.getLegendHTMLElement(),\n          source: {\n            url: WMSList,\n            params: {\n              'VERSION': '1.1.1',\n              'LAYERS': ll.parameterName,\n              'SLD_BODY': EdalSldObj.getEDALSLD(),\n            }\n          }\n        });\n        await mm.init().then(\n            () => {\n              mapObject.addThreddsLayer(mm);\n              let lk = new LayerSwitcher(\".layerCollection\", mm, true, true, 'withOpacSlider');\n              mm.setVisible(true);\n\n              this.appendTimeSeriesLayerCollection(lk);\n            },\n            (error) => {\n              console.error(error);\n            });\n      }\n    },\n    addGeoCodingAndInteractionBar() {\n      var map = this.mapObject;\n\n// Set the control grid reference\n      var search = new SearchNominatim({\n        polygon: true,\n        reverse: false,\n        position: true,\t// Search, with priority to geo position,\n        maxHistory: -1,\n        className: 'OSMBasedGeocodingEmissionPageNew',\n      });\n\n// search.set('copy', false)\n\n      var GeoCodingAndDrawLayer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 999\n      });\n      map.addLayer(GeoCodingAndDrawLayer);\n\n      map.addControl(search);\n\n      // This sets on store\n      this.setVectorLayerSource(GeoCodingAndDrawLayer.getSource());\n\n// Select feature when click on the reference index\n      search.on('select', function (e) {\t// console.log(e);\n        // GeoCodingAndDrawLayer.getSource().clear();\n        removePreviousSearchFeature();\n        // Check if we get a geojson to describe the search\n        if (e.search.geojson) {\n          var format = new GeoJSON();\n          console.log('e.search.geojson')\n          console.log(e.search.geojson)\n          var f = format.readFeature(e.search.geojson, {\n            dataProjection: \"EPSG:4326\",\n            featureProjection: map.getView().getProjection()\n          });\n          delete e.search.geojson;\n          f.setProperties(e.search);\n          GeoCodingAndDrawLayer.getSource().addFeature(f);\n          var view = map.getView();\n          var resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n          var zoom = view.getZoomForResolution(resolution);\n          var center = ol_extent_getCenter(f.getGeometry().getExtent());\n          // redraw before zoom\n          setTimeout(function () {\n            view.animate({\n              center: center,\n              zoom: Math.min(zoom, 16)\n            });\n          }, 100);\n        } else {\n          map.getView().animate({\n            center: e.coordinate,\n            zoom: Math.max(map.getView().getZoom(), 16)\n          });\n        }\n\n        UpDateVectorLayerStyle();\n      });\n\n// Main control bar\n      var mainbar = new Bar();\n      mainbar.setPosition('top-left');\n      map.addControl(mainbar);\n// Edit control bar\n      var editbar = new Bar({\n        toggleOne: true,\t// one control active at the same time\n        group: false\t\t\t// group controls together\n      });\n      mainbar.addControl(editbar);\n\n// Add selection tool:\n//  1- a toggle control with a select interaction\n//  2- an option bar to delete / get information on the selected feature\n      var sbar = new Bar();\n      sbar.addControl(new OlExtButton({\n        html: '<i class=\"fa fa-times\"></i>',\n        title: \"Delete\",\n        handleClick: function () {\n          var features = selectCtrl.getInteraction().getFeatures();\n          if (!features.getLength()) info(\"Select an object first...\");\n          else info(features.getLength() + \" object(s) deleted.\");\n\n          features.forEach(function (f) {\n            console.log(f);\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          });\n          selectCtrl.getInteraction().getFeatures().clear();\n        }\n      }));\n\n\n      var selectCtrl = new OlExtToggle({\n        html: '<i class=\"fa fa-hand-pointer\"></i>',\n        title: \"Select\",\n        interaction: new OlSelect({\n          hitTolerance: 2,\n          style: new Style({\n            image: new CircleStyle({\n              radius: 5,\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              }),\n            }),\n            stroke: new Stroke({\n              color: [255, 0, 0, 1],\n              opacity: 1,\n              width: 2\n            }),\n            fill: new Fill({\n              color: '#e5e5ff50'\n            })\n            // Commented to only see the lines\n            //,fill: new ol.style.Stroke ({\n            //  color: [155, 155, 155, 0.4]\n            //})\n          })\n        }),\n        bar: sbar,\n        autoActivate: true,\n        active: true\n      });\n\n      editbar.addControl(selectCtrl);\n      this.setSelectInteractionObj(selectCtrl.getInteraction());\n// Add editing tools\n      var pedit = new OlExtToggle({\n        html: '<i class=\"fa fa-map-marker-alt\" ></i>',\n        title: 'Point',\n        interaction: new OlDraw({\n          type: 'Point',\n          source: GeoCodingAndDrawLayer.getSource()\n        })\n      });\n      editbar.addControl(pedit);\n\n\n      var fedit = new OlExtToggle({\n        html: '<i class=\"fa fa-draw-polygon\" ></i>',\n        title: 'Polygon',\n        interaction: new OlDraw({\n          type: 'Polygon',\n          source: GeoCodingAndDrawLayer.getSource(),\n          // Count inserted points\n          geometryFunction: function (coordinates, geometry) {\n            this.nbpts = coordinates[0].length;\n            if (geometry) geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            else geometry = new OLPolygon(coordinates);\n            return geometry;\n          }\n        }),\n        // Options bar ssociated with the control\n        bar: new Bar({\n          controls: [new OlExtTextButton({\n            html: 'undo',//'<i class=\"fa fa-mail-reply\"></i>',\n            title: \"undo last point\",\n            handleClick: function () {\n              if (fedit.getInteraction().nbpts > 1) fedit.getInteraction().removeLastPoint();\n            }\n          }),\n            new OlExtTextButton({\n              html: 'finish',\n              title: \"finish\",\n              handleClick: function () {\n                // Prevent null objects on finishDrawing\n                if (fedit.getInteraction().nbpts > 3) fedit.getInteraction().finishDrawing();\n              }\n            })\n          ]\n        })\n      });\n      editbar.addControl(fedit);\n\n\n      // fedit.getInteraction().on('drawend', function (e) {\n      //\n      //   console.log(e.feature);\n      //   console.log(e.feature);\n      //\n      //   // GeoCodingAndDrawLayer.getSource().removeFeature(e.feature);\n      //\n      //\n      // });\n\n      fedit.getInteraction().on('drawstart', function () {\n        GeoCodingAndDrawLayer.getSource().once('addfeature', handleAddFeature);\n      });\n\n      function handleAddFeature(evt) {\n        let coordi = evt.feature.getGeometry().getCoordinates();\n\n        const area = getArea(evt.feature.getGeometry());\n        // Sq.Km\n        let outputArea = Math.round((area / 1000000) * 100) / 100;\n        console.log(outputArea);\n\n        let li = new LineString(coordi);\n        const length = getLength(li);\n        // In Km\n        let outputLength = Math.round((length / 1000) * 100) / 100;\n        console.log(outputLength);\n        // GeoCodingAndDrawLayer.getSource().removeFeature(evt.feature);\n      }\n\n// Show info\n      function info(i) {\n        console.log(i);\n        // document.querySelector(\"#info\").innerHTML(i || \"\");\n      }\n\n\n      function UpDateVectorLayerStyle() {\n        GeoCodingAndDrawLayer.getSource().forEachFeature(function (feature) {\n          let StyleObj = null;\n          if (feature.getProperties().osm_id) {\n            StyleObj = [\n              new Style({\n                stroke: new Stroke({\n                  color: [0, 0, 0, 0],\n                  opacity: 1,\n                  width: 3\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff00'\n                })\n                // Commented to only see the lines\n                //,fill: new ol.style.Stroke ({\n                //  color: [155, 155, 155, 0.4]\n                //})\n              }),\n              // Dash white lines (second style, on the top)\n              new Style({\n                image: new Icon({\n                  anchor: [0.5, 46],\n                  anchorXUnits: 'fraction',\n                  anchorYUnits: 'pixels',\n                  src: ImageIcon,\n                  size: toSize([40, 45]),\n                  // offset:[20,20]\n                }),\n                stroke: new Stroke({\n                  color: [0, 0, 255, 1.0],\n                  opacity: 1,\n                  width: 3,\n                  lineDash: [4, 8, 4, 8]\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff40'\n                })\n              })\n            ];\n\n          } else {\n            StyleObj = new Style({\n              image: new CircleStyle({\n                radius: 5,\n                stroke: new Stroke({\n                  color: [255, 0, 0, 1],\n                  opacity: 1,\n                  width: 2\n                }),\n                fill: new Fill({\n                  color: '#e5e5ff50'\n                }),\n              }),\n              stroke: new Stroke({\n                color: [255, 0, 0, 1],\n                opacity: 1,\n                width: 2\n              }),\n              fill: new Fill({\n                color: '#e5e5ff50'\n              })\n              // Commented to only see the lines\n              //,fill: new ol.style.Stroke ({\n              //  color: [155, 155, 155, 0.4]\n              //})\n            });\n\n          }\n          feature.setStyle(StyleObj);\n\n        });\n      }\n\n      function removePreviousSearchFeature() {\n        var features = GeoCodingAndDrawLayer.getSource().getFeatures();\n        features.forEach(function (f) {\n          if (f.getProperties().osm_id) {\n            GeoCodingAndDrawLayer.getSource().removeFeature(f);\n          }\n        });\n        // console.log(features);\n      }\n    },\n    LayerSwitcherClick() {\n      this.drawer = true;\n    },\n    handleClose(done, e) {\n      console.log(e);\n\n      // this.$confirm('You still have unsaved data, proceed?')\n      //     .then(()=> {\n      //       done();\n      //     })\n      //     .catch(()=> {\n      //     });\n\n    },\n    addAdminLayers() {\n\n      let GeoServerWMSURL = GeoServerHost + '/geoserver/AirQuality/wms';\n      let WMSURLWithRequestParameter = GeoServerWMSURL + '?request=GetLegendGraphic&version=1.1.1&format=image/png&width=20&height=20&layer='\n\n      // let le1 = this.olExtLegentItem('Country Outline', 'Province', WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary')\n\n      let countryBoundary = new ImageLayer({\n        id: 'Country_Outline',\n        title: 'Country Outline',\n        visible: false,\n        legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_country_boundry',\n        zIndex: 6,\n        // OLEXTLegendObject: le1,\n        source: new ImageWMS({\n          url: GeoServerWMSURL,\n          crossOrigin: 'anonymous',\n          params: {'LAYERS': 'AirQuality:nepal_country_boundry'},\n          serverType: 'geoserver',\n        }),\n      });\n      // let le2 = this.olExtLegentItem('Province', 'Province', WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary')\n\n      let provinceBoundary = new ImageLayer({\n        id: 'Province',\n        title: 'Province',\n        visible: false,\n        legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_provincial_boundary',\n        zIndex: 5,\n        // OLEXTLegendObject: le2,\n        source: new ImageWMS({\n          url: GeoServerWMSURL,\n          crossOrigin: 'anonymous',\n          params: {'LAYERS': 'AirQuality:nepal_provincial_boundary'},\n          serverType: 'geoserver',\n        }),\n      });\n      // let le3 = this.olExtLegentItem('District', 'District', WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary')\n\n      let DistrictBoundary = new ImageLayer({\n        id: 'District',\n        title: 'District',\n        visible: false,\n        legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_district_boundary',\n        zIndex: 4,\n        // OLEXTLegendObject: le3,\n        source: new ImageWMS({\n          url: GeoServerWMSURL,\n          crossOrigin: 'anonymous',\n          params: {'LAYERS': 'AirQuality:nepal_district_boundary'},\n          serverType: 'geoserver',\n        }),\n      });\n      // let le4 = this.olExtLegentItem('Palika', 'Palika', WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary')\n\n      let PalikaBoundary = new ImageLayer({\n        id: 'Palika',\n        title: 'Palika',\n        visible: false,\n        legendPath: WMSURLWithRequestParameter + 'AirQuality:nepal_palika_boundary',\n        zIndex: 3,\n        // OLEXTLegendObject: le4,\n        source: new ImageWMS({\n          url: GeoServerWMSURL,\n          crossOrigin: 'anonymous',\n          params: {'LAYERS': 'AirQuality:nepal_palika_boundary'},\n          serverType: 'geoserver',\n        }),\n      });\n\n      // let that = this;\n      // countryBoundary.on('change:visible', AddRemoveLegendFunction);\n      // provinceBoundary.on('change:visible', AddRemoveLegendFunction);\n      // DistrictBoundary.on('change:visible', AddRemoveLegendFunction);\n      // PalikaBoundary.on('change:visible', AddRemoveLegendFunction);\n      this.mapObject.addLayer(countryBoundary);\n      this.mapObject.addLayer(provinceBoundary);\n      this.mapObject.addLayer(DistrictBoundary);\n      this.mapObject.addLayer(PalikaBoundary);\n      let l1 = new LayerSwitcher(\".layerCollection\", countryBoundary, true, true,);\n      let l2 = new LayerSwitcher(\".layerCollection\", provinceBoundary, true, true,);\n      let l3 = new LayerSwitcher(\".layerCollection\", DistrictBoundary, true, true,);\n      let l4 = new LayerSwitcher(\".layerCollection\", PalikaBoundary, true, true,);\n\n      l1.setVisible(true);\n      l2.setVisible(true);\n      l3.setVisible(true);\n      l4.setVisible(true);\n\n      // this.appendTimeSeriesLayerCollection(l1);\n      // this.appendTimeSeriesLayerCollection(l2);\n      // this.appendTimeSeriesLayerCollection(l3);\n      // this.appendTimeSeriesLayerCollection(l4);\n\n    },\n    olextPrintFunction() {\n      // Add a title control\n      this.mapObject.addControl(new CanvasTitle({\n        title: 'my title',\n        visible: false,\n        style: new Style({text: new Text({font: '20px \"Lucida Grande\",Verdana,Geneva,Lucida,Arial,Helvetica,sans-serif'})})\n      }));\n      // let legendItems=[];\n\n\n      // Add a legend to the print\n      var legendCtrl = new LegendControl({legend: this.mapControlVariable.LegendObject});\n      this.mapObject.addControl(legendCtrl);\n\n      // Add a ScaleLine control\n      this.mapObject.addControl(new CanvasScaleLine());\n\n      // Print control\n      var printControl = new PrintDialog({lang: 'en'});\n      printControl.setSize('A4');\n      printControl.setOrientation('landscape');\n      this.mapObject.addControl(printControl);\n\n\n      /* On print > save image file */\n      printControl.on(['print', 'error'], (e) => {\n        // let LegendImageArray = this.legendObjectCollection();\n        // LegendImageArray.forEach(function (ii) {\n        //   console.log(ii);\n        //   legendd.addItem(ii);\n        // });\n        // // legendItems = LegendImageArray;\n        // console.log(LegendImageArray);\n\n        // Print success\n        if (e.image) {\n          if (e.pdf) {\n            // Export pdf using the print info\n            var pdf = new jsPDF({\n              orientation: e.print.orientation,\n              unit: e.print.unit,\n              format: e.print.size\n            });\n            pdf.addImage(e.image, 'JPEG', e.print.position[0], e.print.position[0], e.print.imageWidth, e.print.imageHeight);\n            pdf.save(e.print.legend ? 'legend.pdf' : 'map.pdf');\n          } else {\n            // Save image as file\n            e.canvas.toBlob(function (blob) {\n              var name = (e.print.legend ? 'legend.' : 'map.') + e.imageType.replace('image/', '');\n              saveAs(blob, name);\n            }, e.imageType, e.quality);\n          }\n        } else {\n          console.warn('No canvas to export');\n        }\n      });\n\n    },\n  },\n  computed: {\n    ...mapState([\"TimeSeriesLayerCollection\"]),\n    getInventory() {\n      return dataSelect.Inventory;\n    },\n  },\n  created() {\n    // this.Inventory = this.$store.state.inventory;\n    this.drawer = true;\n  },\n  beforeMount() {\n\n  },\n  mounted() {\n    this.mapInitilization();\n    // this.addGeoCoding();\n    this.addGeoCodingAndInteractionBar();\n    // this.olextPrintFunction();\n\n    eventHub.$on('InventoryChange', () => {\n      this.changeInventory();\n    });\n    this.drawer = false;\n    // setTimeout(() => {\n    //   this.addAdminLayers();\n    // }, 2000);\n\n  },\n}\n</script>\n\n<style>\n#map-container2 {\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n}\n\n#map-container2 .ol-viewport {\n  border-radius: 5px;\n}\n\n#layerSwitcherDiv {\n  right: 0.5em;\n  top: 0.5em;\n  position: absolute;\n}\n\n#layerSwitcherDiv button {\n  line-height: unset;\n  border-radius: 1px;\n}\n\n/*.el-overlay {*/\n/*  position: fixed;*/\n/*  top: 0;*/\n/*  right: 0;*/\n/*  bottom: 0;*/\n/*  left: 0;*/\n/*  z-index: 2000;*/\n/*  height: 100%;*/\n/*  background-color: rgba(0, 0, 0, 0);*/\n/*}*/\n\n\n/* OSM Based Geocoding*/\n.ol-search ul li {\n  border-bottom: 1px solid lightgray;\n\n  padding: 10px 5px 10px 5px !important;\n  flex: 1;\n  max-width: 608px;\n  white-space: normal !important;\n  overflow: unset;\n  flex-grow: 1;\n  text-overflow: ellipsis;\n}\n\n.ol-search ul li:last-child {\n  border-bottom: none;\n  border-radius: 0px;\n}\n\n.ol-search ul {\n  list-style: none;\n  cursor: pointer;\n  padding: 0px 5px 0px 5px !important;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  clear: both;\n  cursor: pointer;\n  max-width: 618px;\n  overflow-x: hidden;\n  z-index: 1;\n  background: #fff;\n  font-size: 13px;\n}\n\n.ol-search {\n  z-index: 999;\n}\n\n.ol-search {\n  top: 4.1em;\n  left: 0.5em;\n  /*width: 500px;*/\n}\n\n.ol-search input {\n  width: 600px;\n}\n\n\n.ol-control.ol-bar {\n  left: 3.2em;\n  top: 6em;\n}\n\n.ol-control.ol-bar.ol-top.ol-left, .ol-control.ol-bar.ol-top.ol-right {\n  top: 6.5em;\n  transform: none;\n}\n\n</style>","import { render } from \"./mapComponentEmission.vue?vue&type=template&id=4070f67b\"\nimport script from \"./mapComponentEmission.vue?vue&type=script&lang=js\"\nexport * from \"./mapComponentEmission.vue?vue&type=script&lang=js\"\n\nimport \"./mapComponentEmission.vue?vue&type=style&index=0&id=4070f67b&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"card-box full-height full-width about-div\">\n    <div class=\"pannel-title\">\n      <h6 class=\"title-heading p-10\">Information\n        <span @click=\"RefreshInformation()\">\n                  <i class=\"fas fa-sync float-right refresh-information\"></i>\n        </span>\n      </h6>\n    </div>\n    <div class=\"information-body\">\n      <el-card shadow=\"never\" class=\"transition-box\" v-if=\"showStat ===false\">\n        Please select or draw a feature\n      </el-card>\n      <div class=\"informationShow\" v-if=\"showStat ===true\">\n        <h1 class=\"heading-layer-info\">{{ infoHeading }}</h1>\n        <br>\n        <el-table class=\"info-table-el table-div\" :data=\"tableDataStat\">\n          <el-table-column prop=\"StatName\" label=\"statName\" label-class-name=\"info-table\"></el-table-column>\n          <el-table-column prop=\"StatValue\" label=\"statValue\" label-class-name=\"info-table\"></el-table-column>\n        </el-table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n\nimport OLWKT from \"ol/format/WKT\";\nimport {mapActions, mapState} from \"vuex\";\nimport eventHub from \"../utils/utils\";\n\nexport default {\n  name: \"EmissionStatistics\",\n  data() {\n    return {\n      showStat: false,\n      infoHeading: '',\n      tableDataStat:[]\n    }\n  },\n  computed: {\n    ...mapState([\"selectInteractionObj\", \"TimeSeriesLayerCollection\"]),\n  },\n  methods: {\n    ...mapActions([\"GetLayerStatInfo\"]),\n    async RefreshInformation() {\n\n      if (this.selectInteractionObj) {\n        if (this.selectInteractionObj.getFeatures().getLength()) {\n          var wktfeaturegeom, geometryType;\n          var features = this.selectInteractionObj.getFeatures();\n          features.forEach(function (f) {\n            var format = new OLWKT();\n            wktfeaturegeom = format.writeGeometry(f.getGeometry(), {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            });\n            geometryType = f.getGeometry().getType();\n          });\n          var selectedLayr = this.TimeSeriesLayerCollection.filter(function (x) {\n            var checkLayer = x.getProperties().visible === true;\n            return checkLayer;\n          });\n          if (selectedLayr.length) {\n            let layerIndex = null;\n            let InterestedLayer = null;\n            selectedLayr.forEach(function (cobj, ind) {\n              let currentLayerIndex = cobj.getLayer().getProperties().zIndex;\n              let currentLayerId = cobj.getLayer().getProperties()\n              if (ind == 0) {\n                InterestedLayer = currentLayerId;\n                layerIndex = currentLayerIndex;\n              } else {\n                if (currentLayerIndex > layerIndex) {\n                  layerIndex = currentLayerIndex;\n                  InterestedLayer = currentLayerId;\n                }\n              }\n            });\n            let Param = {\n              geometryType: geometryType,\n              wkt: wktfeaturegeom,\n              layerDetail: InterestedLayer.id.split(\"___\")\n            };\n\n            let response = await this.GetLayerStatInfo(Param);\n            // this.min = response.Minimum;\n            // this.max = response.Maximum;\n            // this.sum = response.sum;\n            this.showStat = true;\n            this.infoHeading = InterestedLayer.id.split(\"___\").join(\" \")+\"(kt)\";\n            this.tableDataStat=response;\n            console.log(response);\n          } else {\n            this.showStat = false;\n            this.$notify({\n              title: 'Warning',\n              message: 'Please Add a layer first',\n              type: 'warning'\n            });\n          }\n        } else {\n          this.showStat = false;\n          this.$notify({\n            title: 'Warning',\n            message: 'Please select a feature on map.',\n            type: 'warning'\n          });\n        }\n      }\n    }\n  },\n    beforeCreate() {\n\n    eventHub.$on('setDefaultEmissionStatistics', () => {\n      this.RefreshInformation();\n    });\n\n  },\n};\n\n</script>\n\n\n<style>\n.transition-box {\n  margin-bottom: 10px;\n  width: 100%;\n  border-radius: 4px;\n  background-color: rgba(64, 158, 255, 0);\n  text-align: center;\n  color: #ee0000;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  margin-right: 20px;\n  border-width: 1px !important;\n  border-color: #b51816;\n}\n\n.information-body {\n  padding: 10px;\n}\n\n.float-right {\n  float: right;\n}\n\n.p-10 {\n  padding-right: 10px;\n}\n\n.refresh-information {\n  cursor: pointer;\n}\n\nh1.heading-layer-info {\n  text-align: center;\n  padding: 10px;\n}\n\n.info-table-el .info-table{\n  display: none;\n}\n.table-div{\n  width: 100%;\n}\n\n</style>\n\n","import { render } from \"./EmissionStatistics.vue?vue&type=template&id=90a7ac28\"\nimport script from \"./EmissionStatistics.vue?vue&type=script&lang=js\"\nexport * from \"./EmissionStatistics.vue?vue&type=script&lang=js\"\n\nimport \"./EmissionStatistics.vue?vue&type=style&index=0&id=90a7ac28&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./TabBodyEmission.vue?vue&type=template&id=e4c71dbe&scoped=true\"\nimport script from \"./TabBodyEmission.vue?vue&type=script&lang=js\"\nexport * from \"./TabBodyEmission.vue?vue&type=script&lang=js\"\n\nimport \"./TabBodyEmission.vue?vue&type=style&index=0&id=e4c71dbe&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e4c71dbe\"]])\n\nexport default __exports__","import { render } from \"./Tabs.vue?vue&type=template&id=f7c4f9f4\"\nimport script from \"./Tabs.vue?vue&type=script&lang=js\"\nexport * from \"./Tabs.vue?vue&type=script&lang=js\"\n\nimport \"./Tabs.vue?vue&type=style&index=0&id=f7c4f9f4&lang=scss\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Tabs.vue?vue&type=style&index=0&id=f7c4f9f4&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapControlsRecent.vue?vue&type=style&index=0&id=0005bb3c&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TabBodyArchive.vue?vue&type=style&index=0&id=15169806&scoped=true&lang=css\"","<template>\n  <div class=\"all-conts\">\n    <el-container class=\"cont-outer\">\n      <el-header>\n        <NavBar></NavBar>\n      </el-header>\n      <el-container class=\"sidebar-main\">\n        <Tabs :activeTab=\"currentTab\"></Tabs>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\n\nimport NavBar from \"../components/NavBar\";\nimport Tabs from \"../components/Tabs\"\nimport {ReDirectToSmogAppDotCom,reDirectHTTPSToHTTP} from \"../utils/ReDirect\";\n// import emissionTabBody from \"../components/emissionTabBody\";\n\n// https://codepen.io/suman111/pen/ExmdwxP?editors=0010\n\nexport default {\n  name: \"current\",\n\n  components: {\n    NavBar,\n    Tabs,\n  },\n\n  data() {\n    return {\n      selectedTab: 'Forecast',\n    };\n  },\n  computed: {\n    currentTab() {\n      return this.getCurrentTab()\n    },\n  },\n  methods: {\n    getCurrentTab() {\n      return this.selectedTab;\n    }\n  },\n  beforeCreate() {\n    ReDirectToSmogAppDotCom();\n    reDirectHTTPSToHTTP();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"../utils/main\";\n\n\n</style>\n","import { render } from \"./airqualitynpForecast.vue?vue&type=template&id=64de3a80\"\nimport script from \"./airqualitynpForecast.vue?vue&type=script&lang=js\"\nexport * from \"./airqualitynpForecast.vue?vue&type=script&lang=js\"\n\nimport \"./airqualitynpForecast.vue?vue&type=style&index=0&id=64de3a80&lang=scss\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createStore} from \"vuex\";\nimport {\n    getCityData,\n    PostSlicedFromCatalog,\n    getGeoJsonForOneSatation,\n    PostGetStationData,\n    PostGet2DImage, TimeSeriesRasterQuery\n} from \"../api/airquality\";\n\nexport default createStore({\n    state() {\n        return {\n            CascaderInventriesComparison: [],\n            CascaderSectorContribution: [],\n            CascaderSectorShare: [],\n            CascaderTimeSeries: [],\n            SelectedLayerObj: null,\n\n            selectInteraction: null,\n            mapObject: null,\n            TimeSeriesLayerCollection: [],\n            WorkingVectorLayer: null,\n            mapControlVariable: {\n                //for printing Legend Object\n                LegendObject: null,\n                LegendItemList: [],\n\n                data_period: 'Forecast',\n                select_by: 'Parameter',\n\n                // Location parameter\n                location_by: 'default_locations',\n                default_location: '',\n                is_AOI_Feature_selected: false,\n                location_by_wktValue: '',\n                location_by_geometryType: '',\n                location_by_default_level_value: '',\n\n                location_by_pollutant_value1: [],\n                location_by_pollutant_value2: [],\n                location_by_pollutant_value3: [],\n                location_by_pollutant_value4: [],\n\n                //parameter parameter\n                radioValue: 1,\n                parameter_by_pollutant_value: [],\n                is_parameter_by_pollutant_value_stationData: false,\n\n                parameter_by_pollutant_value_stationData_val1: '',\n                parameter_by_pollutant_value_stationData_val2: '',\n                parameter_by_pollutant_value_stationData_val3: '',\n                parameter_by_pollutant_value_stationData_val4: '',\n\n                parameter_by_location__1: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__2: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__3: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n                parameter_by_location__4: {\n                    location_by: 'default_locations',\n                    default_location: '',\n                    is_AOI_Feature_selected: false,\n                    wktValue: '',\n                    geometryType: '',\n                    featureExtent: '',\n                    default_level_value: '',\n                },\n            },\n\n            PrintMapComponentData: {\n                PrintMapDialogVisible: false\n            }\n        };\n    },\n    mutations: {\n        setCascaderInventriesComparison(state, payload) {\n            state.CascaderInventriesComparison = payload;\n        }, setCascaderSectorContribution(state, payload) {\n            state.CascaderSectorContribution = payload;\n        }, setCascaderSectorShare(state, payload) {\n            state.CascaderSectorShare = payload;\n        }, setCascaderTimeSeries(state, payload) {\n            state.CascaderTimeSeries = payload;\n        }, setSelectedLayerObj(state, payload) {\n            state.SelectedLayerObj = payload;\n        }, setSelectInteraction(state, payload) {\n            state.selectInteraction = payload;\n        }, setMapObject(state, payload) {\n            state.mapObject = payload;\n        }, setWorkingVectorLayer(state, payload) {\n            state.WorkingVectorLayer = payload;\n        },\n        appendTimeSeriesLayerCollection(state, payload) {\n            state.TimeSeriesLayerCollection.push(payload);\n        },\n\n        removeLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent('remove',payload);\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'remove',target:payload});\n\n            // state.mapControlVariable.LegendObject.removeItem(payload);\n            state.mapControlVariable.LegendObject.getItems().remove(payload);\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendObject.refresh();\n\n\n            let index = false;\n            state.mapControlVariable.LegendItemList.forEach(function (it, idx) {\n                if (it.id == payload.id) {\n                    index = idx;\n                }\n            });\n            if (index !== false) {\n                state.mapControlVariable.LegendItemList.splice(index, 1);\n            }\n\n            state.mapControlVariable.LegendObject.getItems().clear();\n            state.mapControlVariable.LegendItemList.forEach((it) => {\n                state.mapControlVariable.LegendObject.addItem(it);\n            });\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n        addLegend(state, payload) {\n            // state.mapControlVariable.LegendObject.getItems().dispatchEvent({type:'add',target:payload});\n            state.mapControlVariable.LegendItemList.push(payload);\n            state.mapControlVariable.LegendObject.addItem(payload);\n            state.mapControlVariable.LegendObject.refresh();\n\n        },\n    },\n    actions: {\n        // async getCascaderOptions(context) {\n        //     let data = await getCascaderOptions();\n        //     context.commit(\"setCascaderInventriesComparison\", data.InventriesComparison)\n        //     context.commit(\"setCascaderSectorContribution\", data.SectorContribution)\n        //     context.commit(\"setCascaderSectorShare\", data.SectorShare)\n        //     context.commit(\"setCascaderTimeSeries\", data.TimeSeries)\n        //     return data\n        // },\n        // async PostChartDataProcess(context, param) {\n        //     let data = await PostChartDataProcess(param);\n        //     return data;\n        // },\n        // async GetLayerStatInfo(context, param) {\n        //     let data = await GETLayerInfoStat(param);\n        //     return data;\n        // },\n        async getCityData(context, param) {\n            let data = await getCityData(param);\n            return data;\n        },\n        async getGeoJsonForOneSatation(context, stringParam) {\n            let data = await getGeoJsonForOneSatation(stringParam);\n            return data;\n        },\n        async PostSlicedFromCatalog(context, param) {\n            let data = await PostSlicedFromCatalog(param);\n            return data;\n        },\n        async PostGetStationData(context, param) {\n            let data = await PostGetStationData(param);\n            return data;\n        },\n        async TimeSeriesRasterQuery(context, param) {\n            let data = await TimeSeriesRasterQuery(param);\n            return data;\n        },\n        async PostGet2DImage(context, param) {\n            let data = await PostGet2DImage(param);\n            return data;\n        },\n    },\n    getters: {\n        getLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                // console.log(TimeSeriesLayerCollection[i].getProperties().id);\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i].getLayer();\n                    break;\n                }\n            }\n            return layer;\n        }, getBindedLayer: (state) => (id) => {\n            var layer;\n            for (let i = 0; i < state.TimeSeriesLayerCollection.length; i++) {\n                if (id == state.TimeSeriesLayerCollection[i].getProperties().id) { ///popDensityLayer.getProperties().id\n                    layer = state.TimeSeriesLayerCollection[i];\n                    break;\n                }\n            }\n            return layer;\n        }\n    },\n    modules: {},\n});","import { createApp } from \"vue\";\nimport emission from \"./views/airqualitynpForecast.vue\";\nimport store from \"./store/modules/airqualityForecast\";\nimport ElementPlus from 'element-plus';\nimport 'element-plus/theme-chalk/index.css';\nimport 'ol-ext/dist/ol-ext.css'\n\nimport {library,dom} from \"@fortawesome/fontawesome-svg-core\";\nimport {faHandPointer,faTimes,faMapMarkerAlt,faDrawPolygon,faPrint,faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nlibrary.add(faHandPointer);\nlibrary.add(faTimes);\nlibrary.add(faMapMarkerAlt);\nlibrary.add(faDrawPolygon);\nlibrary.add(faPrint);\nlibrary.add(faInfoCircle);\ndom.watch();\n\n\nconst app = createApp(emission);\napp.component(\"font-awesome-icon\", FontAwesomeIcon);\napp.use(store);\napp.use(ElementPlus);\napp.mount('#app');\n\n","import {getApiWithoutToken,postApiWithoutToken} from './api';\nimport {Action} from '../actionType';\n// import {ThreddsServer} from '../../config';\n\nexport async function getCityData(){\n        const action = Action.CityData\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n\nexport async function getGeoJsonForOneSatation(stringParam){\n        const action = Action.getGeoJsonForOneSatation+stringParam\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n\n\nexport async function PostSlicedFromCatalog(param){\n        const action = Action.SlicedFromCatalog\n        const response = await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function PostGetStationData(param){\n        const action = Action.commonAPI\n        const response = await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function PostGet2DImage(param){\n        const action = Action.GetMapImage\n        const response = await postApiWithoutToken(action,param);\n        response.image=Action.Base+'/'+Action.GetImage+ \"?ImageName=\" + response.image\n        return response;\n}\n\nexport async function TimeSeriesRasterQuery(param){\n        const action = Action.TimeSeriesRasterQuery\n        const response = await postApiWithoutToken(action,param);\n        return response;\n}\n\nexport async function getDefaultGroundObservation(param){\n        const action = Action.defaultObservationStation+\"?typeName=\" + param.typeName + \"&startDate=\" + param.startDate+ \"&endDate=\" + param.endDate\n        const response = await getApiWithoutToken(action);\n        return response;\n}\n","<template>\n  <nav class=\"navbar navbar-light template-nabar full-height\">\n    <div class=\"nav-logo-image flexBox\">\n      <div class=\"\">\n        <img class=\"logo-image-style\" src=\"@/assets/logo-icimod.png\" alt=\"\">\n      </div>\n      <div class=\"clearfix hack logo\" style=\"text-align:left; margin-left: 71px;\">\n        <p style=\"margin-top: 0px;\">\n\n\n        </p>\n\n      </div>\n    </div>\n    <a class=\"navbar-brand flexBox\" href=\"\"> Air Quality Watch - HKH</a>\n    <div class=\"col-md-5 flexBox infoIconAbout\">\n      <el-button type=\"primary\" @click=\"centerDialogVisible = true\">\n        <font-awesome-icon icon=\"info-circle\"/>\n      </el-button>\n    </div>\n    <el-dialog\n        title=\"Air Quality Information System\"\n        v-model=\"centerDialogVisible\"\n        width=\"75%\"\n        center>\n      <div class=\"about-body\">\n\n        <h3 class=\"headingPara\">About</h3>\n\n        <p class=\"aboutDetPara\">\n          ICIMOD is a regional intergovernmental learning and knowledge-sharing centre serving the eight regional member\n          countries of the Hindu Kush Himalaya (HKH) – Afghanistan, Bangladesh, Bhutan, China, India, Myanmar, Nepal,\n          and Pakistan. Working in partnership with regional and international organizations, ICIMOD aims to influence\n          policy and practices to meet environmental and livelihood challenges emerging in the HKH. ICIMOD provides a\n          platform for researchers, practitioners, and policy makers from the region and around the globe to generate\n          and share knowledge, support evidence-based decision making, and encourage regional cooperation.\n        </p>\n        <p class=\"aboutDetPara\">\n          ICIMOD works through its six regional programmes: 1) Adaptation and Resilience Building, 2) Transboundary\n          Landscapes, 3) River Basins and Cryosphere, 4) Atmosphere, 5) Mountain Environment Regional Information\n          System, and 6) Mountain Knowledge and Action Networks. These regional programmes are supported by four\n          thematic areas – Livelihoods, Ecosystem Services, Water and Air, and Geospatial Solutions – and underpinned by\n          the Knowledge Management and Communication (KMC) Unit. The Regional Atmosphere Programme involves in\n          identifying, testing, and piloting mitigation solutions; building capacity and outreach; fostering regional\n          collaboration and building cross-border networks; and contributing to policy at local, national, regional, and\n          global levels.\n        </p>\n        <p class=\"aboutDetPara\">\n          The Atmospheric Watch Initiative (AWI) was established in 2013 as part of our regional programme on\n          Atmosphere. Until December 2019, this Initiative was known as the Atmosphere Initiative. AWI’s goal is to\n          promote the adoption of effective measures and policies to reduce air pollution and its impacts within the HKH\n          through improved knowledge and enhanced capacity of our regional partners. Its work includes improving\n          scientific understanding of emissions sources, atmospheric processes and change, and air pollution impacts in\n          the HKH. The initiative is involved in identifying, testing, and piloting mitigation solutions; building\n          capacity and outreach; fostering regional collaboration and building cross-border networks; and contributing\n          to policy at local, national, regional, and global levels.\n        </p>\n        <p class=\"aboutDetPara\">\n          AWI is developing an integrated information platform linking air quality data from various platforms for\n          enhanced decision support in the region. This open source platform provides data analysis support to\n          professionals responsible for air quality management and regulators. Users of this system will be able to\n          compare different pollutants as well as single pollutant observation from different publicly available data\n          repositories (in-situ, satellite, model) giving a wider understanding of the observed situation.\n        </p>\n        <h3 class=\"headingPara\">Acknowledgement for Current Data Source</h3>\n        <ul>\n          <li> Ground-based observation –\n            <el-link type=\"primary\" href=\"https://pollution.gov.np/portal/#/home\">Atmospheric\n              Department of Environment Nepal\n            </el-link>\n            ,\n            <el-link type=\"primary\" href=\"https://www.airnow.gov/international/us-embassies-and-consulates/\"> AirNow\n            </el-link>\n          </li>\n          <li>Satellite products –\n            <el-link type=\"primary\" href=\"https://modis.gsfc.nasa.gov/data/\"> MODIS\n            </el-link>\n            ,\n            <el-link type=\"primary\" href=\"https://sentinel.esa.int/web/sentinel/sentinel-data-access\"> TROPOMI\n            </el-link>\n          </li>\n          <li>Air quality models –\n            <el-link type=\"primary\" href=\"https://gmao.gsfc.nasa.gov/weather_prediction/GEOS-CF/data_access/\"> GEOS-CF\n            </el-link>\n          </li>\n          <li>Emission inventory –\n            <el-link type=\"primary\" href=\"https://www.nies.go.jp/REAS/\"> REAS\n            </el-link>\n            ,\n            <el-link type=\"primary\" href=\"https://edgar.jrc.ec.europa.eu/dataset_htap_v2\"> EDGAR-HTAP\n            </el-link>\n            ,\n            <el-link type=\"primary\" href=\"https://gains.iiasa.ac.at/models/\"> GAINS\n            </el-link>\n          </li>\n        </ul>\n\n        <h3 class=\"headingPara\">Pollutants</h3>\n\n        <ul>\n          <li> Particulate Pollutants – PM2.5, PM10, PM1, TSP, AOD</li>\n          <li>Gaseous Pollutants – CO, NOx, SO2, O3</li>\n        </ul>\n\n\n        <h3 class=\"headingPara\">Data Categories</h3>\n        <ul>\n          <li>Recent (Last 24 hours)</li>\n          <li>Archive (Past 1 week)</li>\n          <li>Forecast (Next 48 hours),</li>\n          <li>Emission Inventory (Annual)</li>\n        </ul>\n\n\n        <h3 class=\"headingPara\">Contact</h3>\n        <ul>\n          <li>Bhupesh Adhikary</li>\n          <li>Senior Air Quality Specialist, Water and Air</li>\n          <li>ICIMOD</li>\n          <li>bhupesh.adhikary@icimod.org</li>\n        </ul>\n\n        <h3 class=\"headingPara\">Disclaimer!</h3>\n        <ul>\n          <li>\n            Quality of the datasets are attributed to original data provider quality assurance/quality control.\n            Additional datasets continue to be added as and when they are readily available.\n          </li>\n        </ul>\n      </div>\n      <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button class=\"cancel-dialog\" @click=\"centerDialogVisible = false\">Cancel</el-button>\n      </span>\n      </template>\n    </el-dialog>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: \"NavBar\",\n  data() {\n    return {\n      centerDialogVisible: false,\n      LangVal: true\n    };\n  }\n}\n</script>\n\n<style scoped>\n.template-nabar {\n  background-color: #007196;\n  overflow: hidden;\n}\n\n.navbar {\n  position: relative;\n  display: -ms-flexbox;\n  display: flex;\n  flex-direction: row;\n  -ms-flex-align: center;\n  align-items: center;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n}\n\n.flexBox {\n  flex: 33.33%\n}\n\n.full-height {\n  height: 100%;\n}\n\n.template-nabar .navbar-brand {\n  /* padding-bottom: .3125rem; */\n  /* margin-right: 1rem; */\n  font-size: 1.7rem;\n  /* line-height: inherit; */\n  /* white-space: nowrap; */\n}\n\n.template-nabar a.navbar-brand {\n  color: white !important;\n}\n\n.navbar-brand {\n  display: inline-block;\n  padding-top: .3125rem;\n  padding-bottom: .3125rem;\n  margin-right: 1rem;\n  font-size: 1.25rem;\n  line-height: inherit;\n  white-space: nowrap;\n}\n\na {\n  color: #007bff;\n  text-decoration: none;\n  background-color: transparent;\n}\n\n.navbar-brand {\n  margin-left: 1rem;\n}\n\n.nav-logo-image {\n  margin-right: 15px;\n  margin-top: 2px;\n  margin-left: 47px;\n}\n\n.logo-image-style {\n  height: 40px;\n  float: left;\n}\n\n.nav-bar-font {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  font-feature-settings: normal;\n  font-kerning: auto;\n  font-optical-sizing: auto;\n  font-stretch: 100%;\n  font-style: normal;\n  font-variant-caps: normal;\n  font-variant-east-asian: normal;\n  font-variant-ligatures: normal;\n  font-variant-numeric: normal;\n  font-variation-settings: normal;\n  line-height: 1.2;\n}\n\n.navbar-brand.flexBox {\n  text-align: center;\n}\n\n.col-md-5.flexBox.infoIconAbout .el-button {\n  border-color: #4192ac;\n}\n\n.headingPara {\n  font-weight: bold;\n}\n\n.aboutDetPara {\n  text-align: justify;\n}\n\n.about-body ul {\n  list-style-type: none;\n}\n\n</style>","import { render } from \"./NavBar.vue?vue&type=template&id=1beb27cd&scoped=true\"\nimport script from \"./NavBar.vue?vue&type=script&lang=js\"\nexport * from \"./NavBar.vue?vue&type=script&lang=js\"\n\nimport \"./NavBar.vue?vue&type=style&index=0&id=1beb27cd&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/suman/tethys3Apps/tethysapp-airquality/tethysapp/airquality/vairquality/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1beb27cd\"]])\n\nexport default __exports__","module.exports = __webpack_public_path__ + \"static/airquality/images/usembassyPm2p5.jpg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./airqualitynpRecent.vue?vue&type=style&index=0&id=466adae8&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapControlsForecast.vue?vue&type=style&index=0&id=31601d0e&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./NavBar.vue?vue&type=style&index=0&id=1beb27cd&scoped=true&lang=css\"","module.exports = __webpack_public_path__ + \"static/airquality/images/rgblegend.jpg\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./mapComponentArchive.vue?vue&type=style&index=0&id=27dbe1b4&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./EmissionStatistics.vue?vue&type=style&index=0&id=90a7ac28&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./selectLocation.vue?vue&type=style&index=0&id=26900d22&lang=scss\""],"sourceRoot":""}